<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1126" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1109.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1109.00"> </text><svg id="frames" x="10" width="1180" total_samples="94538028685"><g><title>__GI___access (10,377,997 samples, 0.01%)</title><rect x="0.0109%" y="981" width="0.0110%" height="15" fill="rgb(227,0,7)" fg:x="10290227" fg:w="10377997"/><text x="0.2609%" y="991.50"></text></g><g><title>[unknown] (10,377,997 samples, 0.01%)</title><rect x="0.0109%" y="965" width="0.0110%" height="15" fill="rgb(217,0,24)" fg:x="10290227" fg:w="10377997"/><text x="0.2609%" y="975.50"></text></g><g><title>[unknown] (10,377,997 samples, 0.01%)</title><rect x="0.0109%" y="949" width="0.0110%" height="15" fill="rgb(221,193,54)" fg:x="10290227" fg:w="10377997"/><text x="0.2609%" y="959.50"></text></g><g><title>[unknown] (10,377,997 samples, 0.01%)</title><rect x="0.0109%" y="933" width="0.0110%" height="15" fill="rgb(248,212,6)" fg:x="10290227" fg:w="10377997"/><text x="0.2609%" y="943.50"></text></g><g><title>[unknown] (10,377,997 samples, 0.01%)</title><rect x="0.0109%" y="917" width="0.0110%" height="15" fill="rgb(208,68,35)" fg:x="10290227" fg:w="10377997"/><text x="0.2609%" y="927.50"></text></g><g><title>[unknown] (10,377,997 samples, 0.01%)</title><rect x="0.0109%" y="901" width="0.0110%" height="15" fill="rgb(232,128,0)" fg:x="10290227" fg:w="10377997"/><text x="0.2609%" y="911.50"></text></g><g><title>[unknown] (10,377,997 samples, 0.01%)</title><rect x="0.0109%" y="885" width="0.0110%" height="15" fill="rgb(207,160,47)" fg:x="10290227" fg:w="10377997"/><text x="0.2609%" y="895.50"></text></g><g><title>[unknown] (10,377,997 samples, 0.01%)</title><rect x="0.0109%" y="869" width="0.0110%" height="15" fill="rgb(228,23,34)" fg:x="10290227" fg:w="10377997"/><text x="0.2609%" y="879.50"></text></g><g><title>FcConfigGetFilename (13,826,232 samples, 0.01%)</title><rect x="0.0109%" y="1013" width="0.0146%" height="15" fill="rgb(218,30,26)" fg:x="10290227" fg:w="13826232"/><text x="0.2609%" y="1023.50"></text></g><g><title>[libfontconfig.so.1.12.1] (13,826,232 samples, 0.01%)</title><rect x="0.0109%" y="997" width="0.0146%" height="15" fill="rgb(220,122,19)" fg:x="10290227" fg:w="13826232"/><text x="0.2609%" y="1007.50"></text></g><g><title>[libexpat.so.1.9.1] (10,343,394 samples, 0.01%)</title><rect x="0.0401%" y="917" width="0.0109%" height="15" fill="rgb(250,228,42)" fg:x="37948948" fg:w="10343394"/><text x="0.2901%" y="927.50"></text></g><g><title>[libexpat.so.1.9.1] (24,167,926 samples, 0.03%)</title><rect x="0.0292%" y="933" width="0.0256%" height="15" fill="rgb(240,193,28)" fg:x="27572918" fg:w="24167926"/><text x="0.2792%" y="943.50"></text></g><g><title>XML_ParseBuffer (27,624,298 samples, 0.03%)</title><rect x="0.0292%" y="997" width="0.0292%" height="15" fill="rgb(216,20,37)" fg:x="27572918" fg:w="27624298"/><text x="0.2792%" y="1007.50"></text></g><g><title>[libexpat.so.1.9.1] (27,624,298 samples, 0.03%)</title><rect x="0.0292%" y="981" width="0.0292%" height="15" fill="rgb(206,188,39)" fg:x="27572918" fg:w="27624298"/><text x="0.2792%" y="991.50"></text></g><g><title>[libexpat.so.1.9.1] (27,624,298 samples, 0.03%)</title><rect x="0.0292%" y="965" width="0.0292%" height="15" fill="rgb(217,207,13)" fg:x="27572918" fg:w="27624298"/><text x="0.2792%" y="975.50"></text></g><g><title>[libexpat.so.1.9.1] (27,624,298 samples, 0.03%)</title><rect x="0.0292%" y="949" width="0.0292%" height="15" fill="rgb(231,73,38)" fg:x="27572918" fg:w="27624298"/><text x="0.2792%" y="959.50"></text></g><g><title>[libfontconfig.so.1.12.1] (41,447,540 samples, 0.04%)</title><rect x="0.0255%" y="1013" width="0.0438%" height="15" fill="rgb(225,20,46)" fg:x="24116459" fg:w="41447540"/><text x="0.2755%" y="1023.50"></text></g><g><title>[libfontconfig.so.1.12.1] (58,727,733 samples, 0.06%)</title><rect x="0.0109%" y="1029" width="0.0621%" height="15" fill="rgb(210,31,41)" fg:x="10290227" fg:w="58727733"/><text x="0.2609%" y="1039.50"></text></g><g><title>&lt;T as plotters::style::font::font_desc::IntoFont&gt;::into_font (13,824,535 samples, 0.01%)</title><rect x="0.0933%" y="1013" width="0.0146%" height="15" fill="rgb(221,200,47)" fg:x="88166683" fg:w="13824535"/><text x="0.3433%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13,824,535 samples, 0.01%)</title><rect x="0.0933%" y="997" width="0.0146%" height="15" fill="rgb(226,26,5)" fg:x="88166683" fg:w="13824535"/><text x="0.3433%" y="1007.50"></text></g><g><title>&lt;plotters::style::font::font_desc::FontDesc as core::convert::From&lt;(&amp;str,T)&gt;&gt;::from (13,824,535 samples, 0.01%)</title><rect x="0.0933%" y="981" width="0.0146%" height="15" fill="rgb(249,33,26)" fg:x="88166683" fg:w="13824535"/><text x="0.3433%" y="991.50"></text></g><g><title>plotters::style::font::font_desc::FontDesc::new (13,824,535 samples, 0.01%)</title><rect x="0.0933%" y="965" width="0.0146%" height="15" fill="rgb(235,183,28)" fg:x="88166683" fg:w="13824535"/><text x="0.3433%" y="975.50"></text></g><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::new (13,824,535 samples, 0.01%)</title><rect x="0.0933%" y="949" width="0.0146%" height="15" fill="rgb(221,5,38)" fg:x="88166683" fg:w="13824535"/><text x="0.3433%" y="959.50"></text></g><g><title>plotters::style::font::ttf::load_font_data (13,824,535 samples, 0.01%)</title><rect x="0.0933%" y="933" width="0.0146%" height="15" fill="rgb(247,18,42)" fg:x="88166683" fg:w="13824535"/><text x="0.3433%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,824,535 samples, 0.01%)</title><rect x="0.0933%" y="917" width="0.0146%" height="15" fill="rgb(241,131,45)" fg:x="88166683" fg:w="13824535"/><text x="0.3433%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,824,535 samples, 0.01%)</title><rect x="0.0933%" y="901" width="0.0146%" height="15" fill="rgb(249,31,29)" fg:x="88166683" fg:w="13824535"/><text x="0.3433%" y="911.50"></text></g><g><title>plotters::style::font::ttf::load_font_data::_{{closure}} (10,367,125 samples, 0.01%)</title><rect x="0.0969%" y="885" width="0.0110%" height="15" fill="rgb(225,111,53)" fg:x="91624093" fg:w="10367125"/><text x="0.3469%" y="895.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_best_match (10,367,125 samples, 0.01%)</title><rect x="0.0969%" y="869" width="0.0110%" height="15" fill="rgb(238,160,17)" fg:x="91624093" fg:w="10367125"/><text x="0.3469%" y="879.50"></text></g><g><title>font_kit::source::Source::select_best_match (10,367,125 samples, 0.01%)</title><rect x="0.0969%" y="853" width="0.0110%" height="15" fill="rgb(214,148,48)" fg:x="91624093" fg:w="10367125"/><text x="0.3469%" y="863.50"></text></g><g><title>[unknown] (115,807,252 samples, 0.12%)</title><rect x="0.0000%" y="1045" width="0.1225%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="115807252"/><text x="0.2500%" y="1055.50"></text></g><g><title>rkl::plot::plot_comparision::plot_comparison (27,640,569 samples, 0.03%)</title><rect x="0.0933%" y="1029" width="0.0292%" height="15" fill="rgb(209,103,24)" fg:x="88166683" fg:w="27640569"/><text x="0.3433%" y="1039.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present (10,368,464 samples, 0.01%)</title><rect x="0.1115%" y="1013" width="0.0110%" height="15" fill="rgb(229,88,8)" fg:x="105438788" fg:w="10368464"/><text x="0.3615%" y="1023.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (10,368,464 samples, 0.01%)</title><rect x="0.1115%" y="997" width="0.0110%" height="15" fill="rgb(213,181,19)" fg:x="105438788" fg:w="10368464"/><text x="0.3615%" y="1007.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present::_{{closure}} (10,368,464 samples, 0.01%)</title><rect x="0.1115%" y="981" width="0.0110%" height="15" fill="rgb(254,191,54)" fg:x="105438788" fg:w="10368464"/><text x="0.3615%" y="991.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::present (10,368,464 samples, 0.01%)</title><rect x="0.1115%" y="965" width="0.0110%" height="15" fill="rgb(241,83,37)" fg:x="105438788" fg:w="10368464"/><text x="0.3615%" y="975.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (10,368,464 samples, 0.01%)</title><rect x="0.1115%" y="949" width="0.0110%" height="15" fill="rgb(233,36,39)" fg:x="105438788" fg:w="10368464"/><text x="0.3615%" y="959.50"></text></g><g><title>image::dynimage::save_buffer (10,368,464 samples, 0.01%)</title><rect x="0.1115%" y="933" width="0.0110%" height="15" fill="rgb(226,3,54)" fg:x="105438788" fg:w="10368464"/><text x="0.3615%" y="943.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (10,368,464 samples, 0.01%)</title><rect x="0.1115%" y="917" width="0.0110%" height="15" fill="rgb(245,192,40)" fg:x="105438788" fg:w="10368464"/><text x="0.3615%" y="927.50"></text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (10,368,464 samples, 0.01%)</title><rect x="0.1115%" y="901" width="0.0110%" height="15" fill="rgb(238,167,29)" fg:x="105438788" fg:w="10368464"/><text x="0.3615%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,379,882 samples, 0.03%)</title><rect x="0.1465%" y="565" width="0.0332%" height="15" fill="rgb(232,182,51)" fg:x="138496199" fg:w="31379882"/><text x="0.3965%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,379,882 samples, 0.03%)</title><rect x="0.1465%" y="549" width="0.0332%" height="15" fill="rgb(231,60,39)" fg:x="138496199" fg:w="31379882"/><text x="0.3965%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (31,379,882 samples, 0.03%)</title><rect x="0.1465%" y="533" width="0.0332%" height="15" fill="rgb(208,69,12)" fg:x="138496199" fg:w="31379882"/><text x="0.3965%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,379,882 samples, 0.03%)</title><rect x="0.1465%" y="517" width="0.0332%" height="15" fill="rgb(235,93,37)" fg:x="138496199" fg:w="31379882"/><text x="0.3965%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (24,336,367 samples, 0.03%)</title><rect x="0.1539%" y="501" width="0.0257%" height="15" fill="rgb(213,116,39)" fg:x="145539714" fg:w="24336367"/><text x="0.4039%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24,336,367 samples, 0.03%)</title><rect x="0.1539%" y="485" width="0.0257%" height="15" fill="rgb(222,207,29)" fg:x="145539714" fg:w="24336367"/><text x="0.4039%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (24,336,367 samples, 0.03%)</title><rect x="0.1539%" y="469" width="0.0257%" height="15" fill="rgb(206,96,30)" fg:x="145539714" fg:w="24336367"/><text x="0.4039%" y="479.50"></text></g><g><title>_int_malloc (12,565,302 samples, 0.01%)</title><rect x="0.1834%" y="213" width="0.0133%" height="15" fill="rgb(218,138,4)" fg:x="173396901" fg:w="12565302"/><text x="0.4334%" y="223.50"></text></g><g><title>__GI___libc_malloc (15,734,309 samples, 0.02%)</title><rect x="0.1834%" y="229" width="0.0166%" height="15" fill="rgb(250,191,14)" fg:x="173396901" fg:w="15734309"/><text x="0.4334%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22,788,926 samples, 0.02%)</title><rect x="0.1834%" y="341" width="0.0241%" height="15" fill="rgb(239,60,40)" fg:x="173396901" fg:w="22788926"/><text x="0.4334%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22,788,926 samples, 0.02%)</title><rect x="0.1834%" y="325" width="0.0241%" height="15" fill="rgb(206,27,48)" fg:x="173396901" fg:w="22788926"/><text x="0.4334%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (22,788,926 samples, 0.02%)</title><rect x="0.1834%" y="309" width="0.0241%" height="15" fill="rgb(225,35,8)" fg:x="173396901" fg:w="22788926"/><text x="0.4334%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (22,788,926 samples, 0.02%)</title><rect x="0.1834%" y="293" width="0.0241%" height="15" fill="rgb(250,213,24)" fg:x="173396901" fg:w="22788926"/><text x="0.4334%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22,788,926 samples, 0.02%)</title><rect x="0.1834%" y="277" width="0.0241%" height="15" fill="rgb(247,123,22)" fg:x="173396901" fg:w="22788926"/><text x="0.4334%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22,788,926 samples, 0.02%)</title><rect x="0.1834%" y="261" width="0.0241%" height="15" fill="rgb(231,138,38)" fg:x="173396901" fg:w="22788926"/><text x="0.4334%" y="271.50"></text></g><g><title>alloc::alloc::alloc (22,788,926 samples, 0.02%)</title><rect x="0.1834%" y="245" width="0.0241%" height="15" fill="rgb(231,145,46)" fg:x="173396901" fg:w="22788926"/><text x="0.4334%" y="255.50"></text></g><g><title>&lt;rkl::core::layers::Dense as core::clone::Clone&gt;::clone (43,686,284 samples, 0.05%)</title><rect x="0.1834%" y="485" width="0.0462%" height="15" fill="rgb(251,118,11)" fg:x="173396901" fg:w="43686284"/><text x="0.4334%" y="495.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (43,686,284 samples, 0.05%)</title><rect x="0.1834%" y="469" width="0.0462%" height="15" fill="rgb(217,147,25)" fg:x="173396901" fg:w="43686284"/><text x="0.4334%" y="479.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (43,686,284 samples, 0.05%)</title><rect x="0.1834%" y="453" width="0.0462%" height="15" fill="rgb(247,81,37)" fg:x="173396901" fg:w="43686284"/><text x="0.4334%" y="463.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (43,686,284 samples, 0.05%)</title><rect x="0.1834%" y="437" width="0.0462%" height="15" fill="rgb(209,12,38)" fg:x="173396901" fg:w="43686284"/><text x="0.4334%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (43,686,284 samples, 0.05%)</title><rect x="0.1834%" y="421" width="0.0462%" height="15" fill="rgb(227,1,9)" fg:x="173396901" fg:w="43686284"/><text x="0.4334%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (43,686,284 samples, 0.05%)</title><rect x="0.1834%" y="405" width="0.0462%" height="15" fill="rgb(248,47,43)" fg:x="173396901" fg:w="43686284"/><text x="0.4334%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43,686,284 samples, 0.05%)</title><rect x="0.1834%" y="389" width="0.0462%" height="15" fill="rgb(221,10,30)" fg:x="173396901" fg:w="43686284"/><text x="0.4334%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (43,686,284 samples, 0.05%)</title><rect x="0.1834%" y="373" width="0.0462%" height="15" fill="rgb(210,229,1)" fg:x="173396901" fg:w="43686284"/><text x="0.4334%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43,686,284 samples, 0.05%)</title><rect x="0.1834%" y="357" width="0.0462%" height="15" fill="rgb(222,148,37)" fg:x="173396901" fg:w="43686284"/><text x="0.4334%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20,897,358 samples, 0.02%)</title><rect x="0.2075%" y="341" width="0.0221%" height="15" fill="rgb(234,67,33)" fg:x="196185827" fg:w="20897358"/><text x="0.4575%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20,897,358 samples, 0.02%)</title><rect x="0.2075%" y="325" width="0.0221%" height="15" fill="rgb(247,98,35)" fg:x="196185827" fg:w="20897358"/><text x="0.4575%" y="335.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17,378,780 samples, 0.02%)</title><rect x="0.2112%" y="309" width="0.0184%" height="15" fill="rgb(247,138,52)" fg:x="199704405" fg:w="17378780"/><text x="0.4612%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50,739,504 samples, 0.05%)</title><rect x="0.1797%" y="549" width="0.0537%" height="15" fill="rgb(213,79,30)" fg:x="169876081" fg:w="50739504"/><text x="0.4297%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47,218,684 samples, 0.05%)</title><rect x="0.1834%" y="533" width="0.0499%" height="15" fill="rgb(246,177,23)" fg:x="173396901" fg:w="47218684"/><text x="0.4334%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (47,218,684 samples, 0.05%)</title><rect x="0.1834%" y="517" width="0.0499%" height="15" fill="rgb(230,62,27)" fg:x="173396901" fg:w="47218684"/><text x="0.4334%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47,218,684 samples, 0.05%)</title><rect x="0.1834%" y="501" width="0.0499%" height="15" fill="rgb(216,154,8)" fg:x="173396901" fg:w="47218684"/><text x="0.4334%" y="511.50"></text></g><g><title>&lt;rkl::models::Sequential&lt;T&gt; as core::clone::Clone&gt;::clone (52,335,321 samples, 0.06%)</title><rect x="0.1797%" y="565" width="0.0554%" height="15" fill="rgb(244,35,45)" fg:x="169876081" fg:w="52335321"/><text x="0.4297%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20,564,373 samples, 0.02%)</title><rect x="0.2350%" y="501" width="0.0218%" height="15" fill="rgb(251,115,12)" fg:x="222211402" fg:w="20564373"/><text x="0.4850%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20,564,373 samples, 0.02%)</title><rect x="0.2350%" y="485" width="0.0218%" height="15" fill="rgb(240,54,50)" fg:x="222211402" fg:w="20564373"/><text x="0.4850%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (20,564,373 samples, 0.02%)</title><rect x="0.2350%" y="469" width="0.0218%" height="15" fill="rgb(233,84,52)" fg:x="222211402" fg:w="20564373"/><text x="0.4850%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (20,564,373 samples, 0.02%)</title><rect x="0.2350%" y="453" width="0.0218%" height="15" fill="rgb(207,117,47)" fg:x="222211402" fg:w="20564373"/><text x="0.4850%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17,043,295 samples, 0.02%)</title><rect x="0.2388%" y="437" width="0.0180%" height="15" fill="rgb(249,43,39)" fg:x="225732480" fg:w="17043295"/><text x="0.4888%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17,043,295 samples, 0.02%)</title><rect x="0.2388%" y="421" width="0.0180%" height="15" fill="rgb(209,38,44)" fg:x="225732480" fg:w="17043295"/><text x="0.4888%" y="431.50"></text></g><g><title>alloc::alloc::alloc (17,043,295 samples, 0.02%)</title><rect x="0.2388%" y="405" width="0.0180%" height="15" fill="rgb(236,212,23)" fg:x="225732480" fg:w="17043295"/><text x="0.4888%" y="415.50"></text></g><g><title>__GI___libc_malloc (17,043,295 samples, 0.02%)</title><rect x="0.2388%" y="389" width="0.0180%" height="15" fill="rgb(242,79,21)" fg:x="225732480" fg:w="17043295"/><text x="0.4888%" y="399.50"></text></g><g><title>tcache_get (10,015,170 samples, 0.01%)</title><rect x="0.2462%" y="373" width="0.0106%" height="15" fill="rgb(211,96,35)" fg:x="232760605" fg:w="10015170"/><text x="0.4962%" y="383.50"></text></g><g><title>tcache_get_n (10,015,170 samples, 0.01%)</title><rect x="0.2462%" y="357" width="0.0106%" height="15" fill="rgb(253,215,40)" fg:x="232760605" fg:w="10015170"/><text x="0.4962%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (32,467,998 samples, 0.03%)</title><rect x="0.2350%" y="565" width="0.0343%" height="15" fill="rgb(211,81,21)" fg:x="222211402" fg:w="32467998"/><text x="0.4850%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32,467,998 samples, 0.03%)</title><rect x="0.2350%" y="549" width="0.0343%" height="15" fill="rgb(208,190,38)" fg:x="222211402" fg:w="32467998"/><text x="0.4850%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (32,467,998 samples, 0.03%)</title><rect x="0.2350%" y="533" width="0.0343%" height="15" fill="rgb(235,213,38)" fg:x="222211402" fg:w="32467998"/><text x="0.4850%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32,467,998 samples, 0.03%)</title><rect x="0.2350%" y="517" width="0.0343%" height="15" fill="rgb(237,122,38)" fg:x="222211402" fg:w="32467998"/><text x="0.4850%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (11,903,625 samples, 0.01%)</title><rect x="0.2568%" y="501" width="0.0126%" height="15" fill="rgb(244,218,35)" fg:x="242775775" fg:w="11903625"/><text x="0.5068%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11,903,625 samples, 0.01%)</title><rect x="0.2568%" y="485" width="0.0126%" height="15" fill="rgb(240,68,47)" fg:x="242775775" fg:w="11903625"/><text x="0.5068%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11,903,625 samples, 0.01%)</title><rect x="0.2568%" y="469" width="0.0126%" height="15" fill="rgb(210,16,53)" fg:x="242775775" fg:w="11903625"/><text x="0.5068%" y="479.50"></text></g><g><title>__GI___libc_free (30,610,457 samples, 0.03%)</title><rect x="0.2798%" y="421" width="0.0324%" height="15" fill="rgb(235,124,12)" fg:x="264557984" fg:w="30610457"/><text x="0.5298%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (37,644,112 samples, 0.04%)</title><rect x="0.2761%" y="565" width="0.0398%" height="15" fill="rgb(224,169,11)" fg:x="261038013" fg:w="37644112"/><text x="0.5261%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (37,644,112 samples, 0.04%)</title><rect x="0.2761%" y="549" width="0.0398%" height="15" fill="rgb(250,166,2)" fg:x="261038013" fg:w="37644112"/><text x="0.5261%" y="559.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (37,644,112 samples, 0.04%)</title><rect x="0.2761%" y="533" width="0.0398%" height="15" fill="rgb(242,216,29)" fg:x="261038013" fg:w="37644112"/><text x="0.5261%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (34,124,141 samples, 0.04%)</title><rect x="0.2798%" y="517" width="0.0361%" height="15" fill="rgb(230,116,27)" fg:x="264557984" fg:w="34124141"/><text x="0.5298%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (34,124,141 samples, 0.04%)</title><rect x="0.2798%" y="501" width="0.0361%" height="15" fill="rgb(228,99,48)" fg:x="264557984" fg:w="34124141"/><text x="0.5298%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34,124,141 samples, 0.04%)</title><rect x="0.2798%" y="485" width="0.0361%" height="15" fill="rgb(253,11,6)" fg:x="264557984" fg:w="34124141"/><text x="0.5298%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (34,124,141 samples, 0.04%)</title><rect x="0.2798%" y="469" width="0.0361%" height="15" fill="rgb(247,143,39)" fg:x="264557984" fg:w="34124141"/><text x="0.5298%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34,124,141 samples, 0.04%)</title><rect x="0.2798%" y="453" width="0.0361%" height="15" fill="rgb(236,97,10)" fg:x="264557984" fg:w="34124141"/><text x="0.5298%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (34,124,141 samples, 0.04%)</title><rect x="0.2798%" y="437" width="0.0361%" height="15" fill="rgb(233,208,19)" fg:x="264557984" fg:w="34124141"/><text x="0.5298%" y="447.50"></text></g><g><title>_int_free (17,594,139 samples, 0.02%)</title><rect x="0.3193%" y="325" width="0.0186%" height="15" fill="rgb(216,164,2)" fg:x="301831504" fg:w="17594139"/><text x="0.5693%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;&gt; (24,279,216 samples, 0.03%)</title><rect x="0.3159%" y="565" width="0.0257%" height="15" fill="rgb(220,129,5)" fg:x="298682125" fg:w="24279216"/><text x="0.5659%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rkl::core::layers::Dense&gt;&gt; (24,279,216 samples, 0.03%)</title><rect x="0.3159%" y="549" width="0.0257%" height="15" fill="rgb(242,17,10)" fg:x="298682125" fg:w="24279216"/><text x="0.5659%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,279,216 samples, 0.03%)</title><rect x="0.3159%" y="533" width="0.0257%" height="15" fill="rgb(242,107,0)" fg:x="298682125" fg:w="24279216"/><text x="0.5659%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rkl::core::layers::Dense]&gt; (24,279,216 samples, 0.03%)</title><rect x="0.3159%" y="517" width="0.0257%" height="15" fill="rgb(251,28,31)" fg:x="298682125" fg:w="24279216"/><text x="0.5659%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;rkl::core::layers::Dense&gt; (24,279,216 samples, 0.03%)</title><rect x="0.3159%" y="501" width="0.0257%" height="15" fill="rgb(233,223,10)" fg:x="298682125" fg:w="24279216"/><text x="0.5659%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (24,279,216 samples, 0.03%)</title><rect x="0.3159%" y="485" width="0.0257%" height="15" fill="rgb(215,21,27)" fg:x="298682125" fg:w="24279216"/><text x="0.5659%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (24,279,216 samples, 0.03%)</title><rect x="0.3159%" y="469" width="0.0257%" height="15" fill="rgb(232,23,21)" fg:x="298682125" fg:w="24279216"/><text x="0.5659%" y="479.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (24,279,216 samples, 0.03%)</title><rect x="0.3159%" y="453" width="0.0257%" height="15" fill="rgb(244,5,23)" fg:x="298682125" fg:w="24279216"/><text x="0.5659%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (21,129,837 samples, 0.02%)</title><rect x="0.3193%" y="437" width="0.0224%" height="15" fill="rgb(226,81,46)" fg:x="301831504" fg:w="21129837"/><text x="0.5693%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (21,129,837 samples, 0.02%)</title><rect x="0.3193%" y="421" width="0.0224%" height="15" fill="rgb(247,70,30)" fg:x="301831504" fg:w="21129837"/><text x="0.5693%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,129,837 samples, 0.02%)</title><rect x="0.3193%" y="405" width="0.0224%" height="15" fill="rgb(212,68,19)" fg:x="301831504" fg:w="21129837"/><text x="0.5693%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (21,129,837 samples, 0.02%)</title><rect x="0.3193%" y="389" width="0.0224%" height="15" fill="rgb(240,187,13)" fg:x="301831504" fg:w="21129837"/><text x="0.5693%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21,129,837 samples, 0.02%)</title><rect x="0.3193%" y="373" width="0.0224%" height="15" fill="rgb(223,113,26)" fg:x="301831504" fg:w="21129837"/><text x="0.5693%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (21,129,837 samples, 0.02%)</title><rect x="0.3193%" y="357" width="0.0224%" height="15" fill="rgb(206,192,2)" fg:x="301831504" fg:w="21129837"/><text x="0.5693%" y="367.50"></text></g><g><title>__GI___libc_free (21,129,837 samples, 0.02%)</title><rect x="0.3193%" y="341" width="0.0224%" height="15" fill="rgb(241,108,4)" fg:x="301831504" fg:w="21129837"/><text x="0.5693%" y="351.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (58,151,143 samples, 0.06%)</title><rect x="0.3441%" y="549" width="0.0615%" height="15" fill="rgb(247,173,49)" fg:x="325260232" fg:w="58151143"/><text x="0.5941%" y="559.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (54,650,767 samples, 0.06%)</title><rect x="0.3478%" y="533" width="0.0578%" height="15" fill="rgb(224,114,35)" fg:x="328760608" fg:w="54650767"/><text x="0.5978%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (54,650,767 samples, 0.06%)</title><rect x="0.3478%" y="517" width="0.0578%" height="15" fill="rgb(245,159,27)" fg:x="328760608" fg:w="54650767"/><text x="0.5978%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (54,650,767 samples, 0.06%)</title><rect x="0.3478%" y="501" width="0.0578%" height="15" fill="rgb(245,172,44)" fg:x="328760608" fg:w="54650767"/><text x="0.5978%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (54,650,767 samples, 0.06%)</title><rect x="0.3478%" y="485" width="0.0578%" height="15" fill="rgb(236,23,11)" fg:x="328760608" fg:w="54650767"/><text x="0.5978%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (54,650,767 samples, 0.06%)</title><rect x="0.3478%" y="469" width="0.0578%" height="15" fill="rgb(205,117,38)" fg:x="328760608" fg:w="54650767"/><text x="0.5978%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (54,650,767 samples, 0.06%)</title><rect x="0.3478%" y="453" width="0.0578%" height="15" fill="rgb(237,72,25)" fg:x="328760608" fg:w="54650767"/><text x="0.5978%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (51,103,924 samples, 0.05%)</title><rect x="0.3515%" y="437" width="0.0541%" height="15" fill="rgb(244,70,9)" fg:x="332307451" fg:w="51103924"/><text x="0.6015%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51,103,924 samples, 0.05%)</title><rect x="0.3515%" y="421" width="0.0541%" height="15" fill="rgb(217,125,39)" fg:x="332307451" fg:w="51103924"/><text x="0.6015%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (47,563,286 samples, 0.05%)</title><rect x="0.3553%" y="405" width="0.0503%" height="15" fill="rgb(235,36,10)" fg:x="335848089" fg:w="47563286"/><text x="0.6053%" y="415.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (65,205,201 samples, 0.07%)</title><rect x="0.3441%" y="565" width="0.0690%" height="15" fill="rgb(251,123,47)" fg:x="325260232" fg:w="65205201"/><text x="0.5941%" y="575.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign (16,201,909 samples, 0.02%)</title><rect x="0.4130%" y="565" width="0.0171%" height="15" fill="rgb(221,13,13)" fg:x="390465433" fg:w="16201909"/><text x="0.6630%" y="575.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (16,201,909 samples, 0.02%)</title><rect x="0.4130%" y="549" width="0.0171%" height="15" fill="rgb(238,131,9)" fg:x="390465433" fg:w="16201909"/><text x="0.6630%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67,026,695 samples, 0.07%)</title><rect x="0.4375%" y="501" width="0.0709%" height="15" fill="rgb(211,50,8)" fg:x="413642468" fg:w="67026695"/><text x="0.6875%" y="511.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (67,026,695 samples, 0.07%)</title><rect x="0.4375%" y="485" width="0.0709%" height="15" fill="rgb(245,182,24)" fg:x="413642468" fg:w="67026695"/><text x="0.6875%" y="495.50"></text></g><g><title>core::ptr::write (67,026,695 samples, 0.07%)</title><rect x="0.4375%" y="469" width="0.0709%" height="15" fill="rgb(242,14,37)" fg:x="413642468" fg:w="67026695"/><text x="0.6875%" y="479.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (69,690,460 samples, 0.07%)</title><rect x="0.4375%" y="533" width="0.0737%" height="15" fill="rgb(246,228,12)" fg:x="413642468" fg:w="69690460"/><text x="0.6875%" y="543.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (69,690,460 samples, 0.07%)</title><rect x="0.4375%" y="517" width="0.0737%" height="15" fill="rgb(213,55,15)" fg:x="413642468" fg:w="69690460"/><text x="0.6875%" y="527.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Div&lt;B&gt; for &amp;ndarray::ArrayBase&lt;S,D&gt;&gt;::div (72,783,135 samples, 0.08%)</title><rect x="0.4375%" y="565" width="0.0770%" height="15" fill="rgb(209,9,3)" fg:x="413642468" fg:w="72783135"/><text x="0.6875%" y="575.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (72,783,135 samples, 0.08%)</title><rect x="0.4375%" y="549" width="0.0770%" height="15" fill="rgb(230,59,30)" fg:x="413642468" fg:w="72783135"/><text x="0.6875%" y="559.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Sub&lt;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::sub (60,661,348 samples, 0.06%)</title><rect x="0.5145%" y="565" width="0.0642%" height="15" fill="rgb(209,121,21)" fg:x="486425603" fg:w="60661348"/><text x="0.7645%" y="575.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Sub&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::sub (57,115,008 samples, 0.06%)</title><rect x="0.5183%" y="549" width="0.0604%" height="15" fill="rgb(220,109,13)" fg:x="489971943" fg:w="57115008"/><text x="0.7683%" y="559.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (53,550,142 samples, 0.06%)</title><rect x="0.5221%" y="533" width="0.0566%" height="15" fill="rgb(232,18,1)" fg:x="493536809" fg:w="53550142"/><text x="0.7721%" y="543.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::clone_iopf::_{{closure}} (36,061,612 samples, 0.04%)</title><rect x="0.5406%" y="517" width="0.0381%" height="15" fill="rgb(215,41,42)" fg:x="511025339" fg:w="36061612"/><text x="0.7906%" y="527.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (30,927,119 samples, 0.03%)</title><rect x="0.5460%" y="501" width="0.0327%" height="15" fill="rgb(224,123,36)" fg:x="516159832" fg:w="30927119"/><text x="0.7960%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (156,242,189 samples, 0.17%)</title><rect x="0.6025%" y="533" width="0.1653%" height="15" fill="rgb(240,125,3)" fg:x="569625365" fg:w="156242189"/><text x="0.8525%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (156,242,189 samples, 0.17%)</title><rect x="0.6025%" y="517" width="0.1653%" height="15" fill="rgb(205,98,50)" fg:x="569625365" fg:w="156242189"/><text x="0.8525%" y="527.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (156,242,189 samples, 0.17%)</title><rect x="0.6025%" y="501" width="0.1653%" height="15" fill="rgb(205,185,37)" fg:x="569625365" fg:w="156242189"/><text x="0.8525%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (156,242,189 samples, 0.17%)</title><rect x="0.6025%" y="485" width="0.1653%" height="15" fill="rgb(238,207,15)" fg:x="569625365" fg:w="156242189"/><text x="0.8525%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (156,242,189 samples, 0.17%)</title><rect x="0.6025%" y="469" width="0.1653%" height="15" fill="rgb(213,199,42)" fg:x="569625365" fg:w="156242189"/><text x="0.8525%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (156,242,189 samples, 0.17%)</title><rect x="0.6025%" y="453" width="0.1653%" height="15" fill="rgb(235,201,11)" fg:x="569625365" fg:w="156242189"/><text x="0.8525%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (156,242,189 samples, 0.17%)</title><rect x="0.6025%" y="437" width="0.1653%" height="15" fill="rgb(207,46,11)" fg:x="569625365" fg:w="156242189"/><text x="0.8525%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (156,242,189 samples, 0.17%)</title><rect x="0.6025%" y="421" width="0.1653%" height="15" fill="rgb(241,35,35)" fg:x="569625365" fg:w="156242189"/><text x="0.8525%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (156,242,189 samples, 0.17%)</title><rect x="0.6025%" y="405" width="0.1653%" height="15" fill="rgb(243,32,47)" fg:x="569625365" fg:w="156242189"/><text x="0.8525%" y="415.50"></text></g><g><title>__GI___libc_free (156,242,189 samples, 0.17%)</title><rect x="0.6025%" y="389" width="0.1653%" height="15" fill="rgb(247,202,23)" fg:x="569625365" fg:w="156242189"/><text x="0.8525%" y="399.50"></text></g><g><title>systrim (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="373" width="0.1541%" height="15" fill="rgb(219,102,11)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="383.50"></text></g><g><title>__glibc_morecore (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="357" width="0.1541%" height="15" fill="rgb(243,110,44)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="367.50"></text></g><g><title>__GI___sbrk (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="341" width="0.1541%" height="15" fill="rgb(222,74,54)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="351.50"></text></g><g><title>__brk (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="325" width="0.1541%" height="15" fill="rgb(216,99,12)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="335.50"></text></g><g><title>[unknown] (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="309" width="0.1541%" height="15" fill="rgb(226,22,26)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="319.50"></text></g><g><title>[unknown] (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="293" width="0.1541%" height="15" fill="rgb(217,163,10)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="303.50"></text></g><g><title>[unknown] (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="277" width="0.1541%" height="15" fill="rgb(213,25,53)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="287.50"></text></g><g><title>[unknown] (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="261" width="0.1541%" height="15" fill="rgb(252,105,26)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="271.50"></text></g><g><title>[unknown] (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="245" width="0.1541%" height="15" fill="rgb(220,39,43)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="255.50"></text></g><g><title>[unknown] (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="229" width="0.1541%" height="15" fill="rgb(229,68,48)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="239.50"></text></g><g><title>[unknown] (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="213" width="0.1541%" height="15" fill="rgb(252,8,32)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="223.50"></text></g><g><title>[unknown] (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="197" width="0.1541%" height="15" fill="rgb(223,20,43)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="207.50"></text></g><g><title>[unknown] (145,725,047 samples, 0.15%)</title><rect x="0.6137%" y="181" width="0.1541%" height="15" fill="rgb(229,81,49)" fg:x="580142507" fg:w="145725047"/><text x="0.8637%" y="191.50"></text></g><g><title>[unknown] (142,210,387 samples, 0.15%)</title><rect x="0.6174%" y="165" width="0.1504%" height="15" fill="rgb(236,28,36)" fg:x="583657167" fg:w="142210387"/><text x="0.8674%" y="175.50"></text></g><g><title>[unknown] (135,063,347 samples, 0.14%)</title><rect x="0.6249%" y="149" width="0.1429%" height="15" fill="rgb(249,185,26)" fg:x="590804207" fg:w="135063347"/><text x="0.8749%" y="159.50"></text></g><g><title>[unknown] (121,155,820 samples, 0.13%)</title><rect x="0.6396%" y="133" width="0.1282%" height="15" fill="rgb(249,174,33)" fg:x="604711734" fg:w="121155820"/><text x="0.8896%" y="143.50"></text></g><g><title>[unknown] (53,011,335 samples, 0.06%)</title><rect x="0.7117%" y="117" width="0.0561%" height="15" fill="rgb(233,201,37)" fg:x="672856219" fg:w="53011335"/><text x="0.9617%" y="127.50"></text></g><g><title>[unknown] (22,345,406 samples, 0.02%)</title><rect x="0.7442%" y="101" width="0.0236%" height="15" fill="rgb(221,78,26)" fg:x="703522148" fg:w="22345406"/><text x="0.9942%" y="111.50"></text></g><g><title>[unknown] (10,499,302 samples, 0.01%)</title><rect x="0.7567%" y="85" width="0.0111%" height="15" fill="rgb(250,127,30)" fg:x="715368252" fg:w="10499302"/><text x="1.0067%" y="95.50"></text></g><g><title>sysmalloc (17,672,976 samples, 0.02%)</title><rect x="0.8106%" y="261" width="0.0187%" height="15" fill="rgb(230,49,44)" fg:x="766368938" fg:w="17672976"/><text x="1.0606%" y="271.50"></text></g><g><title>__glibc_morecore (14,219,275 samples, 0.02%)</title><rect x="0.8143%" y="245" width="0.0150%" height="15" fill="rgb(229,67,23)" fg:x="769822639" fg:w="14219275"/><text x="1.0643%" y="255.50"></text></g><g><title>__GI___sbrk (14,219,275 samples, 0.02%)</title><rect x="0.8143%" y="229" width="0.0150%" height="15" fill="rgb(249,83,47)" fg:x="769822639" fg:w="14219275"/><text x="1.0643%" y="239.50"></text></g><g><title>__brk (14,219,275 samples, 0.02%)</title><rect x="0.8143%" y="213" width="0.0150%" height="15" fill="rgb(215,43,3)" fg:x="769822639" fg:w="14219275"/><text x="1.0643%" y="223.50"></text></g><g><title>[unknown] (14,219,275 samples, 0.02%)</title><rect x="0.8143%" y="197" width="0.0150%" height="15" fill="rgb(238,154,13)" fg:x="769822639" fg:w="14219275"/><text x="1.0643%" y="207.50"></text></g><g><title>[unknown] (14,219,275 samples, 0.02%)</title><rect x="0.8143%" y="181" width="0.0150%" height="15" fill="rgb(219,56,2)" fg:x="769822639" fg:w="14219275"/><text x="1.0643%" y="191.50"></text></g><g><title>[unknown] (14,219,275 samples, 0.02%)</title><rect x="0.8143%" y="165" width="0.0150%" height="15" fill="rgb(233,0,4)" fg:x="769822639" fg:w="14219275"/><text x="1.0643%" y="175.50"></text></g><g><title>[unknown] (14,219,275 samples, 0.02%)</title><rect x="0.8143%" y="149" width="0.0150%" height="15" fill="rgb(235,30,7)" fg:x="769822639" fg:w="14219275"/><text x="1.0643%" y="159.50"></text></g><g><title>[unknown] (14,219,275 samples, 0.02%)</title><rect x="0.8143%" y="133" width="0.0150%" height="15" fill="rgb(250,79,13)" fg:x="769822639" fg:w="14219275"/><text x="1.0643%" y="143.50"></text></g><g><title>[unknown] (14,219,275 samples, 0.02%)</title><rect x="0.8143%" y="117" width="0.0150%" height="15" fill="rgb(211,146,34)" fg:x="769822639" fg:w="14219275"/><text x="1.0643%" y="127.50"></text></g><g><title>[unknown] (10,668,394 samples, 0.01%)</title><rect x="0.8181%" y="101" width="0.0113%" height="15" fill="rgb(228,22,38)" fg:x="773373520" fg:w="10668394"/><text x="1.0681%" y="111.50"></text></g><g><title>[unknown] (10,668,394 samples, 0.01%)</title><rect x="0.8181%" y="85" width="0.0113%" height="15" fill="rgb(235,168,5)" fg:x="773373520" fg:w="10668394"/><text x="1.0681%" y="95.50"></text></g><g><title>__GI___libc_malloc (47,931,158 samples, 0.05%)</title><rect x="0.7824%" y="293" width="0.0507%" height="15" fill="rgb(221,155,16)" fg:x="739657382" fg:w="47931158"/><text x="1.0324%" y="303.50"></text></g><g><title>_int_malloc (45,941,879 samples, 0.05%)</title><rect x="0.7845%" y="277" width="0.0486%" height="15" fill="rgb(215,215,53)" fg:x="741646661" fg:w="45941879"/><text x="1.0345%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (62,057,411 samples, 0.07%)</title><rect x="0.7712%" y="405" width="0.0656%" height="15" fill="rgb(223,4,10)" fg:x="729081087" fg:w="62057411"/><text x="1.0212%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62,057,411 samples, 0.07%)</title><rect x="0.7712%" y="389" width="0.0656%" height="15" fill="rgb(234,103,6)" fg:x="729081087" fg:w="62057411"/><text x="1.0212%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (62,057,411 samples, 0.07%)</title><rect x="0.7712%" y="373" width="0.0656%" height="15" fill="rgb(227,97,0)" fg:x="729081087" fg:w="62057411"/><text x="1.0212%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (62,057,411 samples, 0.07%)</title><rect x="0.7712%" y="357" width="0.0656%" height="15" fill="rgb(234,150,53)" fg:x="729081087" fg:w="62057411"/><text x="1.0212%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62,057,411 samples, 0.07%)</title><rect x="0.7712%" y="341" width="0.0656%" height="15" fill="rgb(228,201,54)" fg:x="729081087" fg:w="62057411"/><text x="1.0212%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (62,057,411 samples, 0.07%)</title><rect x="0.7712%" y="325" width="0.0656%" height="15" fill="rgb(222,22,37)" fg:x="729081087" fg:w="62057411"/><text x="1.0212%" y="335.50"></text></g><g><title>alloc::alloc::alloc (62,057,411 samples, 0.07%)</title><rect x="0.7712%" y="309" width="0.0656%" height="15" fill="rgb(237,53,32)" fg:x="729081087" fg:w="62057411"/><text x="1.0212%" y="319.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (1,468,225,490 samples, 1.55%)</title><rect x="0.7678%" y="517" width="1.5531%" height="15" fill="rgb(233,25,53)" fg:x="725867554" fg:w="1468225490"/><text x="1.0178%" y="527.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (1,465,011,957 samples, 1.55%)</title><rect x="0.7712%" y="501" width="1.5497%" height="15" fill="rgb(210,40,34)" fg:x="729081087" fg:w="1465011957"/><text x="1.0212%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,465,011,957 samples, 1.55%)</title><rect x="0.7712%" y="485" width="1.5497%" height="15" fill="rgb(241,220,44)" fg:x="729081087" fg:w="1465011957"/><text x="1.0212%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,465,011,957 samples, 1.55%)</title><rect x="0.7712%" y="469" width="1.5497%" height="15" fill="rgb(235,28,35)" fg:x="729081087" fg:w="1465011957"/><text x="1.0212%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,465,011,957 samples, 1.55%)</title><rect x="0.7712%" y="453" width="1.5497%" height="15" fill="rgb(210,56,17)" fg:x="729081087" fg:w="1465011957"/><text x="1.0212%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1,465,011,957 samples, 1.55%)</title><rect x="0.7712%" y="437" width="1.5497%" height="15" fill="rgb(224,130,29)" fg:x="729081087" fg:w="1465011957"/><text x="1.0212%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,465,011,957 samples, 1.55%)</title><rect x="0.7712%" y="421" width="1.5497%" height="15" fill="rgb(235,212,8)" fg:x="729081087" fg:w="1465011957"/><text x="1.0212%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,402,954,546 samples, 1.48%)</title><rect x="0.8368%" y="405" width="1.4840%" height="15" fill="rgb(223,33,50)" fg:x="791138498" fg:w="1402954546"/><text x="1.0868%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,402,954,546 samples, 1.48%)</title><rect x="0.8368%" y="389" width="1.4840%" height="15" fill="rgb(219,149,13)" fg:x="791138498" fg:w="1402954546"/><text x="1.0868%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,396,250,076 samples, 1.48%)</title><rect x="0.8439%" y="373" width="1.4769%" height="15" fill="rgb(250,156,29)" fg:x="797842968" fg:w="1396250076"/><text x="1.0939%" y="383.50"></text></g><g><title>[unknown] (163,713,248 samples, 0.17%)</title><rect x="2.1477%" y="357" width="0.1732%" height="15" fill="rgb(216,193,19)" fg:x="2030379796" fg:w="163713248"/><text x="2.3977%" y="367.50"></text></g><g><title>[unknown] (153,230,966 samples, 0.16%)</title><rect x="2.1588%" y="341" width="0.1621%" height="15" fill="rgb(216,135,14)" fg:x="2040862078" fg:w="153230966"/><text x="2.4088%" y="351.50"></text></g><g><title>[unknown] (149,652,708 samples, 0.16%)</title><rect x="2.1626%" y="325" width="0.1583%" height="15" fill="rgb(241,47,5)" fg:x="2044440336" fg:w="149652708"/><text x="2.4126%" y="335.50"></text></g><g><title>[unknown] (135,644,155 samples, 0.14%)</title><rect x="2.1774%" y="309" width="0.1435%" height="15" fill="rgb(233,42,35)" fg:x="2058448889" fg:w="135644155"/><text x="2.4274%" y="319.50"></text></g><g><title>[unknown] (132,162,593 samples, 0.14%)</title><rect x="2.1811%" y="293" width="0.1398%" height="15" fill="rgb(231,13,6)" fg:x="2061930451" fg:w="132162593"/><text x="2.4311%" y="303.50"></text></g><g><title>[unknown] (125,034,845 samples, 0.13%)</title><rect x="2.1886%" y="277" width="0.1323%" height="15" fill="rgb(207,181,40)" fg:x="2069058199" fg:w="125034845"/><text x="2.4386%" y="287.50"></text></g><g><title>[unknown] (121,445,746 samples, 0.13%)</title><rect x="2.1924%" y="261" width="0.1285%" height="15" fill="rgb(254,173,49)" fg:x="2072647298" fg:w="121445746"/><text x="2.4424%" y="271.50"></text></g><g><title>[unknown] (100,612,764 samples, 0.11%)</title><rect x="2.2144%" y="245" width="0.1064%" height="15" fill="rgb(221,1,38)" fg:x="2093480280" fg:w="100612764"/><text x="2.4644%" y="255.50"></text></g><g><title>[unknown] (86,451,095 samples, 0.09%)</title><rect x="2.2294%" y="229" width="0.0914%" height="15" fill="rgb(206,124,46)" fg:x="2107641949" fg:w="86451095"/><text x="2.4794%" y="239.50"></text></g><g><title>[unknown] (65,314,274 samples, 0.07%)</title><rect x="2.2518%" y="213" width="0.0691%" height="15" fill="rgb(249,21,11)" fg:x="2128778770" fg:w="65314274"/><text x="2.5018%" y="223.50"></text></g><g><title>[unknown] (61,772,883 samples, 0.07%)</title><rect x="2.2555%" y="197" width="0.0653%" height="15" fill="rgb(222,201,40)" fg:x="2132320161" fg:w="61772883"/><text x="2.5055%" y="207.50"></text></g><g><title>[unknown] (31,415,808 samples, 0.03%)</title><rect x="2.2876%" y="181" width="0.0332%" height="15" fill="rgb(235,61,29)" fg:x="2162677236" fg:w="31415808"/><text x="2.5376%" y="191.50"></text></g><g><title>[unknown] (20,667,724 samples, 0.02%)</title><rect x="2.2990%" y="165" width="0.0219%" height="15" fill="rgb(219,207,3)" fg:x="2173425320" fg:w="20667724"/><text x="2.5490%" y="175.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (1,474,417,374 samples, 1.56%)</title><rect x="0.7678%" y="533" width="1.5596%" height="15" fill="rgb(222,56,46)" fg:x="725867554" fg:w="1474417374"/><text x="1.0178%" y="543.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (697,255,595 samples, 0.74%)</title><rect x="3.5574%" y="261" width="0.7375%" height="15" fill="rgb(239,76,54)" fg:x="3363121443" fg:w="697255595"/><text x="3.8074%" y="271.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::add (2,173,577,666 samples, 2.30%)</title><rect x="2.3274%" y="533" width="2.2992%" height="15" fill="rgb(231,124,27)" fg:x="2200284928" fg:w="2173577666"/><text x="2.5774%" y="543.50">n..</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (2,150,273,868 samples, 2.27%)</title><rect x="2.3521%" y="517" width="2.2745%" height="15" fill="rgb(249,195,6)" fg:x="2223588726" fg:w="2150273868"/><text x="2.6021%" y="527.50">n..</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (2,150,273,868 samples, 2.27%)</title><rect x="2.3521%" y="501" width="2.2745%" height="15" fill="rgb(237,174,47)" fg:x="2223588726" fg:w="2150273868"/><text x="2.6021%" y="511.50">n..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (2,144,883,944 samples, 2.27%)</title><rect x="2.3578%" y="485" width="2.2688%" height="15" fill="rgb(206,201,31)" fg:x="2228978650" fg:w="2144883944"/><text x="2.6078%" y="495.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (2,144,883,944 samples, 2.27%)</title><rect x="2.3578%" y="469" width="2.2688%" height="15" fill="rgb(231,57,52)" fg:x="2228978650" fg:w="2144883944"/><text x="2.6078%" y="479.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (2,144,883,944 samples, 2.27%)</title><rect x="2.3578%" y="453" width="2.2688%" height="15" fill="rgb(248,177,22)" fg:x="2228978650" fg:w="2144883944"/><text x="2.6078%" y="463.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (2,144,883,944 samples, 2.27%)</title><rect x="2.3578%" y="437" width="2.2688%" height="15" fill="rgb(215,211,37)" fg:x="2228978650" fg:w="2144883944"/><text x="2.6078%" y="447.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (2,144,883,944 samples, 2.27%)</title><rect x="2.3578%" y="421" width="2.2688%" height="15" fill="rgb(241,128,51)" fg:x="2228978650" fg:w="2144883944"/><text x="2.6078%" y="431.50">n..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (2,016,075,962 samples, 2.13%)</title><rect x="2.4940%" y="405" width="2.1326%" height="15" fill="rgb(227,165,31)" fg:x="2357786632" fg:w="2016075962"/><text x="2.7440%" y="415.50">n..</text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (2,016,075,962 samples, 2.13%)</title><rect x="2.4940%" y="389" width="2.1326%" height="15" fill="rgb(228,167,24)" fg:x="2357786632" fg:w="2016075962"/><text x="2.7440%" y="399.50">n..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (2,016,075,962 samples, 2.13%)</title><rect x="2.4940%" y="373" width="2.1326%" height="15" fill="rgb(228,143,12)" fg:x="2357786632" fg:w="2016075962"/><text x="2.7440%" y="383.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (2,016,075,962 samples, 2.13%)</title><rect x="2.4940%" y="357" width="2.1326%" height="15" fill="rgb(249,149,8)" fg:x="2357786632" fg:w="2016075962"/><text x="2.7440%" y="367.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_contiguous (2,016,075,962 samples, 2.13%)</title><rect x="2.4940%" y="341" width="2.1326%" height="15" fill="rgb(243,35,44)" fg:x="2357786632" fg:w="2016075962"/><text x="2.7440%" y="351.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (2,016,075,962 samples, 2.13%)</title><rect x="2.4940%" y="325" width="2.1326%" height="15" fill="rgb(246,89,9)" fg:x="2357786632" fg:w="2016075962"/><text x="2.7440%" y="335.50">n..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (1,655,415,531 samples, 1.75%)</title><rect x="2.8755%" y="309" width="1.7511%" height="15" fill="rgb(233,213,13)" fg:x="2718447063" fg:w="1655415531"/><text x="3.1255%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,655,415,531 samples, 1.75%)</title><rect x="2.8755%" y="293" width="1.7511%" height="15" fill="rgb(233,141,41)" fg:x="2718447063" fg:w="1655415531"/><text x="3.1255%" y="303.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::clone_iopf::_{{closure}} (1,513,548,224 samples, 1.60%)</title><rect x="3.0256%" y="277" width="1.6010%" height="15" fill="rgb(239,167,4)" fg:x="2860314370" fg:w="1513548224"/><text x="3.2756%" y="287.50"></text></g><g><title>core::ops::function::Fn::call (313,485,556 samples, 0.33%)</title><rect x="4.2950%" y="261" width="0.3316%" height="15" fill="rgb(209,217,16)" fg:x="4060377038" fg:w="313485556"/><text x="4.5450%" y="271.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (313,485,556 samples, 0.33%)</title><rect x="4.2950%" y="245" width="0.3316%" height="15" fill="rgb(219,88,35)" fg:x="4060377038" fg:w="313485556"/><text x="4.5450%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (51,462,028 samples, 0.05%)</title><rect x="4.6402%" y="501" width="0.0544%" height="15" fill="rgb(220,193,23)" fg:x="4386717960" fg:w="51462028"/><text x="4.8902%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51,462,028 samples, 0.05%)</title><rect x="4.6402%" y="485" width="0.0544%" height="15" fill="rgb(230,90,52)" fg:x="4386717960" fg:w="51462028"/><text x="4.8902%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (51,462,028 samples, 0.05%)</title><rect x="4.6402%" y="469" width="0.0544%" height="15" fill="rgb(252,106,19)" fg:x="4386717960" fg:w="51462028"/><text x="4.8902%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (51,462,028 samples, 0.05%)</title><rect x="4.6402%" y="453" width="0.0544%" height="15" fill="rgb(206,74,20)" fg:x="4386717960" fg:w="51462028"/><text x="4.8902%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (51,462,028 samples, 0.05%)</title><rect x="4.6402%" y="437" width="0.0544%" height="15" fill="rgb(230,138,44)" fg:x="4386717960" fg:w="51462028"/><text x="4.8902%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48,387,804 samples, 0.05%)</title><rect x="4.6434%" y="421" width="0.0512%" height="15" fill="rgb(235,182,43)" fg:x="4389792184" fg:w="48387804"/><text x="4.8934%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48,387,804 samples, 0.05%)</title><rect x="4.6434%" y="405" width="0.0512%" height="15" fill="rgb(242,16,51)" fg:x="4389792184" fg:w="48387804"/><text x="4.8934%" y="415.50"></text></g><g><title>alloc::alloc::alloc (48,387,804 samples, 0.05%)</title><rect x="4.6434%" y="389" width="0.0512%" height="15" fill="rgb(248,9,4)" fg:x="4389792184" fg:w="48387804"/><text x="4.8934%" y="399.50"></text></g><g><title>__GI___libc_malloc (48,387,804 samples, 0.05%)</title><rect x="4.6434%" y="373" width="0.0512%" height="15" fill="rgb(210,31,22)" fg:x="4389792184" fg:w="48387804"/><text x="4.8934%" y="383.50"></text></g><g><title>_int_malloc (46,351,814 samples, 0.05%)</title><rect x="4.6456%" y="357" width="0.0490%" height="15" fill="rgb(239,54,39)" fg:x="4391828174" fg:w="46351814"/><text x="4.8956%" y="367.50"></text></g><g><title>sysmalloc (23,991,363 samples, 0.03%)</title><rect x="4.6692%" y="341" width="0.0254%" height="15" fill="rgb(230,99,41)" fg:x="4414188625" fg:w="23991363"/><text x="4.9192%" y="351.50"></text></g><g><title>__glibc_morecore (21,327,663 samples, 0.02%)</title><rect x="4.6720%" y="325" width="0.0226%" height="15" fill="rgb(253,106,12)" fg:x="4416852325" fg:w="21327663"/><text x="4.9220%" y="335.50"></text></g><g><title>__GI___sbrk (21,327,663 samples, 0.02%)</title><rect x="4.6720%" y="309" width="0.0226%" height="15" fill="rgb(213,46,41)" fg:x="4416852325" fg:w="21327663"/><text x="4.9220%" y="319.50"></text></g><g><title>__brk (21,327,663 samples, 0.02%)</title><rect x="4.6720%" y="293" width="0.0226%" height="15" fill="rgb(215,133,35)" fg:x="4416852325" fg:w="21327663"/><text x="4.9220%" y="303.50"></text></g><g><title>[unknown] (21,327,663 samples, 0.02%)</title><rect x="4.6720%" y="277" width="0.0226%" height="15" fill="rgb(213,28,5)" fg:x="4416852325" fg:w="21327663"/><text x="4.9220%" y="287.50"></text></g><g><title>[unknown] (21,327,663 samples, 0.02%)</title><rect x="4.6720%" y="261" width="0.0226%" height="15" fill="rgb(215,77,49)" fg:x="4416852325" fg:w="21327663"/><text x="4.9220%" y="271.50"></text></g><g><title>[unknown] (21,327,663 samples, 0.02%)</title><rect x="4.6720%" y="245" width="0.0226%" height="15" fill="rgb(248,100,22)" fg:x="4416852325" fg:w="21327663"/><text x="4.9220%" y="255.50"></text></g><g><title>[unknown] (21,327,663 samples, 0.02%)</title><rect x="4.6720%" y="229" width="0.0226%" height="15" fill="rgb(208,67,9)" fg:x="4416852325" fg:w="21327663"/><text x="4.9220%" y="239.50"></text></g><g><title>[unknown] (21,327,663 samples, 0.02%)</title><rect x="4.6720%" y="213" width="0.0226%" height="15" fill="rgb(219,133,21)" fg:x="4416852325" fg:w="21327663"/><text x="4.9220%" y="223.50"></text></g><g><title>[unknown] (21,327,663 samples, 0.02%)</title><rect x="4.6720%" y="197" width="0.0226%" height="15" fill="rgb(246,46,29)" fg:x="4416852325" fg:w="21327663"/><text x="4.9220%" y="207.50"></text></g><g><title>__GI___libc_free (13,558,391 samples, 0.01%)</title><rect x="4.6946%" y="485" width="0.0143%" height="15" fill="rgb(246,185,52)" fg:x="4438179988" fg:w="13558391"/><text x="4.9446%" y="495.50"></text></g><g><title>_int_free_merge_chunk (11,959,457 samples, 0.01%)</title><rect x="4.6963%" y="469" width="0.0127%" height="15" fill="rgb(252,136,11)" fg:x="4439778922" fg:w="11959457"/><text x="4.9463%" y="479.50"></text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (13,851,043 samples, 0.01%)</title><rect x="4.7165%" y="469" width="0.0147%" height="15" fill="rgb(219,138,53)" fg:x="4458842282" fg:w="13851043"/><text x="4.9665%" y="479.50"></text></g><g><title>matrixmultiply::gemm::make_packing_buffer (44,232,091 samples, 0.05%)</title><rect x="4.7311%" y="469" width="0.0468%" height="15" fill="rgb(211,51,23)" fg:x="4472693325" fg:w="44232091"/><text x="4.9811%" y="479.50"></text></g><g><title>matrixmultiply::aligned_alloc::Alloc&lt;T&gt;::new (44,232,091 samples, 0.05%)</title><rect x="4.7311%" y="453" width="0.0468%" height="15" fill="rgb(247,221,28)" fg:x="4472693325" fg:w="44232091"/><text x="4.9811%" y="463.50"></text></g><g><title>alloc::alloc::alloc (44,232,091 samples, 0.05%)</title><rect x="4.7311%" y="437" width="0.0468%" height="15" fill="rgb(251,222,45)" fg:x="4472693325" fg:w="44232091"/><text x="4.9811%" y="447.50"></text></g><g><title>__rdl_alloc (44,232,091 samples, 0.05%)</title><rect x="4.7311%" y="421" width="0.0468%" height="15" fill="rgb(217,162,53)" fg:x="4472693325" fg:w="44232091"/><text x="4.9811%" y="431.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (44,232,091 samples, 0.05%)</title><rect x="4.7311%" y="405" width="0.0468%" height="15" fill="rgb(229,93,14)" fg:x="4472693325" fg:w="44232091"/><text x="4.9811%" y="415.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (43,014,019 samples, 0.05%)</title><rect x="4.7324%" y="389" width="0.0455%" height="15" fill="rgb(209,67,49)" fg:x="4473911397" fg:w="43014019"/><text x="4.9824%" y="399.50"></text></g><g><title>__posix_memalign (43,014,019 samples, 0.05%)</title><rect x="4.7324%" y="373" width="0.0455%" height="15" fill="rgb(213,87,29)" fg:x="4473911397" fg:w="43014019"/><text x="4.9824%" y="383.50"></text></g><g><title>__posix_memalign (39,537,795 samples, 0.04%)</title><rect x="4.7361%" y="357" width="0.0418%" height="15" fill="rgb(205,151,52)" fg:x="4477387621" fg:w="39537795"/><text x="4.9861%" y="367.50"></text></g><g><title>_mid_memalign (39,537,795 samples, 0.04%)</title><rect x="4.7361%" y="341" width="0.0418%" height="15" fill="rgb(253,215,39)" fg:x="4477387621" fg:w="39537795"/><text x="4.9861%" y="351.50"></text></g><g><title>_int_memalign (35,995,360 samples, 0.04%)</title><rect x="4.7398%" y="325" width="0.0381%" height="15" fill="rgb(221,220,41)" fg:x="4480930056" fg:w="35995360"/><text x="4.9898%" y="335.50"></text></g><g><title>_int_malloc (19,033,451 samples, 0.02%)</title><rect x="4.7578%" y="309" width="0.0201%" height="15" fill="rgb(218,133,21)" fg:x="4497891965" fg:w="19033451"/><text x="5.0078%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16,471,587 samples, 0.02%)</title><rect x="4.7870%" y="453" width="0.0174%" height="15" fill="rgb(221,193,43)" fg:x="4525562065" fg:w="16471587"/><text x="5.0370%" y="463.50"></text></g><g><title>matrixmultiply::gemm::pack (27,863,908 samples, 0.03%)</title><rect x="4.7779%" y="469" width="0.0295%" height="15" fill="rgb(240,128,52)" fg:x="4516925416" fg:w="27863908"/><text x="5.0279%" y="479.50"></text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (116,761,843 samples, 0.12%)</title><rect x="4.8872%" y="405" width="0.1235%" height="15" fill="rgb(253,114,12)" fg:x="4620221900" fg:w="116761843"/><text x="5.1372%" y="415.50"></text></g><g><title>core::cmp::min (24,396,409 samples, 0.03%)</title><rect x="4.9849%" y="389" width="0.0258%" height="15" fill="rgb(215,223,47)" fg:x="4712587334" fg:w="24396409"/><text x="5.2349%" y="399.50"></text></g><g><title>core::cmp::Ord::min (24,396,409 samples, 0.03%)</title><rect x="4.9849%" y="373" width="0.0258%" height="15" fill="rgb(248,225,23)" fg:x="4712587334" fg:w="24396409"/><text x="5.2349%" y="383.50"></text></g><g><title>core::cmp::min_by (24,396,409 samples, 0.03%)</title><rect x="4.9849%" y="357" width="0.0258%" height="15" fill="rgb(250,108,0)" fg:x="4712587334" fg:w="24396409"/><text x="5.2349%" y="367.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (4,165,751,766 samples, 4.41%)</title><rect x="6.3786%" y="341" width="4.4064%" height="15" fill="rgb(228,208,7)" fg:x="6030166884" fg:w="4165751766"/><text x="6.6286%" y="351.50">&lt;matr..</text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (4,165,751,766 samples, 4.41%)</title><rect x="6.3786%" y="325" width="4.4064%" height="15" fill="rgb(244,45,10)" fg:x="6030166884" fg:w="4165751766"/><text x="6.6286%" y="335.50">core:..</text></g><g><title>[unknown] (30,870,128 samples, 0.03%)</title><rect x="10.7523%" y="309" width="0.0327%" height="15" fill="rgb(207,125,25)" fg:x="10165048522" fg:w="30870128"/><text x="11.0023%" y="319.50"></text></g><g><title>[unknown] (27,323,170 samples, 0.03%)</title><rect x="10.7561%" y="293" width="0.0289%" height="15" fill="rgb(210,195,18)" fg:x="10168595480" fg:w="27323170"/><text x="11.0061%" y="303.50"></text></g><g><title>[unknown] (27,323,170 samples, 0.03%)</title><rect x="10.7561%" y="277" width="0.0289%" height="15" fill="rgb(249,80,12)" fg:x="10168595480" fg:w="27323170"/><text x="11.0061%" y="287.50"></text></g><g><title>[unknown] (27,323,170 samples, 0.03%)</title><rect x="10.7561%" y="261" width="0.0289%" height="15" fill="rgb(221,65,9)" fg:x="10168595480" fg:w="27323170"/><text x="11.0061%" y="271.50"></text></g><g><title>[unknown] (27,323,170 samples, 0.03%)</title><rect x="10.7561%" y="245" width="0.0289%" height="15" fill="rgb(235,49,36)" fg:x="10168595480" fg:w="27323170"/><text x="11.0061%" y="255.50"></text></g><g><title>[unknown] (23,816,114 samples, 0.03%)</title><rect x="10.7598%" y="229" width="0.0252%" height="15" fill="rgb(225,32,20)" fg:x="10172102536" fg:w="23816114"/><text x="11.0098%" y="239.50"></text></g><g><title>[unknown] (23,816,114 samples, 0.03%)</title><rect x="10.7598%" y="213" width="0.0252%" height="15" fill="rgb(215,141,46)" fg:x="10172102536" fg:w="23816114"/><text x="11.0098%" y="223.50"></text></g><g><title>[unknown] (23,816,114 samples, 0.03%)</title><rect x="10.7598%" y="197" width="0.0252%" height="15" fill="rgb(250,160,47)" fg:x="10172102536" fg:w="23816114"/><text x="11.0098%" y="207.50"></text></g><g><title>[unknown] (23,816,114 samples, 0.03%)</title><rect x="10.7598%" y="181" width="0.0252%" height="15" fill="rgb(216,222,40)" fg:x="10172102536" fg:w="23816114"/><text x="11.0098%" y="191.50"></text></g><g><title>[unknown] (19,221,407 samples, 0.02%)</title><rect x="10.7647%" y="165" width="0.0203%" height="15" fill="rgb(234,217,39)" fg:x="10176697243" fg:w="19221407"/><text x="11.0147%" y="175.50"></text></g><g><title>[unknown] (12,577,178 samples, 0.01%)</title><rect x="10.7717%" y="149" width="0.0133%" height="15" fill="rgb(207,178,40)" fg:x="10183341472" fg:w="12577178"/><text x="11.0217%" y="159.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_broadcast_sd (27,982,862 samples, 0.03%)</title><rect x="10.7883%" y="341" width="0.0296%" height="15" fill="rgb(221,136,13)" fg:x="10199032564" fg:w="27982862"/><text x="11.0383%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_pd (27,982,862 samples, 0.03%)</title><rect x="10.7883%" y="325" width="0.0296%" height="15" fill="rgb(249,199,10)" fg:x="10199032564" fg:w="27982862"/><text x="11.0383%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_pd (27,982,862 samples, 0.03%)</title><rect x="10.7883%" y="309" width="0.0296%" height="15" fill="rgb(249,222,13)" fg:x="10199032564" fg:w="27982862"/><text x="11.0383%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (936,563,517 samples, 0.99%)</title><rect x="10.8179%" y="341" width="0.9907%" height="15" fill="rgb(244,185,38)" fg:x="10227015426" fg:w="936563517"/><text x="11.0679%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (2,736,366,422 samples, 2.89%)</title><rect x="11.8086%" y="341" width="2.8945%" height="15" fill="rgb(236,202,9)" fg:x="11163578943" fg:w="2736366422"/><text x="12.0586%" y="351.50">co..</text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="325" width="0.0103%" height="15" fill="rgb(250,229,37)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="335.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="309" width="0.0103%" height="15" fill="rgb(206,174,23)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="319.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="293" width="0.0103%" height="15" fill="rgb(211,33,43)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="303.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="277" width="0.0103%" height="15" fill="rgb(245,58,50)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="287.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="261" width="0.0103%" height="15" fill="rgb(244,68,36)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="271.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="245" width="0.0103%" height="15" fill="rgb(232,229,15)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="255.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="229" width="0.0103%" height="15" fill="rgb(254,30,23)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="239.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="213" width="0.0103%" height="15" fill="rgb(235,160,14)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="223.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="197" width="0.0103%" height="15" fill="rgb(212,155,44)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="207.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="181" width="0.0103%" height="15" fill="rgb(226,2,50)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="191.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="165" width="0.0103%" height="15" fill="rgb(234,177,6)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="175.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="149" width="0.0103%" height="15" fill="rgb(217,24,9)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="159.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="133" width="0.0103%" height="15" fill="rgb(220,13,46)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="143.50"></text></g><g><title>[unknown] (9,718,163 samples, 0.01%)</title><rect x="14.6927%" y="117" width="0.0103%" height="15" fill="rgb(239,221,27)" fg:x="13890227202" fg:w="9718163"/><text x="14.9427%" y="127.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (303,187,049 samples, 0.32%)</title><rect x="14.7030%" y="341" width="0.3207%" height="15" fill="rgb(222,198,25)" fg:x="13899945365" fg:w="303187049"/><text x="14.9530%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (30,870,756 samples, 0.03%)</title><rect x="15.0237%" y="341" width="0.0327%" height="15" fill="rgb(211,99,13)" fg:x="14203132414" fg:w="30870756"/><text x="15.2737%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (30,870,756 samples, 0.03%)</title><rect x="15.0237%" y="325" width="0.0327%" height="15" fill="rgb(232,111,31)" fg:x="14203132414" fg:w="30870756"/><text x="15.2737%" y="335.50"></text></g><g><title>core::ptr::write_unaligned (30,870,756 samples, 0.03%)</title><rect x="15.0237%" y="309" width="0.0327%" height="15" fill="rgb(245,82,37)" fg:x="14203132414" fg:w="30870756"/><text x="15.2737%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30,870,756 samples, 0.03%)</title><rect x="15.0237%" y="293" width="0.0327%" height="15" fill="rgb(227,149,46)" fg:x="14203132414" fg:w="30870756"/><text x="15.2737%" y="303.50"></text></g><g><title>[unknown] (14,128,155 samples, 0.01%)</title><rect x="15.0414%" y="277" width="0.0149%" height="15" fill="rgb(218,36,50)" fg:x="14219875015" fg:w="14128155"/><text x="15.2914%" y="287.50"></text></g><g><title>[unknown] (14,128,155 samples, 0.01%)</title><rect x="15.0414%" y="261" width="0.0149%" height="15" fill="rgb(226,80,48)" fg:x="14219875015" fg:w="14128155"/><text x="15.2914%" y="271.50"></text></g><g><title>[unknown] (14,128,155 samples, 0.01%)</title><rect x="15.0414%" y="245" width="0.0149%" height="15" fill="rgb(238,224,15)" fg:x="14219875015" fg:w="14128155"/><text x="15.2914%" y="255.50"></text></g><g><title>[unknown] (14,128,155 samples, 0.01%)</title><rect x="15.0414%" y="229" width="0.0149%" height="15" fill="rgb(241,136,10)" fg:x="14219875015" fg:w="14128155"/><text x="15.2914%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (221,859,685 samples, 0.23%)</title><rect x="15.0564%" y="341" width="0.2347%" height="15" fill="rgb(208,32,45)" fg:x="14234003170" fg:w="221859685"/><text x="15.3064%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (221,859,685 samples, 0.23%)</title><rect x="15.0564%" y="325" width="0.2347%" height="15" fill="rgb(207,135,9)" fg:x="14234003170" fg:w="221859685"/><text x="15.3064%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (130,279,381 samples, 0.14%)</title><rect x="15.1532%" y="309" width="0.1378%" height="15" fill="rgb(206,86,44)" fg:x="14325583474" fg:w="130279381"/><text x="15.4032%" y="319.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (9,821,016,841 samples, 10.39%)</title><rect x="5.1254%" y="389" width="10.3884%" height="15" fill="rgb(245,177,15)" fg:x="4845408109" fg:w="9821016841"/><text x="5.3754%" y="399.50">&lt;matrixmultiply..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (9,711,691,955 samples, 10.27%)</title><rect x="5.2410%" y="373" width="10.2728%" height="15" fill="rgb(206,64,50)" fg:x="4954732995" fg:w="9711691955"/><text x="5.4910%" y="383.50">matrixmultiply:..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (9,429,789,542 samples, 9.97%)</title><rect x="5.5392%" y="357" width="9.9746%" height="15" fill="rgb(234,36,40)" fg:x="5236635408" fg:w="9429789542"/><text x="5.7892%" y="367.50">matrixmultiply..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (210,562,095 samples, 0.22%)</title><rect x="15.2911%" y="341" width="0.2227%" height="15" fill="rgb(213,64,8)" fg:x="14455862855" fg:w="210562095"/><text x="15.5411%" y="351.50"></text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (52,909,979 samples, 0.06%)</title><rect x="15.5138%" y="389" width="0.0560%" height="15" fill="rgb(210,75,36)" fg:x="14666424950" fg:w="52909979"/><text x="15.7638%" y="399.50"></text></g><g><title>core::cmp::min (13,560,336 samples, 0.01%)</title><rect x="15.5554%" y="373" width="0.0143%" height="15" fill="rgb(229,88,21)" fg:x="14705774593" fg:w="13560336"/><text x="15.8054%" y="383.50"></text></g><g><title>core::cmp::Ord::min (13,560,336 samples, 0.01%)</title><rect x="15.5554%" y="357" width="0.0143%" height="15" fill="rgb(252,204,47)" fg:x="14705774593" fg:w="13560336"/><text x="15.8054%" y="367.50"></text></g><g><title>core::cmp::min_by (13,560,336 samples, 0.01%)</title><rect x="15.5554%" y="341" width="0.0143%" height="15" fill="rgb(208,77,27)" fg:x="14705774593" fg:w="13560336"/><text x="15.8054%" y="351.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (799,248,134 samples, 0.85%)</title><rect x="15.8615%" y="325" width="0.8454%" height="15" fill="rgb(221,76,26)" fg:x="14995190719" fg:w="799248134"/><text x="16.1115%" y="335.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (799,248,134 samples, 0.85%)</title><rect x="15.8615%" y="309" width="0.8454%" height="15" fill="rgb(225,139,18)" fg:x="14995190719" fg:w="799248134"/><text x="16.1115%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_blend_pd (27,121,541 samples, 0.03%)</title><rect x="16.7070%" y="325" width="0.0287%" height="15" fill="rgb(230,137,11)" fg:x="15794438853" fg:w="27121541"/><text x="16.9570%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_broadcast_sd (13,803,601 samples, 0.01%)</title><rect x="16.7357%" y="325" width="0.0146%" height="15" fill="rgb(212,28,1)" fg:x="15821560394" fg:w="13803601"/><text x="16.9857%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_pd (13,803,601 samples, 0.01%)</title><rect x="16.7357%" y="309" width="0.0146%" height="15" fill="rgb(248,164,17)" fg:x="15821560394" fg:w="13803601"/><text x="16.9857%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_pd (13,803,601 samples, 0.01%)</title><rect x="16.7357%" y="293" width="0.0146%" height="15" fill="rgb(222,171,42)" fg:x="15821560394" fg:w="13803601"/><text x="16.9857%" y="303.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (269,592,266 samples, 0.29%)</title><rect x="16.7503%" y="325" width="0.2852%" height="15" fill="rgb(243,84,45)" fg:x="15835363995" fg:w="269592266"/><text x="17.0003%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (525,054,127 samples, 0.56%)</title><rect x="17.0354%" y="325" width="0.5554%" height="15" fill="rgb(252,49,23)" fg:x="16104956261" fg:w="525054127"/><text x="17.2854%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (29,565,319 samples, 0.03%)</title><rect x="17.5908%" y="325" width="0.0313%" height="15" fill="rgb(215,19,7)" fg:x="16630010388" fg:w="29565319"/><text x="17.8408%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (20,794,489 samples, 0.02%)</title><rect x="17.6221%" y="325" width="0.0220%" height="15" fill="rgb(238,81,41)" fg:x="16659575707" fg:w="20794489"/><text x="17.8721%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (20,794,489 samples, 0.02%)</title><rect x="17.6221%" y="309" width="0.0220%" height="15" fill="rgb(210,199,37)" fg:x="16659575707" fg:w="20794489"/><text x="17.8721%" y="319.50"></text></g><g><title>core::ptr::write_unaligned (20,794,489 samples, 0.02%)</title><rect x="17.6221%" y="293" width="0.0220%" height="15" fill="rgb(244,192,49)" fg:x="16659575707" fg:w="20794489"/><text x="17.8721%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20,794,489 samples, 0.02%)</title><rect x="17.6221%" y="277" width="0.0220%" height="15" fill="rgb(226,211,11)" fg:x="16659575707" fg:w="20794489"/><text x="17.8721%" y="287.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (1,939,302,645 samples, 2.05%)</title><rect x="15.6382%" y="373" width="2.0513%" height="15" fill="rgb(236,162,54)" fg:x="14784056769" fg:w="1939302645"/><text x="15.8882%" y="383.50">&lt;..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (1,897,333,370 samples, 2.01%)</title><rect x="15.6826%" y="357" width="2.0070%" height="15" fill="rgb(220,229,9)" fg:x="14826026044" fg:w="1897333370"/><text x="15.9326%" y="367.50">m..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (1,851,912,700 samples, 1.96%)</title><rect x="15.7307%" y="341" width="1.9589%" height="15" fill="rgb(250,87,22)" fg:x="14871446714" fg:w="1851912700"/><text x="15.9807%" y="351.50">m..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (42,989,218 samples, 0.05%)</title><rect x="17.6441%" y="325" width="0.0455%" height="15" fill="rgb(239,43,17)" fg:x="16680370196" fg:w="42989218"/><text x="17.8941%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (42,989,218 samples, 0.05%)</title><rect x="17.6441%" y="309" width="0.0455%" height="15" fill="rgb(231,177,25)" fg:x="16680370196" fg:w="42989218"/><text x="17.8941%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (20,725,989 samples, 0.02%)</title><rect x="17.6676%" y="293" width="0.0219%" height="15" fill="rgb(219,179,1)" fg:x="16702633425" fg:w="20725989"/><text x="17.9176%" y="303.50"></text></g><g><title>matrixmultiply::gemm::masked_kernel (2,104,014,351 samples, 2.23%)</title><rect x="15.5698%" y="389" width="2.2256%" height="15" fill="rgb(238,219,53)" fg:x="14719334929" fg:w="2104014351"/><text x="15.8198%" y="399.50">m..</text></g><g><title>matrixmultiply::gemm::c_to_masked_ab_beta_c (99,989,866 samples, 0.11%)</title><rect x="17.6896%" y="373" width="0.1058%" height="15" fill="rgb(232,167,36)" fg:x="16723359414" fg:w="99989866"/><text x="17.9396%" y="383.50"></text></g><g><title>rawpointer::PointerExt::stride_offset (31,489,729 samples, 0.03%)</title><rect x="17.7953%" y="389" width="0.0333%" height="15" fill="rgb(244,19,51)" fg:x="16823349280" fg:w="31489729"/><text x="18.0453%" y="399.50"></text></g><g><title>&lt;matrixmultiply::ptr::Ptr&lt;*const T&gt; as rawpointer::PointerExt&gt;::offset (31,489,729 samples, 0.03%)</title><rect x="17.7953%" y="373" width="0.0333%" height="15" fill="rgb(224,6,22)" fg:x="16823349280" fg:w="31489729"/><text x="18.0453%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (31,489,729 samples, 0.03%)</title><rect x="17.7953%" y="357" width="0.0333%" height="15" fill="rgb(224,145,5)" fg:x="16823349280" fg:w="31489729"/><text x="18.0453%" y="367.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (12,317,106,569 samples, 13.03%)</title><rect x="4.8327%" y="421" width="13.0287%" height="15" fill="rgb(234,130,49)" fg:x="4568715889" fg:w="12317106569"/><text x="5.0827%" y="431.50">matrixmultiply::thre..</text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (12,148,838,715 samples, 12.85%)</title><rect x="5.0107%" y="405" width="12.8507%" height="15" fill="rgb(254,6,2)" fg:x="4736983743" fg:w="12148838715"/><text x="5.2607%" y="415.50">matrixmultiply::gem..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (30,983,449 samples, 0.03%)</title><rect x="17.8286%" y="389" width="0.0328%" height="15" fill="rgb(208,96,46)" fg:x="16854839009" fg:w="30983449"/><text x="18.0786%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (30,983,449 samples, 0.03%)</title><rect x="17.8286%" y="373" width="0.0328%" height="15" fill="rgb(239,3,39)" fg:x="16854839009" fg:w="30983449"/><text x="18.0786%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (30,983,449 samples, 0.03%)</title><rect x="17.8286%" y="357" width="0.0328%" height="15" fill="rgb(233,210,1)" fg:x="16854839009" fg:w="30983449"/><text x="18.0786%" y="367.50"></text></g><g><title>matrixmultiply::gemm::MASK_BUF::_{{constant}}::_{{closure}} (30,983,449 samples, 0.03%)</title><rect x="17.8286%" y="341" width="0.0328%" height="15" fill="rgb(244,137,37)" fg:x="16854839009" fg:w="30983449"/><text x="18.0786%" y="351.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (30,983,449 samples, 0.03%)</title><rect x="17.8286%" y="325" width="0.0328%" height="15" fill="rgb(240,136,2)" fg:x="16854839009" fg:w="30983449"/><text x="18.0786%" y="335.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (12,340,205,644 samples, 13.05%)</title><rect x="4.8180%" y="437" width="13.0532%" height="15" fill="rgb(239,18,37)" fg:x="4554887579" fg:w="12340205644"/><text x="5.0680%" y="447.50">matrixmultiply::gemm..</text></g><g><title>core::intrinsics::copy_nonoverlapping (2,190,361,331 samples, 2.32%)</title><rect x="18.1063%" y="421" width="2.3169%" height="15" fill="rgb(218,185,22)" fg:x="17117341292" fg:w="2190361331"/><text x="18.3563%" y="431.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (78,505,864 samples, 0.08%)</title><rect x="20.4232%" y="421" width="0.0830%" height="15" fill="rgb(225,218,4)" fg:x="19307702623" fg:w="78505864"/><text x="20.6732%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (78,505,864 samples, 0.08%)</title><rect x="20.4232%" y="405" width="0.0830%" height="15" fill="rgb(230,182,32)" fg:x="19307702623" fg:w="78505864"/><text x="20.6732%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (19,249,629 samples, 0.02%)</title><rect x="20.4859%" y="389" width="0.0204%" height="15" fill="rgb(242,56,43)" fg:x="19366958858" fg:w="19249629"/><text x="20.7359%" y="399.50"></text></g><g><title>matrixmultiply::gemm::pack (2,567,344,534 samples, 2.72%)</title><rect x="17.8712%" y="437" width="2.7157%" height="15" fill="rgb(233,99,24)" fg:x="16895093223" fg:w="2567344534"/><text x="18.1212%" y="447.50">ma..</text></g><g><title>rawpointer::PointerExt::stride_offset (76,229,270 samples, 0.08%)</title><rect x="20.5063%" y="421" width="0.0806%" height="15" fill="rgb(234,209,42)" fg:x="19386208487" fg:w="76229270"/><text x="20.7563%" y="431.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (14,921,201,218 samples, 15.78%)</title><rect x="4.8074%" y="469" width="15.7833%" height="15" fill="rgb(227,7,12)" fg:x="4544789324" fg:w="14921201218"/><text x="5.0574%" y="479.50">matrixmultiply::threadin..</text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (14,914,231,390 samples, 15.78%)</title><rect x="4.8147%" y="453" width="15.7759%" height="15" fill="rgb(245,203,43)" fg:x="4551759152" fg:w="14914231390"/><text x="5.0647%" y="463.50">matrixmultiply::gemm::ge..</text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (15,099,182,370 samples, 15.97%)</title><rect x="4.6266%" y="533" width="15.9715%" height="15" fill="rgb(238,205,33)" fg:x="4373862594" fg:w="15099182370"/><text x="4.8766%" y="543.50">ndarray::linalg::impl_lin..</text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (15,099,182,370 samples, 15.97%)</title><rect x="4.6266%" y="517" width="15.9715%" height="15" fill="rgb(231,56,7)" fg:x="4373862594" fg:w="15099182370"/><text x="4.8766%" y="527.50">&lt;ndarray::ArrayBase&lt;S,nda..</text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (15,034,864,976 samples, 15.90%)</title><rect x="4.6946%" y="501" width="15.9035%" height="15" fill="rgb(244,186,29)" fg:x="4438179988" fg:w="15034864976"/><text x="4.9446%" y="511.50">ndarray::linalg::impl_li..</text></g><g><title>matrixmultiply::gemm::gemm_loop (15,014,202,682 samples, 15.88%)</title><rect x="4.7165%" y="485" width="15.8817%" height="15" fill="rgb(234,111,31)" fg:x="4458842282" fg:w="15014202682"/><text x="4.9665%" y="495.50">matrixmultiply::gemm::ge..</text></g><g><title>__GI___libc_free (16,188,375 samples, 0.02%)</title><rect x="20.6161%" y="517" width="0.0171%" height="15" fill="rgb(241,149,10)" fg:x="19490088956" fg:w="16188375"/><text x="20.8661%" y="527.50"></text></g><g><title>[unknown] (13,886,966 samples, 0.01%)</title><rect x="21.6861%" y="421" width="0.0147%" height="15" fill="rgb(249,206,44)" fg:x="20501601522" fg:w="13886966"/><text x="21.9361%" y="431.50"></text></g><g><title>[unknown] (13,886,966 samples, 0.01%)</title><rect x="21.6861%" y="405" width="0.0147%" height="15" fill="rgb(251,153,30)" fg:x="20501601522" fg:w="13886966"/><text x="21.9361%" y="415.50"></text></g><g><title>[unknown] (10,494,626 samples, 0.01%)</title><rect x="21.6897%" y="389" width="0.0111%" height="15" fill="rgb(239,152,38)" fg:x="20504993862" fg:w="10494626"/><text x="21.9397%" y="399.50"></text></g><g><title>[unknown] (10,494,626 samples, 0.01%)</title><rect x="21.6897%" y="373" width="0.0111%" height="15" fill="rgb(249,139,47)" fg:x="20504993862" fg:w="10494626"/><text x="21.9397%" y="383.50"></text></g><g><title>[unknown] (10,494,626 samples, 0.01%)</title><rect x="21.6897%" y="357" width="0.0111%" height="15" fill="rgb(244,64,35)" fg:x="20504993862" fg:w="10494626"/><text x="21.9397%" y="367.50"></text></g><g><title>[unknown] (10,494,626 samples, 0.01%)</title><rect x="21.6897%" y="341" width="0.0111%" height="15" fill="rgb(216,46,15)" fg:x="20504993862" fg:w="10494626"/><text x="21.9397%" y="351.50"></text></g><g><title>[unknown] (10,494,626 samples, 0.01%)</title><rect x="21.6897%" y="325" width="0.0111%" height="15" fill="rgb(250,74,19)" fg:x="20504993862" fg:w="10494626"/><text x="21.9397%" y="335.50"></text></g><g><title>[unknown] (10,494,626 samples, 0.01%)</title><rect x="21.6897%" y="309" width="0.0111%" height="15" fill="rgb(249,42,33)" fg:x="20504993862" fg:w="10494626"/><text x="21.9397%" y="319.50"></text></g><g><title>[unknown] (10,494,626 samples, 0.01%)</title><rect x="21.6897%" y="293" width="0.0111%" height="15" fill="rgb(242,149,17)" fg:x="20504993862" fg:w="10494626"/><text x="21.9397%" y="303.50"></text></g><g><title>[unknown] (10,494,626 samples, 0.01%)</title><rect x="21.6897%" y="277" width="0.0111%" height="15" fill="rgb(244,29,21)" fg:x="20504993862" fg:w="10494626"/><text x="21.9397%" y="287.50"></text></g><g><title>core::ptr::write (1,816,425,187 samples, 1.92%)</title><rect x="21.7008%" y="405" width="1.9214%" height="15" fill="rgb(220,130,37)" fg:x="20515488488" fg:w="1816425187"/><text x="21.9508%" y="415.50">c..</text></g><g><title>[unknown] (552,711,374 samples, 0.58%)</title><rect x="23.0375%" y="389" width="0.5846%" height="15" fill="rgb(211,67,2)" fg:x="21779202301" fg:w="552711374"/><text x="23.2875%" y="399.50"></text></g><g><title>[unknown] (497,790,219 samples, 0.53%)</title><rect x="23.0956%" y="373" width="0.5266%" height="15" fill="rgb(235,68,52)" fg:x="21834123456" fg:w="497790219"/><text x="23.3456%" y="383.50"></text></g><g><title>[unknown] (490,734,898 samples, 0.52%)</title><rect x="23.1031%" y="357" width="0.5191%" height="15" fill="rgb(246,142,3)" fg:x="21841178777" fg:w="490734898"/><text x="23.3531%" y="367.50"></text></g><g><title>[unknown] (469,678,560 samples, 0.50%)</title><rect x="23.1253%" y="341" width="0.4968%" height="15" fill="rgb(241,25,7)" fg:x="21862235115" fg:w="469678560"/><text x="23.3753%" y="351.50"></text></g><g><title>[unknown] (437,226,281 samples, 0.46%)</title><rect x="23.1597%" y="325" width="0.4625%" height="15" fill="rgb(242,119,39)" fg:x="21894687394" fg:w="437226281"/><text x="23.4097%" y="335.50"></text></g><g><title>[unknown] (407,427,985 samples, 0.43%)</title><rect x="23.1912%" y="309" width="0.4310%" height="15" fill="rgb(241,98,45)" fg:x="21924485690" fg:w="407427985"/><text x="23.4412%" y="319.50"></text></g><g><title>[unknown] (388,096,037 samples, 0.41%)</title><rect x="23.2116%" y="293" width="0.4105%" height="15" fill="rgb(254,28,30)" fg:x="21943817638" fg:w="388096037"/><text x="23.4616%" y="303.50"></text></g><g><title>[unknown] (342,043,267 samples, 0.36%)</title><rect x="23.2603%" y="277" width="0.3618%" height="15" fill="rgb(241,142,54)" fg:x="21989870408" fg:w="342043267"/><text x="23.5103%" y="287.50"></text></g><g><title>[unknown] (288,614,076 samples, 0.31%)</title><rect x="23.3169%" y="261" width="0.3053%" height="15" fill="rgb(222,85,15)" fg:x="22043299599" fg:w="288614076"/><text x="23.5669%" y="271.50"></text></g><g><title>[unknown] (218,686,433 samples, 0.23%)</title><rect x="23.3908%" y="245" width="0.2313%" height="15" fill="rgb(210,85,47)" fg:x="22113227242" fg:w="218686433"/><text x="23.6408%" y="255.50"></text></g><g><title>[unknown] (193,528,476 samples, 0.20%)</title><rect x="23.4174%" y="229" width="0.2047%" height="15" fill="rgb(224,206,25)" fg:x="22138385199" fg:w="193528476"/><text x="23.6674%" y="239.50"></text></g><g><title>[unknown] (130,606,616 samples, 0.14%)</title><rect x="23.4840%" y="213" width="0.1382%" height="15" fill="rgb(243,201,19)" fg:x="22201307059" fg:w="130606616"/><text x="23.7340%" y="223.50"></text></g><g><title>[unknown] (117,398,500 samples, 0.12%)</title><rect x="23.4980%" y="197" width="0.1242%" height="15" fill="rgb(236,59,4)" fg:x="22214515175" fg:w="117398500"/><text x="23.7480%" y="207.50"></text></g><g><title>[unknown] (27,952,915 samples, 0.03%)</title><rect x="23.5926%" y="181" width="0.0296%" height="15" fill="rgb(254,179,45)" fg:x="22303960760" fg:w="27952915"/><text x="23.8426%" y="191.50"></text></g><g><title>[unknown] (13,878,973 samples, 0.01%)</title><rect x="26.3759%" y="373" width="0.0147%" height="15" fill="rgb(226,14,10)" fg:x="24935256232" fg:w="13878973"/><text x="26.6259%" y="383.50"></text></g><g><title>[unknown] (13,878,973 samples, 0.01%)</title><rect x="26.3759%" y="357" width="0.0147%" height="15" fill="rgb(244,27,41)" fg:x="24935256232" fg:w="13878973"/><text x="26.6259%" y="367.50"></text></g><g><title>[unknown] (13,878,973 samples, 0.01%)</title><rect x="26.3759%" y="341" width="0.0147%" height="15" fill="rgb(235,35,32)" fg:x="24935256232" fg:w="13878973"/><text x="26.6259%" y="351.50"></text></g><g><title>[unknown] (13,878,973 samples, 0.01%)</title><rect x="26.3759%" y="325" width="0.0147%" height="15" fill="rgb(218,68,31)" fg:x="24935256232" fg:w="13878973"/><text x="26.6259%" y="335.50"></text></g><g><title>[unknown] (13,878,973 samples, 0.01%)</title><rect x="26.3759%" y="309" width="0.0147%" height="15" fill="rgb(207,120,37)" fg:x="24935256232" fg:w="13878973"/><text x="26.6259%" y="319.50"></text></g><g><title>[unknown] (13,878,973 samples, 0.01%)</title><rect x="26.3759%" y="293" width="0.0147%" height="15" fill="rgb(227,98,0)" fg:x="24935256232" fg:w="13878973"/><text x="26.6259%" y="303.50"></text></g><g><title>[unknown] (13,878,973 samples, 0.01%)</title><rect x="26.3759%" y="277" width="0.0147%" height="15" fill="rgb(207,7,3)" fg:x="24935256232" fg:w="13878973"/><text x="26.6259%" y="287.50"></text></g><g><title>[unknown] (13,878,973 samples, 0.01%)</title><rect x="26.3759%" y="261" width="0.0147%" height="15" fill="rgb(206,98,19)" fg:x="24935256232" fg:w="13878973"/><text x="26.6259%" y="271.50"></text></g><g><title>[unknown] (13,878,973 samples, 0.01%)</title><rect x="26.3759%" y="245" width="0.0147%" height="15" fill="rgb(217,5,26)" fg:x="24935256232" fg:w="13878973"/><text x="26.6259%" y="255.50"></text></g><g><title>[unknown] (13,878,973 samples, 0.01%)</title><rect x="26.3759%" y="229" width="0.0147%" height="15" fill="rgb(235,190,38)" fg:x="24935256232" fg:w="13878973"/><text x="26.6259%" y="239.50"></text></g><g><title>[unknown] (10,324,142 samples, 0.01%)</title><rect x="26.3797%" y="213" width="0.0109%" height="15" fill="rgb(247,86,24)" fg:x="24938811063" fg:w="10324142"/><text x="26.6297%" y="223.50"></text></g><g><title>[unknown] (31,687,490 samples, 0.03%)</title><rect x="31.9290%" y="357" width="0.0335%" height="15" fill="rgb(205,101,16)" fg:x="30185009736" fg:w="31687490"/><text x="32.1790%" y="367.50"></text></g><g><title>[unknown] (28,164,447 samples, 0.03%)</title><rect x="31.9327%" y="341" width="0.0298%" height="15" fill="rgb(246,168,33)" fg:x="30188532779" fg:w="28164447"/><text x="32.1827%" y="351.50"></text></g><g><title>[unknown] (28,164,447 samples, 0.03%)</title><rect x="31.9327%" y="325" width="0.0298%" height="15" fill="rgb(231,114,1)" fg:x="30188532779" fg:w="28164447"/><text x="32.1827%" y="335.50"></text></g><g><title>[unknown] (28,164,447 samples, 0.03%)</title><rect x="31.9327%" y="309" width="0.0298%" height="15" fill="rgb(207,184,53)" fg:x="30188532779" fg:w="28164447"/><text x="32.1827%" y="319.50"></text></g><g><title>[unknown] (28,164,447 samples, 0.03%)</title><rect x="31.9327%" y="293" width="0.0298%" height="15" fill="rgb(224,95,51)" fg:x="30188532779" fg:w="28164447"/><text x="32.1827%" y="303.50"></text></g><g><title>[unknown] (26,565,978 samples, 0.03%)</title><rect x="31.9344%" y="277" width="0.0281%" height="15" fill="rgb(212,188,45)" fg:x="30190131248" fg:w="26565978"/><text x="32.1844%" y="287.50"></text></g><g><title>[unknown] (26,565,978 samples, 0.03%)</title><rect x="31.9344%" y="261" width="0.0281%" height="15" fill="rgb(223,154,38)" fg:x="30190131248" fg:w="26565978"/><text x="32.1844%" y="271.50"></text></g><g><title>[unknown] (23,171,233 samples, 0.02%)</title><rect x="31.9380%" y="245" width="0.0245%" height="15" fill="rgb(251,22,52)" fg:x="30193525993" fg:w="23171233"/><text x="32.1880%" y="255.50"></text></g><g><title>[unknown] (19,682,227 samples, 0.02%)</title><rect x="31.9417%" y="229" width="0.0208%" height="15" fill="rgb(229,209,22)" fg:x="30197014999" fg:w="19682227"/><text x="32.1917%" y="239.50"></text></g><g><title>[unknown] (16,126,535 samples, 0.02%)</title><rect x="31.9454%" y="213" width="0.0171%" height="15" fill="rgb(234,138,34)" fg:x="30200570691" fg:w="16126535"/><text x="32.1954%" y="223.50"></text></g><g><title>[unknown] (16,126,535 samples, 0.02%)</title><rect x="31.9454%" y="197" width="0.0171%" height="15" fill="rgb(212,95,11)" fg:x="30200570691" fg:w="16126535"/><text x="32.1954%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (53,573,931,582 samples, 56.67%)</title><rect x="21.1234%" y="437" width="56.6692%" height="15" fill="rgb(240,179,47)" fg:x="19969601077" fg:w="53573931582"/><text x="21.3734%" y="447.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (53,028,044,171 samples, 56.09%)</title><rect x="21.7008%" y="421" width="56.0918%" height="15" fill="rgb(240,163,11)" fg:x="20515488488" fg:w="53028044171"/><text x="21.9508%" y="431.50">ndarray::iterators::to_vec_mapped::_{{closure}}</text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (51,211,618,984 samples, 54.17%)</title><rect x="23.6221%" y="405" width="54.1704%" height="15" fill="rgb(236,37,12)" fg:x="22331913675" fg:w="51211618984"/><text x="23.8721%" y="415.50">ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}}</text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (51,211,618,984 samples, 54.17%)</title><rect x="23.6221%" y="389" width="54.1704%" height="15" fill="rgb(232,164,16)" fg:x="22331913675" fg:w="51211618984"/><text x="23.8721%" y="399.50">rkl::core::activations::tanh_forward::_{{closure}}</text></g><g><title>fastapprox::fast::tanh (48,594,397,454 samples, 51.40%)</title><rect x="26.3906%" y="373" width="51.4020%" height="15" fill="rgb(244,205,15)" fg:x="24949135205" fg:w="48594397454"/><text x="26.6406%" y="383.50">fastapprox::fast::tanh</text></g><g><title>fastapprox::fast::exp (43,326,835,433 samples, 45.83%)</title><rect x="31.9625%" y="357" width="45.8301%" height="15" fill="rgb(223,117,47)" fg:x="30216697226" fg:w="43326835433"/><text x="32.2125%" y="367.50">fastapprox::fast::exp</text></g><g><title>fastapprox::fast::pow2 (43,326,835,433 samples, 45.83%)</title><rect x="31.9625%" y="341" width="45.8301%" height="15" fill="rgb(244,107,35)" fg:x="30216697226" fg:w="43326835433"/><text x="32.2125%" y="351.50">fastapprox::fast::pow2</text></g><g><title>[unknown] (264,653,316 samples, 0.28%)</title><rect x="77.5126%" y="325" width="0.2799%" height="15" fill="rgb(205,140,8)" fg:x="73278879343" fg:w="264653316"/><text x="77.7626%" y="335.50"></text></g><g><title>[unknown] (247,663,835 samples, 0.26%)</title><rect x="77.5306%" y="309" width="0.2620%" height="15" fill="rgb(228,84,46)" fg:x="73295868824" fg:w="247663835"/><text x="77.7806%" y="319.50"></text></g><g><title>[unknown] (246,065,388 samples, 0.26%)</title><rect x="77.5323%" y="293" width="0.2603%" height="15" fill="rgb(254,188,9)" fg:x="73297467271" fg:w="246065388"/><text x="77.7823%" y="303.50"></text></g><g><title>[unknown] (238,997,343 samples, 0.25%)</title><rect x="77.5397%" y="277" width="0.2528%" height="15" fill="rgb(206,112,54)" fg:x="73304535316" fg:w="238997343"/><text x="77.7897%" y="287.50"></text></g><g><title>[unknown] (226,470,743 samples, 0.24%)</title><rect x="77.5530%" y="261" width="0.2396%" height="15" fill="rgb(216,84,49)" fg:x="73317061916" fg:w="226470743"/><text x="77.8030%" y="271.50"></text></g><g><title>[unknown] (212,912,656 samples, 0.23%)</title><rect x="77.5673%" y="245" width="0.2252%" height="15" fill="rgb(214,194,35)" fg:x="73330620003" fg:w="212912656"/><text x="77.8173%" y="255.50"></text></g><g><title>[unknown] (190,192,699 samples, 0.20%)</title><rect x="77.5914%" y="229" width="0.2012%" height="15" fill="rgb(249,28,3)" fg:x="73353339960" fg:w="190192699"/><text x="77.8414%" y="239.50"></text></g><g><title>[unknown] (171,780,801 samples, 0.18%)</title><rect x="77.6108%" y="213" width="0.1817%" height="15" fill="rgb(222,56,52)" fg:x="73371751858" fg:w="171780801"/><text x="77.8608%" y="223.50"></text></g><g><title>[unknown] (160,127,192 samples, 0.17%)</title><rect x="77.6232%" y="197" width="0.1694%" height="15" fill="rgb(245,217,50)" fg:x="73383405467" fg:w="160127192"/><text x="77.8732%" y="207.50"></text></g><g><title>[unknown] (151,669,168 samples, 0.16%)</title><rect x="77.6321%" y="181" width="0.1604%" height="15" fill="rgb(213,201,24)" fg:x="73391863491" fg:w="151669168"/><text x="77.8821%" y="191.50"></text></g><g><title>[unknown] (122,726,477 samples, 0.13%)</title><rect x="77.6627%" y="165" width="0.1298%" height="15" fill="rgb(248,116,28)" fg:x="73420806182" fg:w="122726477"/><text x="77.9127%" y="175.50"></text></g><g><title>[unknown] (79,786,250 samples, 0.08%)</title><rect x="77.7081%" y="149" width="0.0844%" height="15" fill="rgb(219,72,43)" fg:x="73463746409" fg:w="79786250"/><text x="77.9581%" y="159.50"></text></g><g><title>[unknown] (51,672,367 samples, 0.05%)</title><rect x="77.7379%" y="133" width="0.0547%" height="15" fill="rgb(209,138,14)" fg:x="73491860292" fg:w="51672367"/><text x="77.9879%" y="143.50"></text></g><g><title>[unknown] (41,059,280 samples, 0.04%)</title><rect x="77.7491%" y="117" width="0.0434%" height="15" fill="rgb(222,18,33)" fg:x="73502473379" fg:w="41059280"/><text x="77.9991%" y="127.50"></text></g><g><title>[unknown] (10,282,033 samples, 0.01%)</title><rect x="77.7817%" y="101" width="0.0109%" height="15" fill="rgb(213,199,7)" fg:x="73533250626" fg:w="10282033"/><text x="78.0317%" y="111.50"></text></g><g><title>[unknown] (372,165,082 samples, 0.39%)</title><rect x="77.8100%" y="277" width="0.3937%" height="15" fill="rgb(250,110,10)" fg:x="73560077181" fg:w="372165082"/><text x="78.0600%" y="287.50"></text></g><g><title>[unknown] (327,094,855 samples, 0.35%)</title><rect x="77.8577%" y="261" width="0.3460%" height="15" fill="rgb(248,123,6)" fg:x="73605147408" fg:w="327094855"/><text x="78.1077%" y="271.50"></text></g><g><title>[unknown] (323,561,292 samples, 0.34%)</title><rect x="77.8615%" y="245" width="0.3423%" height="15" fill="rgb(206,91,31)" fg:x="73608680971" fg:w="323561292"/><text x="78.1115%" y="255.50"></text></g><g><title>[unknown] (310,274,766 samples, 0.33%)</title><rect x="77.8755%" y="229" width="0.3282%" height="15" fill="rgb(211,154,13)" fg:x="73621967497" fg:w="310274766"/><text x="78.1255%" y="239.50"></text></g><g><title>[unknown] (280,395,292 samples, 0.30%)</title><rect x="77.9071%" y="213" width="0.2966%" height="15" fill="rgb(225,148,7)" fg:x="73651846971" fg:w="280395292"/><text x="78.1571%" y="223.50"></text></g><g><title>[unknown] (266,730,588 samples, 0.28%)</title><rect x="77.9216%" y="197" width="0.2821%" height="15" fill="rgb(220,160,43)" fg:x="73665511675" fg:w="266730588"/><text x="78.1716%" y="207.50"></text></g><g><title>[unknown] (249,060,390 samples, 0.26%)</title><rect x="77.9403%" y="181" width="0.2634%" height="15" fill="rgb(213,52,39)" fg:x="73683181873" fg:w="249060390"/><text x="78.1903%" y="191.50"></text></g><g><title>[unknown] (199,895,990 samples, 0.21%)</title><rect x="77.9923%" y="165" width="0.2114%" height="15" fill="rgb(243,137,7)" fg:x="73732346273" fg:w="199895990"/><text x="78.2423%" y="175.50"></text></g><g><title>[unknown] (171,013,707 samples, 0.18%)</title><rect x="78.0228%" y="149" width="0.1809%" height="15" fill="rgb(230,79,13)" fg:x="73761228556" fg:w="171013707"/><text x="78.2728%" y="159.50"></text></g><g><title>[unknown] (148,930,647 samples, 0.16%)</title><rect x="78.0462%" y="133" width="0.1575%" height="15" fill="rgb(247,105,23)" fg:x="73783311616" fg:w="148930647"/><text x="78.2962%" y="143.50"></text></g><g><title>[unknown] (129,277,161 samples, 0.14%)</title><rect x="78.0670%" y="117" width="0.1367%" height="15" fill="rgb(223,179,41)" fg:x="73802965102" fg:w="129277161"/><text x="78.3170%" y="127.50"></text></g><g><title>[unknown] (83,957,964 samples, 0.09%)</title><rect x="78.1149%" y="101" width="0.0888%" height="15" fill="rgb(218,9,34)" fg:x="73848284299" fg:w="83957964"/><text x="78.3649%" y="111.50"></text></g><g><title>[unknown] (73,385,542 samples, 0.08%)</title><rect x="78.1261%" y="85" width="0.0776%" height="15" fill="rgb(222,106,8)" fg:x="73858856721" fg:w="73385542"/><text x="78.3761%" y="95.50"></text></g><g><title>[unknown] (14,104,101 samples, 0.01%)</title><rect x="78.2037%" y="261" width="0.0149%" height="15" fill="rgb(211,220,0)" fg:x="73932242263" fg:w="14104101"/><text x="78.4537%" y="271.50"></text></g><g><title>[unknown] (14,104,101 samples, 0.01%)</title><rect x="78.2037%" y="245" width="0.0149%" height="15" fill="rgb(229,52,16)" fg:x="73932242263" fg:w="14104101"/><text x="78.4537%" y="255.50"></text></g><g><title>[unknown] (14,104,101 samples, 0.01%)</title><rect x="78.2037%" y="229" width="0.0149%" height="15" fill="rgb(212,155,18)" fg:x="73932242263" fg:w="14104101"/><text x="78.4537%" y="239.50"></text></g><g><title>[unknown] (14,104,101 samples, 0.01%)</title><rect x="78.2037%" y="213" width="0.0149%" height="15" fill="rgb(242,21,14)" fg:x="73932242263" fg:w="14104101"/><text x="78.4537%" y="223.50"></text></g><g><title>[unknown] (14,104,101 samples, 0.01%)</title><rect x="78.2037%" y="197" width="0.0149%" height="15" fill="rgb(222,19,48)" fg:x="73932242263" fg:w="14104101"/><text x="78.4537%" y="207.50"></text></g><g><title>[unknown] (10,597,954 samples, 0.01%)</title><rect x="78.2074%" y="181" width="0.0112%" height="15" fill="rgb(232,45,27)" fg:x="73935748410" fg:w="10597954"/><text x="78.4574%" y="191.50"></text></g><g><title>[unknown] (10,597,954 samples, 0.01%)</title><rect x="78.2074%" y="165" width="0.0112%" height="15" fill="rgb(249,103,42)" fg:x="73935748410" fg:w="10597954"/><text x="78.4574%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (73,898,070,487 samples, 78.17%)</title><rect x="0.1373%" y="741" width="78.1676%" height="15" fill="rgb(246,81,33)" fg:x="129798640" fg:w="73898070487"/><text x="0.3873%" y="751.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (73,898,070,487 samples, 78.17%)</title><rect x="0.1373%" y="725" width="78.1676%" height="15" fill="rgb(252,33,42)" fg:x="129798640" fg:w="73898070487"/><text x="0.3873%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (73,898,070,487 samples, 78.17%)</title><rect x="0.1373%" y="709" width="78.1676%" height="15" fill="rgb(209,212,41)" fg:x="129798640" fg:w="73898070487"/><text x="0.3873%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (73,898,070,487 samples, 78.17%)</title><rect x="0.1373%" y="693" width="78.1676%" height="15" fill="rgb(207,154,6)" fg:x="129798640" fg:w="73898070487"/><text x="0.3873%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (73,898,070,487 samples, 78.17%)</title><rect x="0.1373%" y="677" width="78.1676%" height="15" fill="rgb(223,64,47)" fg:x="129798640" fg:w="73898070487"/><text x="0.3873%" y="687.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (73,892,678,055 samples, 78.16%)</title><rect x="0.1430%" y="661" width="78.1619%" height="15" fill="rgb(211,161,38)" fg:x="135191072" fg:w="73892678055"/><text x="0.3930%" y="671.50">alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (73,892,678,055 samples, 78.16%)</title><rect x="0.1430%" y="645" width="78.1619%" height="15" fill="rgb(219,138,40)" fg:x="135191072" fg:w="73892678055"/><text x="0.3930%" y="655.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73,892,678,055 samples, 78.16%)</title><rect x="0.1430%" y="629" width="78.1619%" height="15" fill="rgb(241,228,46)" fg:x="135191072" fg:w="73892678055"/><text x="0.3930%" y="639.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (73,892,678,055 samples, 78.16%)</title><rect x="0.1430%" y="613" width="78.1619%" height="15" fill="rgb(223,209,38)" fg:x="135191072" fg:w="73892678055"/><text x="0.3930%" y="623.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (73,892,678,055 samples, 78.16%)</title><rect x="0.1430%" y="597" width="78.1619%" height="15" fill="rgb(236,164,45)" fg:x="135191072" fg:w="73892678055"/><text x="0.3930%" y="607.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::compute_jacobian::_{{closure}} (73,892,678,055 samples, 78.16%)</title><rect x="0.1430%" y="581" width="78.1619%" height="15" fill="rgb(231,15,5)" fg:x="135191072" fg:w="73892678055"/><text x="0.3930%" y="591.50">rkl::core::optimizers::MarquardtOptimizer::compute_jacobian::_{{closure}}</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (73,480,782,176 samples, 77.73%)</title><rect x="0.5787%" y="565" width="77.7262%" height="15" fill="rgb(252,35,15)" fg:x="547086951" fg:w="73480782176"/><text x="0.8287%" y="575.50">rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict</text></g><g><title>rkl::core::layers::Dense::forward (73,472,249,855 samples, 77.72%)</title><rect x="0.5877%" y="549" width="77.7171%" height="15" fill="rgb(248,181,18)" fg:x="555619272" fg:w="73472249855"/><text x="0.8377%" y="559.50">rkl::core::layers::Dense::forward</text></g><g><title>rkl::core::activations::Activation::forward (54,554,824,163 samples, 57.71%)</title><rect x="20.5981%" y="533" width="57.7068%" height="15" fill="rgb(233,39,42)" fg:x="19473044964" fg:w="54554824163"/><text x="20.8481%" y="543.50">rkl::core::activations::Activation::forward</text></g><g><title>rkl::core::activations::tanh_forward (54,514,533,686 samples, 57.66%)</title><rect x="20.6407%" y="517" width="57.6641%" height="15" fill="rgb(238,110,33)" fg:x="19513335441" fg:w="54514533686"/><text x="20.8907%" y="527.50">rkl::core::activations::tanh_forward</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (54,514,533,686 samples, 57.66%)</title><rect x="20.6407%" y="501" width="57.6641%" height="15" fill="rgb(233,195,10)" fg:x="19513335441" fg:w="54514533686"/><text x="20.8907%" y="511.50">ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (54,514,533,686 samples, 57.66%)</title><rect x="20.6407%" y="485" width="57.6641%" height="15" fill="rgb(254,105,3)" fg:x="19513335441" fg:w="54514533686"/><text x="20.8907%" y="495.50">ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map</text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (54,510,991,956 samples, 57.66%)</title><rect x="20.6445%" y="469" width="57.6604%" height="15" fill="rgb(221,225,9)" fg:x="19516877171" fg:w="54510991956"/><text x="20.8945%" y="479.50">ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked</text></g><g><title>ndarray::iterators::to_vec_mapped (54,510,991,956 samples, 57.66%)</title><rect x="20.6445%" y="453" width="57.6604%" height="15" fill="rgb(224,227,45)" fg:x="19516877171" fg:w="54510991956"/><text x="20.8945%" y="463.50">ndarray::iterators::to_vec_mapped</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (481,283,334 samples, 0.51%)</title><rect x="77.7958%" y="437" width="0.5091%" height="15" fill="rgb(229,198,43)" fg:x="73546585793" fg:w="481283334"/><text x="78.0458%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (481,283,334 samples, 0.51%)</title><rect x="77.7958%" y="421" width="0.5091%" height="15" fill="rgb(206,209,35)" fg:x="73546585793" fg:w="481283334"/><text x="78.0458%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (481,283,334 samples, 0.51%)</title><rect x="77.7958%" y="405" width="0.5091%" height="15" fill="rgb(245,195,53)" fg:x="73546585793" fg:w="481283334"/><text x="78.0458%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (481,283,334 samples, 0.51%)</title><rect x="77.7958%" y="389" width="0.5091%" height="15" fill="rgb(240,92,26)" fg:x="73546585793" fg:w="481283334"/><text x="78.0458%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (481,283,334 samples, 0.51%)</title><rect x="77.7958%" y="373" width="0.5091%" height="15" fill="rgb(207,40,23)" fg:x="73546585793" fg:w="481283334"/><text x="78.0458%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (481,283,334 samples, 0.51%)</title><rect x="77.7958%" y="357" width="0.5091%" height="15" fill="rgb(223,111,35)" fg:x="73546585793" fg:w="481283334"/><text x="78.0458%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (481,283,334 samples, 0.51%)</title><rect x="77.7958%" y="341" width="0.5091%" height="15" fill="rgb(229,147,28)" fg:x="73546585793" fg:w="481283334"/><text x="78.0458%" y="351.50"></text></g><g><title>alloc::alloc::alloc (481,283,334 samples, 0.51%)</title><rect x="77.7958%" y="325" width="0.5091%" height="15" fill="rgb(211,29,28)" fg:x="73546585793" fg:w="481283334"/><text x="78.0458%" y="335.50"></text></g><g><title>__GI___libc_malloc (481,283,334 samples, 0.51%)</title><rect x="77.7958%" y="309" width="0.5091%" height="15" fill="rgb(228,72,33)" fg:x="73546585793" fg:w="481283334"/><text x="78.0458%" y="319.50"></text></g><g><title>_int_malloc (481,283,334 samples, 0.51%)</title><rect x="77.7958%" y="293" width="0.5091%" height="15" fill="rgb(205,214,31)" fg:x="73546585793" fg:w="481283334"/><text x="78.0458%" y="303.50"></text></g><g><title>sysmalloc (95,626,864 samples, 0.10%)</title><rect x="78.2037%" y="277" width="0.1012%" height="15" fill="rgb(224,111,15)" fg:x="73932242263" fg:w="95626864"/><text x="78.4537%" y="287.50"></text></g><g><title>__glibc_morecore (81,522,763 samples, 0.09%)</title><rect x="78.2186%" y="261" width="0.0862%" height="15" fill="rgb(253,21,26)" fg:x="73946346364" fg:w="81522763"/><text x="78.4686%" y="271.50"></text></g><g><title>__GI___sbrk (81,522,763 samples, 0.09%)</title><rect x="78.2186%" y="245" width="0.0862%" height="15" fill="rgb(245,139,43)" fg:x="73946346364" fg:w="81522763"/><text x="78.4686%" y="255.50"></text></g><g><title>__brk (81,522,763 samples, 0.09%)</title><rect x="78.2186%" y="229" width="0.0862%" height="15" fill="rgb(252,170,7)" fg:x="73946346364" fg:w="81522763"/><text x="78.4686%" y="239.50"></text></g><g><title>[unknown] (79,949,409 samples, 0.08%)</title><rect x="78.2203%" y="213" width="0.0846%" height="15" fill="rgb(231,118,14)" fg:x="73947919718" fg:w="79949409"/><text x="78.4703%" y="223.50"></text></g><g><title>[unknown] (79,949,409 samples, 0.08%)</title><rect x="78.2203%" y="197" width="0.0846%" height="15" fill="rgb(238,83,0)" fg:x="73947919718" fg:w="79949409"/><text x="78.4703%" y="207.50"></text></g><g><title>[unknown] (76,479,249 samples, 0.08%)</title><rect x="78.2240%" y="181" width="0.0809%" height="15" fill="rgb(221,39,39)" fg:x="73951389878" fg:w="76479249"/><text x="78.4740%" y="191.50"></text></g><g><title>[unknown] (72,949,304 samples, 0.08%)</title><rect x="78.2277%" y="165" width="0.0772%" height="15" fill="rgb(222,119,46)" fg:x="73954919823" fg:w="72949304"/><text x="78.4777%" y="175.50"></text></g><g><title>[unknown] (72,949,304 samples, 0.08%)</title><rect x="78.2277%" y="149" width="0.0772%" height="15" fill="rgb(222,165,49)" fg:x="73954919823" fg:w="72949304"/><text x="78.4777%" y="159.50"></text></g><g><title>[unknown] (69,423,678 samples, 0.07%)</title><rect x="78.2314%" y="133" width="0.0734%" height="15" fill="rgb(219,113,52)" fg:x="73958445449" fg:w="69423678"/><text x="78.4814%" y="143.50"></text></g><g><title>[unknown] (54,044,178 samples, 0.06%)</title><rect x="78.2477%" y="117" width="0.0572%" height="15" fill="rgb(214,7,15)" fg:x="73973824949" fg:w="54044178"/><text x="78.4977%" y="127.50"></text></g><g><title>[unknown] (43,392,204 samples, 0.05%)</title><rect x="78.2590%" y="101" width="0.0459%" height="15" fill="rgb(235,32,4)" fg:x="73984476923" fg:w="43392204"/><text x="78.5090%" y="111.50"></text></g><g><title>[unknown] (30,238,088 samples, 0.03%)</title><rect x="78.2729%" y="85" width="0.0320%" height="15" fill="rgb(238,90,54)" fg:x="73997631039" fg:w="30238088"/><text x="78.5229%" y="95.50"></text></g><g><title>[unknown] (23,162,610 samples, 0.02%)</title><rect x="78.2804%" y="69" width="0.0245%" height="15" fill="rgb(213,208,19)" fg:x="74004706517" fg:w="23162610"/><text x="78.5304%" y="79.50"></text></g><g><title>[unknown] (13,731,248 samples, 0.01%)</title><rect x="78.2903%" y="53" width="0.0145%" height="15" fill="rgb(233,156,4)" fg:x="74014137879" fg:w="13731248"/><text x="78.5403%" y="63.50"></text></g><g><title>[unknown] (10,151,466 samples, 0.01%)</title><rect x="78.2941%" y="37" width="0.0107%" height="15" fill="rgb(207,194,5)" fg:x="74017717661" fg:w="10151466"/><text x="78.5441%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="741" width="0.0113%" height="15" fill="rgb(206,111,30)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="725" width="0.0113%" height="15" fill="rgb(243,70,54)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="735.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="709" width="0.0113%" height="15" fill="rgb(242,28,8)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="693" width="0.0113%" height="15" fill="rgb(219,106,18)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="677" width="0.0113%" height="15" fill="rgb(244,222,10)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="661" width="0.0113%" height="15" fill="rgb(236,179,52)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="645" width="0.0113%" height="15" fill="rgb(213,23,39)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="629" width="0.0113%" height="15" fill="rgb(238,48,10)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="613" width="0.0113%" height="15" fill="rgb(251,196,23)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="623.50"></text></g><g><title>__GI___libc_free (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="597" width="0.0113%" height="15" fill="rgb(250,152,24)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="607.50"></text></g><g><title>systrim (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="581" width="0.0113%" height="15" fill="rgb(209,150,17)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="591.50"></text></g><g><title>__glibc_morecore (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="565" width="0.0113%" height="15" fill="rgb(234,202,34)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="575.50"></text></g><g><title>__GI___sbrk (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="549" width="0.0113%" height="15" fill="rgb(253,148,53)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="559.50"></text></g><g><title>__brk (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="533" width="0.0113%" height="15" fill="rgb(218,129,16)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="543.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="517" width="0.0113%" height="15" fill="rgb(216,85,19)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="527.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="501" width="0.0113%" height="15" fill="rgb(235,228,7)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="511.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="485" width="0.0113%" height="15" fill="rgb(245,175,0)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="495.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="469" width="0.0113%" height="15" fill="rgb(208,168,36)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="479.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="453" width="0.0113%" height="15" fill="rgb(246,171,24)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="463.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="437" width="0.0113%" height="15" fill="rgb(215,142,24)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="447.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="421" width="0.0113%" height="15" fill="rgb(250,187,7)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="431.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="405" width="0.0113%" height="15" fill="rgb(228,66,33)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="415.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="389" width="0.0113%" height="15" fill="rgb(234,215,21)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="399.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="373" width="0.0113%" height="15" fill="rgb(222,191,20)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="383.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="357" width="0.0113%" height="15" fill="rgb(245,79,54)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="367.50"></text></g><g><title>[unknown] (10,685,907 samples, 0.01%)</title><rect x="78.3160%" y="341" width="0.0113%" height="15" fill="rgb(240,10,37)" fg:x="74038393906" fg:w="10685907"/><text x="78.5660%" y="351.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zeros (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="741" width="0.1323%" height="15" fill="rgb(214,192,32)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="751.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_elem (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="725" width="0.1323%" height="15" fill="rgb(209,36,54)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="735.50"></text></g><g><title>alloc::vec::from_elem (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="709" width="0.1323%" height="15" fill="rgb(220,10,11)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="719.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="693" width="0.1323%" height="15" fill="rgb(221,106,17)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="677" width="0.1323%" height="15" fill="rgb(251,142,44)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="661" width="0.1323%" height="15" fill="rgb(238,13,15)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="645" width="0.1323%" height="15" fill="rgb(208,107,27)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="629" width="0.1323%" height="15" fill="rgb(205,136,37)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="613" width="0.1323%" height="15" fill="rgb(250,205,27)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="623.50"></text></g><g><title>alloc::alloc::alloc_zeroed (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="597" width="0.1323%" height="15" fill="rgb(210,80,43)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="607.50"></text></g><g><title>__memset_avx2_unaligned_erms (125,092,672 samples, 0.13%)</title><rect x="78.3311%" y="581" width="0.1323%" height="15" fill="rgb(247,160,36)" fg:x="74052632850" fg:w="125092672"/><text x="78.5811%" y="591.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="741" width="0.3082%" height="15" fill="rgb(234,13,49)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="751.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="725" width="0.3082%" height="15" fill="rgb(234,122,0)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="735.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="709" width="0.3082%" height="15" fill="rgb(207,146,38)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="719.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="693" width="0.3082%" height="15" fill="rgb(207,177,25)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="703.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="677" width="0.3082%" height="15" fill="rgb(211,178,42)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="687.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="661" width="0.3082%" height="15" fill="rgb(230,69,54)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="671.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="645" width="0.3082%" height="15" fill="rgb(214,135,41)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="655.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="629" width="0.3082%" height="15" fill="rgb(237,67,25)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="639.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="613" width="0.3082%" height="15" fill="rgb(222,189,50)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="623.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="597" width="0.3082%" height="15" fill="rgb(245,148,34)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="607.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="581" width="0.3082%" height="15" fill="rgb(222,29,6)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="591.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="565" width="0.3082%" height="15" fill="rgb(221,189,43)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="575.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (291,329,871 samples, 0.31%)</title><rect x="78.4634%" y="549" width="0.3082%" height="15" fill="rgb(207,36,27)" fg:x="74177725522" fg:w="291329871"/><text x="78.7134%" y="559.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (243,674,664 samples, 0.26%)</title><rect x="78.5138%" y="533" width="0.2578%" height="15" fill="rgb(217,90,24)" fg:x="74225380729" fg:w="243674664"/><text x="78.7638%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (243,674,664 samples, 0.26%)</title><rect x="78.5138%" y="517" width="0.2578%" height="15" fill="rgb(224,66,35)" fg:x="74225380729" fg:w="243674664"/><text x="78.7638%" y="527.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign::_{{closure}} (175,358,800 samples, 0.19%)</title><rect x="78.5860%" y="501" width="0.1855%" height="15" fill="rgb(221,13,50)" fg:x="74293696593" fg:w="175358800"/><text x="78.8360%" y="511.50"></text></g><g><title>core::clone::Clone::clone_from (175,358,800 samples, 0.19%)</title><rect x="78.5860%" y="485" width="0.1855%" height="15" fill="rgb(236,68,49)" fg:x="74293696593" fg:w="175358800"/><text x="78.8360%" y="495.50"></text></g><g><title>[unknown] (17,203,782 samples, 0.02%)</title><rect x="78.7533%" y="469" width="0.0182%" height="15" fill="rgb(229,146,28)" fg:x="74451851611" fg:w="17203782"/><text x="79.0033%" y="479.50"></text></g><g><title>[unknown] (17,203,782 samples, 0.02%)</title><rect x="78.7533%" y="453" width="0.0182%" height="15" fill="rgb(225,31,38)" fg:x="74451851611" fg:w="17203782"/><text x="79.0033%" y="463.50"></text></g><g><title>[unknown] (17,203,782 samples, 0.02%)</title><rect x="78.7533%" y="437" width="0.0182%" height="15" fill="rgb(250,208,3)" fg:x="74451851611" fg:w="17203782"/><text x="79.0033%" y="447.50"></text></g><g><title>[unknown] (13,769,019 samples, 0.01%)</title><rect x="78.7570%" y="421" width="0.0146%" height="15" fill="rgb(246,54,23)" fg:x="74455286374" fg:w="13769019"/><text x="79.0070%" y="431.50"></text></g><g><title>[unknown] (13,769,019 samples, 0.01%)</title><rect x="78.7570%" y="405" width="0.0146%" height="15" fill="rgb(243,76,11)" fg:x="74455286374" fg:w="13769019"/><text x="79.0070%" y="415.50"></text></g><g><title>[unknown] (13,769,019 samples, 0.01%)</title><rect x="78.7570%" y="389" width="0.0146%" height="15" fill="rgb(245,21,50)" fg:x="74455286374" fg:w="13769019"/><text x="79.0070%" y="399.50"></text></g><g><title>[unknown] (13,769,019 samples, 0.01%)</title><rect x="78.7570%" y="373" width="0.0146%" height="15" fill="rgb(228,9,43)" fg:x="74455286374" fg:w="13769019"/><text x="79.0070%" y="383.50"></text></g><g><title>[unknown] (13,769,019 samples, 0.01%)</title><rect x="78.7570%" y="357" width="0.0146%" height="15" fill="rgb(208,100,47)" fg:x="74455286374" fg:w="13769019"/><text x="79.0070%" y="367.50"></text></g><g><title>[unknown] (13,769,019 samples, 0.01%)</title><rect x="78.7570%" y="341" width="0.0146%" height="15" fill="rgb(232,26,8)" fg:x="74455286374" fg:w="13769019"/><text x="79.0070%" y="351.50"></text></g><g><title>[unknown] (13,769,019 samples, 0.01%)</title><rect x="78.7570%" y="325" width="0.0146%" height="15" fill="rgb(216,166,38)" fg:x="74455286374" fg:w="13769019"/><text x="79.0070%" y="335.50"></text></g><g><title>[unknown] (13,769,019 samples, 0.01%)</title><rect x="78.7570%" y="309" width="0.0146%" height="15" fill="rgb(251,202,51)" fg:x="74455286374" fg:w="13769019"/><text x="79.0070%" y="319.50"></text></g><g><title>[unknown] (10,314,713 samples, 0.01%)</title><rect x="78.7606%" y="293" width="0.0109%" height="15" fill="rgb(254,216,34)" fg:x="74458740680" fg:w="10314713"/><text x="79.0106%" y="303.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (23,103,415 samples, 0.02%)</title><rect x="78.7790%" y="709" width="0.0244%" height="15" fill="rgb(251,32,27)" fg:x="74476113650" fg:w="23103415"/><text x="79.0290%" y="719.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (23,103,415 samples, 0.02%)</title><rect x="78.7790%" y="693" width="0.0244%" height="15" fill="rgb(208,127,28)" fg:x="74476113650" fg:w="23103415"/><text x="79.0290%" y="703.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (23,103,415 samples, 0.02%)</title><rect x="78.7790%" y="677" width="0.0244%" height="15" fill="rgb(224,137,22)" fg:x="74476113650" fg:w="23103415"/><text x="79.0290%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (23,103,415 samples, 0.02%)</title><rect x="78.7790%" y="661" width="0.0244%" height="15" fill="rgb(254,70,32)" fg:x="74476113650" fg:w="23103415"/><text x="79.0290%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (23,103,415 samples, 0.02%)</title><rect x="78.7790%" y="645" width="0.0244%" height="15" fill="rgb(229,75,37)" fg:x="74476113650" fg:w="23103415"/><text x="79.0290%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,103,415 samples, 0.02%)</title><rect x="78.7790%" y="629" width="0.0244%" height="15" fill="rgb(252,64,23)" fg:x="74476113650" fg:w="23103415"/><text x="79.0290%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (23,103,415 samples, 0.02%)</title><rect x="78.7790%" y="613" width="0.0244%" height="15" fill="rgb(232,162,48)" fg:x="74476113650" fg:w="23103415"/><text x="79.0290%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,103,415 samples, 0.02%)</title><rect x="78.7790%" y="597" width="0.0244%" height="15" fill="rgb(246,160,12)" fg:x="74476113650" fg:w="23103415"/><text x="79.0290%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19,551,097 samples, 0.02%)</title><rect x="78.7828%" y="581" width="0.0207%" height="15" fill="rgb(247,166,0)" fg:x="74479665968" fg:w="19551097"/><text x="79.0328%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19,551,097 samples, 0.02%)</title><rect x="78.7828%" y="565" width="0.0207%" height="15" fill="rgb(249,219,21)" fg:x="74479665968" fg:w="19551097"/><text x="79.0328%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (19,551,097 samples, 0.02%)</title><rect x="78.7828%" y="549" width="0.0207%" height="15" fill="rgb(205,209,3)" fg:x="74479665968" fg:w="19551097"/><text x="79.0328%" y="559.50"></text></g><g><title>[unknown] (16,041,078 samples, 0.02%)</title><rect x="78.7865%" y="533" width="0.0170%" height="15" fill="rgb(243,44,1)" fg:x="74483175987" fg:w="16041078"/><text x="79.0365%" y="543.50"></text></g><g><title>[unknown] (12,576,009 samples, 0.01%)</title><rect x="78.7901%" y="517" width="0.0133%" height="15" fill="rgb(206,159,16)" fg:x="74486641056" fg:w="12576009"/><text x="79.0401%" y="527.50"></text></g><g><title>[unknown] (12,576,009 samples, 0.01%)</title><rect x="78.7901%" y="501" width="0.0133%" height="15" fill="rgb(244,77,30)" fg:x="74486641056" fg:w="12576009"/><text x="79.0401%" y="511.50"></text></g><g><title>[unknown] (12,576,009 samples, 0.01%)</title><rect x="78.7901%" y="485" width="0.0133%" height="15" fill="rgb(218,69,12)" fg:x="74486641056" fg:w="12576009"/><text x="79.0401%" y="495.50"></text></g><g><title>[unknown] (12,576,009 samples, 0.01%)</title><rect x="78.7901%" y="469" width="0.0133%" height="15" fill="rgb(212,87,7)" fg:x="74486641056" fg:w="12576009"/><text x="79.0401%" y="479.50"></text></g><g><title>[unknown] (12,576,009 samples, 0.01%)</title><rect x="78.7901%" y="453" width="0.0133%" height="15" fill="rgb(245,114,25)" fg:x="74486641056" fg:w="12576009"/><text x="79.0401%" y="463.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (26,591,776 samples, 0.03%)</title><rect x="78.8125%" y="565" width="0.0281%" height="15" fill="rgb(210,61,42)" fg:x="74507830608" fg:w="26591776"/><text x="79.0625%" y="575.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (26,591,776 samples, 0.03%)</title><rect x="78.8125%" y="549" width="0.0281%" height="15" fill="rgb(211,52,33)" fg:x="74507830608" fg:w="26591776"/><text x="79.0625%" y="559.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (26,591,776 samples, 0.03%)</title><rect x="78.8125%" y="533" width="0.0281%" height="15" fill="rgb(234,58,33)" fg:x="74507830608" fg:w="26591776"/><text x="79.0625%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (11,124,246 samples, 0.01%)</title><rect x="78.8289%" y="517" width="0.0118%" height="15" fill="rgb(220,115,36)" fg:x="74523298138" fg:w="11124246"/><text x="79.0789%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (11,124,246 samples, 0.01%)</title><rect x="78.8289%" y="501" width="0.0118%" height="15" fill="rgb(243,153,54)" fg:x="74523298138" fg:w="11124246"/><text x="79.0789%" y="511.50"></text></g><g><title>core::ptr::write_unaligned (11,124,246 samples, 0.01%)</title><rect x="78.8289%" y="485" width="0.0118%" height="15" fill="rgb(251,47,18)" fg:x="74523298138" fg:w="11124246"/><text x="79.0789%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11,124,246 samples, 0.01%)</title><rect x="78.8289%" y="469" width="0.0118%" height="15" fill="rgb(242,102,42)" fg:x="74523298138" fg:w="11124246"/><text x="79.0789%" y="479.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (35,362,852 samples, 0.04%)</title><rect x="78.8125%" y="613" width="0.0374%" height="15" fill="rgb(234,31,38)" fg:x="74507830608" fg:w="35362852"/><text x="79.0625%" y="623.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (35,362,852 samples, 0.04%)</title><rect x="78.8125%" y="597" width="0.0374%" height="15" fill="rgb(221,117,51)" fg:x="74507830608" fg:w="35362852"/><text x="79.0625%" y="607.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (35,362,852 samples, 0.04%)</title><rect x="78.8125%" y="581" width="0.0374%" height="15" fill="rgb(212,20,18)" fg:x="74507830608" fg:w="35362852"/><text x="79.0625%" y="591.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (49,388,792 samples, 0.05%)</title><rect x="78.8051%" y="709" width="0.0522%" height="15" fill="rgb(245,133,36)" fg:x="74500813768" fg:w="49388792"/><text x="79.0551%" y="719.50"></text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (49,388,792 samples, 0.05%)</title><rect x="78.8051%" y="693" width="0.0522%" height="15" fill="rgb(212,6,19)" fg:x="74500813768" fg:w="49388792"/><text x="79.0551%" y="703.50"></text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (42,371,952 samples, 0.04%)</title><rect x="78.8125%" y="677" width="0.0448%" height="15" fill="rgb(218,1,36)" fg:x="74507830608" fg:w="42371952"/><text x="79.0625%" y="687.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (42,371,952 samples, 0.04%)</title><rect x="78.8125%" y="661" width="0.0448%" height="15" fill="rgb(246,84,54)" fg:x="74507830608" fg:w="42371952"/><text x="79.0625%" y="671.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (42,371,952 samples, 0.04%)</title><rect x="78.8125%" y="645" width="0.0448%" height="15" fill="rgb(242,110,6)" fg:x="74507830608" fg:w="42371952"/><text x="79.0625%" y="655.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (42,371,952 samples, 0.04%)</title><rect x="78.8125%" y="629" width="0.0448%" height="15" fill="rgb(214,47,5)" fg:x="74507830608" fg:w="42371952"/><text x="79.0625%" y="639.50"></text></g><g><title>core::ptr::write (41,964,582 samples, 0.04%)</title><rect x="78.8611%" y="581" width="0.0444%" height="15" fill="rgb(218,159,25)" fg:x="74553712375" fg:w="41964582"/><text x="79.1111%" y="591.50"></text></g><g><title>[unknown] (38,427,305 samples, 0.04%)</title><rect x="78.8648%" y="565" width="0.0406%" height="15" fill="rgb(215,211,28)" fg:x="74557249652" fg:w="38427305"/><text x="79.1148%" y="575.50"></text></g><g><title>[unknown] (28,049,836 samples, 0.03%)</title><rect x="78.8758%" y="549" width="0.0297%" height="15" fill="rgb(238,59,32)" fg:x="74567627121" fg:w="28049836"/><text x="79.1258%" y="559.50"></text></g><g><title>[unknown] (28,049,836 samples, 0.03%)</title><rect x="78.8758%" y="533" width="0.0297%" height="15" fill="rgb(226,82,3)" fg:x="74567627121" fg:w="28049836"/><text x="79.1258%" y="543.50"></text></g><g><title>[unknown] (28,049,836 samples, 0.03%)</title><rect x="78.8758%" y="517" width="0.0297%" height="15" fill="rgb(240,164,32)" fg:x="74567627121" fg:w="28049836"/><text x="79.1258%" y="527.50"></text></g><g><title>[unknown] (28,049,836 samples, 0.03%)</title><rect x="78.8758%" y="501" width="0.0297%" height="15" fill="rgb(232,46,7)" fg:x="74567627121" fg:w="28049836"/><text x="79.1258%" y="511.50"></text></g><g><title>[unknown] (24,546,914 samples, 0.03%)</title><rect x="78.8795%" y="485" width="0.0260%" height="15" fill="rgb(229,129,53)" fg:x="74571130043" fg:w="24546914"/><text x="79.1295%" y="495.50"></text></g><g><title>[unknown] (24,546,914 samples, 0.03%)</title><rect x="78.8795%" y="469" width="0.0260%" height="15" fill="rgb(234,188,29)" fg:x="74571130043" fg:w="24546914"/><text x="79.1295%" y="479.50"></text></g><g><title>[unknown] (24,546,914 samples, 0.03%)</title><rect x="78.8795%" y="453" width="0.0260%" height="15" fill="rgb(246,141,4)" fg:x="74571130043" fg:w="24546914"/><text x="79.1295%" y="463.50"></text></g><g><title>[unknown] (24,546,914 samples, 0.03%)</title><rect x="78.8795%" y="437" width="0.0260%" height="15" fill="rgb(229,23,39)" fg:x="74571130043" fg:w="24546914"/><text x="79.1295%" y="447.50"></text></g><g><title>[unknown] (21,003,346 samples, 0.02%)</title><rect x="78.8833%" y="421" width="0.0222%" height="15" fill="rgb(206,12,3)" fg:x="74574673611" fg:w="21003346"/><text x="79.1333%" y="431.50"></text></g><g><title>[unknown] (10,510,860 samples, 0.01%)</title><rect x="78.8944%" y="405" width="0.0111%" height="15" fill="rgb(252,226,20)" fg:x="74585166097" fg:w="10510860"/><text x="79.1444%" y="415.50"></text></g><g><title>[unknown] (10,510,860 samples, 0.01%)</title><rect x="78.8944%" y="389" width="0.0111%" height="15" fill="rgb(216,123,35)" fg:x="74585166097" fg:w="10510860"/><text x="79.1444%" y="399.50"></text></g><g><title>[unknown] (10,510,860 samples, 0.01%)</title><rect x="78.8944%" y="373" width="0.0111%" height="15" fill="rgb(212,68,40)" fg:x="74585166097" fg:w="10510860"/><text x="79.1444%" y="383.50"></text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::compute_jacobian (74,538,493,830 samples, 78.84%)</title><rect x="0.1373%" y="757" width="78.8450%" height="15" fill="rgb(254,125,32)" fg:x="129798640" fg:w="74538493830"/><text x="0.3873%" y="767.50">rkl::core::optimizers::MarquardtOptimizer::compute_jacobian</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (192,178,820 samples, 0.20%)</title><rect x="78.7790%" y="741" width="0.2033%" height="15" fill="rgb(253,97,22)" fg:x="74476113650" fg:w="192178820"/><text x="79.0290%" y="751.50"></text></g><g><title>rkl::core::layers::Dense::forward (192,178,820 samples, 0.20%)</title><rect x="78.7790%" y="725" width="0.2033%" height="15" fill="rgb(241,101,14)" fg:x="74476113650" fg:w="192178820"/><text x="79.0290%" y="735.50"></text></g><g><title>rkl::core::activations::Activation::forward (118,089,910 samples, 0.12%)</title><rect x="78.8574%" y="709" width="0.1249%" height="15" fill="rgb(238,103,29)" fg:x="74550202560" fg:w="118089910"/><text x="79.1074%" y="719.50"></text></g><g><title>rkl::core::activations::tanh_forward (118,089,910 samples, 0.12%)</title><rect x="78.8574%" y="693" width="0.1249%" height="15" fill="rgb(233,195,47)" fg:x="74550202560" fg:w="118089910"/><text x="79.1074%" y="703.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (118,089,910 samples, 0.12%)</title><rect x="78.8574%" y="677" width="0.1249%" height="15" fill="rgb(246,218,30)" fg:x="74550202560" fg:w="118089910"/><text x="79.1074%" y="687.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (118,089,910 samples, 0.12%)</title><rect x="78.8574%" y="661" width="0.1249%" height="15" fill="rgb(219,145,47)" fg:x="74550202560" fg:w="118089910"/><text x="79.1074%" y="671.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (118,089,910 samples, 0.12%)</title><rect x="78.8574%" y="645" width="0.1249%" height="15" fill="rgb(243,12,26)" fg:x="74550202560" fg:w="118089910"/><text x="79.1074%" y="655.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (118,089,910 samples, 0.12%)</title><rect x="78.8574%" y="629" width="0.1249%" height="15" fill="rgb(214,87,16)" fg:x="74550202560" fg:w="118089910"/><text x="79.1074%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (114,580,095 samples, 0.12%)</title><rect x="78.8611%" y="613" width="0.1212%" height="15" fill="rgb(208,99,42)" fg:x="74553712375" fg:w="114580095"/><text x="79.1111%" y="623.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (114,580,095 samples, 0.12%)</title><rect x="78.8611%" y="597" width="0.1212%" height="15" fill="rgb(253,99,2)" fg:x="74553712375" fg:w="114580095"/><text x="79.1111%" y="607.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (72,615,513 samples, 0.08%)</title><rect x="78.9055%" y="581" width="0.0768%" height="15" fill="rgb(220,168,23)" fg:x="74595676957" fg:w="72615513"/><text x="79.1555%" y="591.50"></text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (72,615,513 samples, 0.08%)</title><rect x="78.9055%" y="565" width="0.0768%" height="15" fill="rgb(242,38,24)" fg:x="74595676957" fg:w="72615513"/><text x="79.1555%" y="575.50"></text></g><g><title>fastapprox::fast::tanh (65,589,916 samples, 0.07%)</title><rect x="78.9129%" y="549" width="0.0694%" height="15" fill="rgb(225,182,9)" fg:x="74602702554" fg:w="65589916"/><text x="79.1629%" y="559.50"></text></g><g><title>fastapprox::fast::exp (56,587,669 samples, 0.06%)</title><rect x="78.9224%" y="533" width="0.0599%" height="15" fill="rgb(243,178,37)" fg:x="74611704801" fg:w="56587669"/><text x="79.1724%" y="543.50"></text></g><g><title>fastapprox::fast::pow2 (56,587,669 samples, 0.06%)</title><rect x="78.9224%" y="517" width="0.0599%" height="15" fill="rgb(232,139,19)" fg:x="74611704801" fg:w="56587669"/><text x="79.1724%" y="527.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (320,240,848 samples, 0.34%)</title><rect x="78.9823%" y="741" width="0.3387%" height="15" fill="rgb(225,201,24)" fg:x="74668292470" fg:w="320240848"/><text x="79.2323%" y="751.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (320,240,848 samples, 0.34%)</title><rect x="78.9823%" y="725" width="0.3387%" height="15" fill="rgb(221,47,46)" fg:x="74668292470" fg:w="320240848"/><text x="79.2323%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (320,240,848 samples, 0.34%)</title><rect x="78.9823%" y="709" width="0.3387%" height="15" fill="rgb(249,23,13)" fg:x="74668292470" fg:w="320240848"/><text x="79.2323%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (320,240,848 samples, 0.34%)</title><rect x="78.9823%" y="693" width="0.3387%" height="15" fill="rgb(219,9,5)" fg:x="74668292470" fg:w="320240848"/><text x="79.2323%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (320,240,848 samples, 0.34%)</title><rect x="78.9823%" y="677" width="0.3387%" height="15" fill="rgb(254,171,16)" fg:x="74668292470" fg:w="320240848"/><text x="79.2323%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (320,240,848 samples, 0.34%)</title><rect x="78.9823%" y="661" width="0.3387%" height="15" fill="rgb(230,171,20)" fg:x="74668292470" fg:w="320240848"/><text x="79.2323%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (316,739,435 samples, 0.34%)</title><rect x="78.9860%" y="645" width="0.3350%" height="15" fill="rgb(210,71,41)" fg:x="74671793883" fg:w="316739435"/><text x="79.2360%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (316,739,435 samples, 0.34%)</title><rect x="78.9860%" y="629" width="0.3350%" height="15" fill="rgb(206,173,20)" fg:x="74671793883" fg:w="316739435"/><text x="79.2360%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (316,739,435 samples, 0.34%)</title><rect x="78.9860%" y="613" width="0.3350%" height="15" fill="rgb(233,88,34)" fg:x="74671793883" fg:w="316739435"/><text x="79.2360%" y="623.50"></text></g><g><title>[unknown] (243,046,853 samples, 0.26%)</title><rect x="79.0639%" y="597" width="0.2571%" height="15" fill="rgb(223,209,46)" fg:x="74745486465" fg:w="243046853"/><text x="79.3139%" y="607.50"></text></g><g><title>[unknown] (224,886,617 samples, 0.24%)</title><rect x="79.0831%" y="581" width="0.2379%" height="15" fill="rgb(250,43,18)" fg:x="74763646701" fg:w="224886617"/><text x="79.3331%" y="591.50"></text></g><g><title>[unknown] (217,962,333 samples, 0.23%)</title><rect x="79.0905%" y="565" width="0.2306%" height="15" fill="rgb(208,13,10)" fg:x="74770570985" fg:w="217962333"/><text x="79.3405%" y="575.50"></text></g><g><title>[unknown] (204,650,142 samples, 0.22%)</title><rect x="79.1046%" y="549" width="0.2165%" height="15" fill="rgb(212,200,36)" fg:x="74783883176" fg:w="204650142"/><text x="79.3546%" y="559.50"></text></g><g><title>[unknown] (182,759,844 samples, 0.19%)</title><rect x="79.1277%" y="533" width="0.1933%" height="15" fill="rgb(225,90,30)" fg:x="74805773474" fg:w="182759844"/><text x="79.3777%" y="543.50"></text></g><g><title>[unknown] (165,217,112 samples, 0.17%)</title><rect x="79.1463%" y="517" width="0.1748%" height="15" fill="rgb(236,182,39)" fg:x="74823316206" fg:w="165217112"/><text x="79.3963%" y="527.50"></text></g><g><title>[unknown] (165,217,112 samples, 0.17%)</title><rect x="79.1463%" y="501" width="0.1748%" height="15" fill="rgb(212,144,35)" fg:x="74823316206" fg:w="165217112"/><text x="79.3963%" y="511.50"></text></g><g><title>[unknown] (144,392,821 samples, 0.15%)</title><rect x="79.1683%" y="485" width="0.1527%" height="15" fill="rgb(228,63,44)" fg:x="74844140497" fg:w="144392821"/><text x="79.4183%" y="495.50"></text></g><g><title>[unknown] (122,323,368 samples, 0.13%)</title><rect x="79.1916%" y="469" width="0.1294%" height="15" fill="rgb(228,109,6)" fg:x="74866209950" fg:w="122323368"/><text x="79.4416%" y="479.50"></text></g><g><title>[unknown] (92,697,181 samples, 0.10%)</title><rect x="79.2230%" y="453" width="0.0981%" height="15" fill="rgb(238,117,24)" fg:x="74895836137" fg:w="92697181"/><text x="79.4730%" y="463.50"></text></g><g><title>[unknown] (75,336,898 samples, 0.08%)</title><rect x="79.2413%" y="437" width="0.0797%" height="15" fill="rgb(242,26,26)" fg:x="74913196420" fg:w="75336898"/><text x="79.4913%" y="447.50"></text></g><g><title>[unknown] (54,320,590 samples, 0.06%)</title><rect x="79.2636%" y="421" width="0.0575%" height="15" fill="rgb(221,92,48)" fg:x="74934212728" fg:w="54320590"/><text x="79.5136%" y="431.50"></text></g><g><title>[unknown] (40,319,147 samples, 0.04%)</title><rect x="79.2784%" y="405" width="0.0426%" height="15" fill="rgb(209,209,32)" fg:x="74948214171" fg:w="40319147"/><text x="79.5284%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;&gt; (236,340,417 samples, 0.25%)</title><rect x="79.3210%" y="741" width="0.2500%" height="15" fill="rgb(221,70,22)" fg:x="74988533318" fg:w="236340417"/><text x="79.5710%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt; (236,340,417 samples, 0.25%)</title><rect x="79.3210%" y="725" width="0.2500%" height="15" fill="rgb(248,145,5)" fg:x="74988533318" fg:w="236340417"/><text x="79.5710%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (236,340,417 samples, 0.25%)</title><rect x="79.3210%" y="709" width="0.2500%" height="15" fill="rgb(226,116,26)" fg:x="74988533318" fg:w="236340417"/><text x="79.5710%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (236,340,417 samples, 0.25%)</title><rect x="79.3210%" y="693" width="0.2500%" height="15" fill="rgb(244,5,17)" fg:x="74988533318" fg:w="236340417"/><text x="79.5710%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (236,340,417 samples, 0.25%)</title><rect x="79.3210%" y="677" width="0.2500%" height="15" fill="rgb(252,159,33)" fg:x="74988533318" fg:w="236340417"/><text x="79.5710%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (236,340,417 samples, 0.25%)</title><rect x="79.3210%" y="661" width="0.2500%" height="15" fill="rgb(206,71,0)" fg:x="74988533318" fg:w="236340417"/><text x="79.5710%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (236,340,417 samples, 0.25%)</title><rect x="79.3210%" y="645" width="0.2500%" height="15" fill="rgb(233,118,54)" fg:x="74988533318" fg:w="236340417"/><text x="79.5710%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (236,340,417 samples, 0.25%)</title><rect x="79.3210%" y="629" width="0.2500%" height="15" fill="rgb(234,83,48)" fg:x="74988533318" fg:w="236340417"/><text x="79.5710%" y="639.50"></text></g><g><title>__GI___libc_free (236,340,417 samples, 0.25%)</title><rect x="79.3210%" y="613" width="0.2500%" height="15" fill="rgb(228,3,54)" fg:x="74988533318" fg:w="236340417"/><text x="79.5710%" y="623.50"></text></g><g><title>systrim (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="597" width="0.2463%" height="15" fill="rgb(226,155,13)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="607.50"></text></g><g><title>__glibc_morecore (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="581" width="0.2463%" height="15" fill="rgb(241,28,37)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="591.50"></text></g><g><title>__GI___sbrk (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="565" width="0.2463%" height="15" fill="rgb(233,93,10)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="575.50"></text></g><g><title>__brk (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="549" width="0.2463%" height="15" fill="rgb(225,113,19)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="559.50"></text></g><g><title>[unknown] (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="533" width="0.2463%" height="15" fill="rgb(241,2,18)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="543.50"></text></g><g><title>[unknown] (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="517" width="0.2463%" height="15" fill="rgb(228,207,21)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="527.50"></text></g><g><title>[unknown] (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="501" width="0.2463%" height="15" fill="rgb(213,211,35)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="511.50"></text></g><g><title>[unknown] (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="485" width="0.2463%" height="15" fill="rgb(209,83,10)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="495.50"></text></g><g><title>[unknown] (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="469" width="0.2463%" height="15" fill="rgb(209,164,1)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="479.50"></text></g><g><title>[unknown] (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="453" width="0.2463%" height="15" fill="rgb(213,184,43)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="463.50"></text></g><g><title>[unknown] (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="437" width="0.2463%" height="15" fill="rgb(231,61,34)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="447.50"></text></g><g><title>[unknown] (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="421" width="0.2463%" height="15" fill="rgb(235,75,3)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="431.50"></text></g><g><title>[unknown] (232,867,001 samples, 0.25%)</title><rect x="79.3247%" y="405" width="0.2463%" height="15" fill="rgb(220,106,47)" fg:x="74992006734" fg:w="232867001"/><text x="79.5747%" y="415.50"></text></g><g><title>[unknown] (225,945,258 samples, 0.24%)</title><rect x="79.3320%" y="389" width="0.2390%" height="15" fill="rgb(210,196,33)" fg:x="74998928477" fg:w="225945258"/><text x="79.5820%" y="399.50"></text></g><g><title>[unknown] (222,422,079 samples, 0.24%)</title><rect x="79.3357%" y="373" width="0.2353%" height="15" fill="rgb(229,154,42)" fg:x="75002451656" fg:w="222422079"/><text x="79.5857%" y="383.50"></text></g><g><title>[unknown] (205,127,344 samples, 0.22%)</title><rect x="79.3540%" y="357" width="0.2170%" height="15" fill="rgb(228,114,26)" fg:x="75019746391" fg:w="205127344"/><text x="79.6040%" y="367.50"></text></g><g><title>[unknown] (96,930,106 samples, 0.10%)</title><rect x="79.4685%" y="341" width="0.1025%" height="15" fill="rgb(208,144,1)" fg:x="75127943629" fg:w="96930106"/><text x="79.7185%" y="351.50"></text></g><g><title>[unknown] (46,596,416 samples, 0.05%)</title><rect x="79.5217%" y="325" width="0.0493%" height="15" fill="rgb(239,112,37)" fg:x="75178277319" fg:w="46596416"/><text x="79.7717%" y="335.50"></text></g><g><title>[unknown] (31,595,107 samples, 0.03%)</title><rect x="79.5376%" y="309" width="0.0334%" height="15" fill="rgb(210,96,50)" fg:x="75193278628" fg:w="31595107"/><text x="79.7876%" y="319.50"></text></g><g><title>[unknown] (16,077,073 samples, 0.02%)</title><rect x="79.5540%" y="293" width="0.0170%" height="15" fill="rgb(222,178,2)" fg:x="75208796662" fg:w="16077073"/><text x="79.8040%" y="303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (14,104,390 samples, 0.01%)</title><rect x="79.5860%" y="693" width="0.0149%" height="15" fill="rgb(226,74,18)" fg:x="75239082328" fg:w="14104390"/><text x="79.8360%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (133,705,629 samples, 0.14%)</title><rect x="79.5748%" y="709" width="0.1414%" height="15" fill="rgb(225,67,54)" fg:x="75228429988" fg:w="133705629"/><text x="79.8248%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (108,948,899 samples, 0.12%)</title><rect x="79.6010%" y="693" width="0.1152%" height="15" fill="rgb(251,92,32)" fg:x="75253186718" fg:w="108948899"/><text x="79.8510%" y="703.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (108,948,899 samples, 0.12%)</title><rect x="79.6010%" y="677" width="0.1152%" height="15" fill="rgb(228,149,22)" fg:x="75253186718" fg:w="108948899"/><text x="79.8510%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (108,948,899 samples, 0.12%)</title><rect x="79.6010%" y="661" width="0.1152%" height="15" fill="rgb(243,54,13)" fg:x="75253186718" fg:w="108948899"/><text x="79.8510%" y="671.50"></text></g><g><title>[unknown] (35,573,165 samples, 0.04%)</title><rect x="79.7162%" y="709" width="0.0376%" height="15" fill="rgb(243,180,28)" fg:x="75362135617" fg:w="35573165"/><text x="79.9662%" y="719.50"></text></g><g><title>[unknown] (35,573,165 samples, 0.04%)</title><rect x="79.7162%" y="693" width="0.0376%" height="15" fill="rgb(208,167,24)" fg:x="75362135617" fg:w="35573165"/><text x="79.9662%" y="703.50"></text></g><g><title>[unknown] (32,034,119 samples, 0.03%)</title><rect x="79.7200%" y="677" width="0.0339%" height="15" fill="rgb(245,73,45)" fg:x="75365674663" fg:w="32034119"/><text x="79.9700%" y="687.50"></text></g><g><title>[unknown] (32,034,119 samples, 0.03%)</title><rect x="79.7200%" y="661" width="0.0339%" height="15" fill="rgb(237,203,48)" fg:x="75365674663" fg:w="32034119"/><text x="79.9700%" y="671.50"></text></g><g><title>[unknown] (32,034,119 samples, 0.03%)</title><rect x="79.7200%" y="645" width="0.0339%" height="15" fill="rgb(211,197,16)" fg:x="75365674663" fg:w="32034119"/><text x="79.9700%" y="655.50"></text></g><g><title>[unknown] (32,034,119 samples, 0.03%)</title><rect x="79.7200%" y="629" width="0.0339%" height="15" fill="rgb(243,99,51)" fg:x="75365674663" fg:w="32034119"/><text x="79.9700%" y="639.50"></text></g><g><title>[unknown] (28,502,150 samples, 0.03%)</title><rect x="79.7237%" y="613" width="0.0301%" height="15" fill="rgb(215,123,29)" fg:x="75369206632" fg:w="28502150"/><text x="79.9737%" y="623.50"></text></g><g><title>[unknown] (28,502,150 samples, 0.03%)</title><rect x="79.7237%" y="597" width="0.0301%" height="15" fill="rgb(239,186,37)" fg:x="75369206632" fg:w="28502150"/><text x="79.9737%" y="607.50"></text></g><g><title>[unknown] (21,383,670 samples, 0.02%)</title><rect x="79.7312%" y="581" width="0.0226%" height="15" fill="rgb(252,136,39)" fg:x="75376325112" fg:w="21383670"/><text x="79.9812%" y="591.50"></text></g><g><title>[unknown] (17,787,388 samples, 0.02%)</title><rect x="79.7350%" y="565" width="0.0188%" height="15" fill="rgb(223,213,32)" fg:x="75379921394" fg:w="17787388"/><text x="79.9850%" y="575.50"></text></g><g><title>[unknown] (17,787,388 samples, 0.02%)</title><rect x="79.7350%" y="549" width="0.0188%" height="15" fill="rgb(233,115,5)" fg:x="75379921394" fg:w="17787388"/><text x="79.9850%" y="559.50"></text></g><g><title>[unknown] (14,259,291 samples, 0.02%)</title><rect x="79.7388%" y="533" width="0.0151%" height="15" fill="rgb(207,226,44)" fg:x="75383449491" fg:w="14259291"/><text x="79.9888%" y="543.50"></text></g><g><title>[unknown] (14,259,291 samples, 0.02%)</title><rect x="79.7388%" y="517" width="0.0151%" height="15" fill="rgb(208,126,0)" fg:x="75383449491" fg:w="14259291"/><text x="79.9888%" y="527.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_row_slice (287,168,359 samples, 0.30%)</title><rect x="79.5748%" y="741" width="0.3038%" height="15" fill="rgb(244,66,21)" fg:x="75228429988" fg:w="287168359"/><text x="79.8248%" y="751.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_row_slice_generic (287,168,359 samples, 0.30%)</title><rect x="79.5748%" y="725" width="0.3038%" height="15" fill="rgb(222,97,12)" fg:x="75228429988" fg:w="287168359"/><text x="79.8248%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (117,889,565 samples, 0.12%)</title><rect x="79.7538%" y="709" width="0.1247%" height="15" fill="rgb(219,213,19)" fg:x="75397708782" fg:w="117889565"/><text x="80.0038%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (117,889,565 samples, 0.12%)</title><rect x="79.7538%" y="693" width="0.1247%" height="15" fill="rgb(252,169,30)" fg:x="75397708782" fg:w="117889565"/><text x="80.0038%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (117,889,565 samples, 0.12%)</title><rect x="79.7538%" y="677" width="0.1247%" height="15" fill="rgb(206,32,51)" fg:x="75397708782" fg:w="117889565"/><text x="80.0038%" y="687.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::identity (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="741" width="0.0793%" height="15" fill="rgb(250,172,42)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="751.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::identity_generic (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="725" width="0.0793%" height="15" fill="rgb(209,34,43)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="735.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_diagonal_element_generic (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="709" width="0.0793%" height="15" fill="rgb(223,11,35)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="719.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros_generic (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="693" width="0.0793%" height="15" fill="rgb(251,219,26)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="703.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_element_generic (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="677" width="0.0793%" height="15" fill="rgb(231,119,3)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="687.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_iterator_generic (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="661" width="0.0793%" height="15" fill="rgb(216,97,11)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="671.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::allocate_from_iterator (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="645" width="0.0793%" height="15" fill="rgb(223,59,9)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="629" width="0.0793%" height="15" fill="rgb(233,93,31)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="613" width="0.0793%" height="15" fill="rgb(239,81,33)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="597" width="0.0793%" height="15" fill="rgb(213,120,34)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="581" width="0.0793%" height="15" fill="rgb(243,49,53)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="565" width="0.0793%" height="15" fill="rgb(247,216,33)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="549" width="0.0793%" height="15" fill="rgb(226,26,14)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="533" width="0.0793%" height="15" fill="rgb(215,49,53)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="517" width="0.0793%" height="15" fill="rgb(245,162,40)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="501" width="0.0793%" height="15" fill="rgb(229,68,17)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="485" width="0.0793%" height="15" fill="rgb(213,182,10)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="469" width="0.0793%" height="15" fill="rgb(245,125,30)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="479.50"></text></g><g><title>core::ptr::write (74,983,372 samples, 0.08%)</title><rect x="79.8785%" y="453" width="0.0793%" height="15" fill="rgb(232,202,2)" fg:x="75515598347" fg:w="74983372"/><text x="80.1285%" y="463.50"></text></g><g><title>__memset_avx2_unaligned_erms (71,460,543 samples, 0.08%)</title><rect x="79.8823%" y="437" width="0.0756%" height="15" fill="rgb(237,140,51)" fg:x="75519121176" fg:w="71460543"/><text x="80.1323%" y="447.50"></text></g><g><title>&lt;nalgebra::base::uninit::Uninit as nalgebra::base::uninit::InitStatus&lt;T&gt;&gt;::init (514,523,946 samples, 0.54%)</title><rect x="79.9579%" y="709" width="0.5443%" height="15" fill="rgb(236,157,25)" fg:x="75590581719" fg:w="514523946"/><text x="80.2079%" y="719.50"></text></g><g><title>[unknown] (88,170,322 samples, 0.09%)</title><rect x="80.4088%" y="693" width="0.0933%" height="15" fill="rgb(219,209,0)" fg:x="76016935343" fg:w="88170322"/><text x="80.6588%" y="703.50"></text></g><g><title>[unknown] (84,595,483 samples, 0.09%)</title><rect x="80.4126%" y="677" width="0.0895%" height="15" fill="rgb(240,116,54)" fg:x="76020510182" fg:w="84595483"/><text x="80.6626%" y="687.50"></text></g><g><title>[unknown] (77,443,688 samples, 0.08%)</title><rect x="80.4202%" y="661" width="0.0819%" height="15" fill="rgb(216,10,36)" fg:x="76027661977" fg:w="77443688"/><text x="80.6702%" y="671.50"></text></g><g><title>[unknown] (73,900,723 samples, 0.08%)</title><rect x="80.4239%" y="645" width="0.0782%" height="15" fill="rgb(222,72,44)" fg:x="76031204942" fg:w="73900723"/><text x="80.6739%" y="655.50"></text></g><g><title>[unknown] (63,255,113 samples, 0.07%)</title><rect x="80.4352%" y="629" width="0.0669%" height="15" fill="rgb(232,159,9)" fg:x="76041850552" fg:w="63255113"/><text x="80.6852%" y="639.50"></text></g><g><title>[unknown] (52,662,207 samples, 0.06%)</title><rect x="80.4464%" y="613" width="0.0557%" height="15" fill="rgb(210,39,32)" fg:x="76052443458" fg:w="52662207"/><text x="80.6964%" y="623.50"></text></g><g><title>[unknown] (52,662,207 samples, 0.06%)</title><rect x="80.4464%" y="597" width="0.0557%" height="15" fill="rgb(216,194,45)" fg:x="76052443458" fg:w="52662207"/><text x="80.6964%" y="607.50"></text></g><g><title>[unknown] (52,662,207 samples, 0.06%)</title><rect x="80.4464%" y="581" width="0.0557%" height="15" fill="rgb(218,18,35)" fg:x="76052443458" fg:w="52662207"/><text x="80.6964%" y="591.50"></text></g><g><title>[unknown] (45,551,657 samples, 0.05%)</title><rect x="80.4539%" y="565" width="0.0482%" height="15" fill="rgb(207,83,51)" fg:x="76059554008" fg:w="45551657"/><text x="80.7039%" y="575.50"></text></g><g><title>[unknown] (38,578,336 samples, 0.04%)</title><rect x="80.4613%" y="549" width="0.0408%" height="15" fill="rgb(225,63,43)" fg:x="76066527329" fg:w="38578336"/><text x="80.7113%" y="559.50"></text></g><g><title>[unknown] (38,578,336 samples, 0.04%)</title><rect x="80.4613%" y="533" width="0.0408%" height="15" fill="rgb(207,57,36)" fg:x="76066527329" fg:w="38578336"/><text x="80.7113%" y="543.50"></text></g><g><title>[unknown] (24,597,458 samples, 0.03%)</title><rect x="80.4761%" y="517" width="0.0260%" height="15" fill="rgb(216,99,33)" fg:x="76080508207" fg:w="24597458"/><text x="80.7261%" y="527.50"></text></g><g><title>[unknown] (21,189,533 samples, 0.02%)</title><rect x="80.4797%" y="501" width="0.0224%" height="15" fill="rgb(225,42,16)" fg:x="76083916132" fg:w="21189533"/><text x="80.7297%" y="511.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (19,658,019 samples, 0.02%)</title><rect x="80.5021%" y="709" width="0.0208%" height="15" fill="rgb(220,201,45)" fg:x="76105105665" fg:w="19658019"/><text x="80.7521%" y="719.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (12,114,727 samples, 0.01%)</title><rect x="80.5229%" y="677" width="0.0128%" height="15" fill="rgb(225,33,4)" fg:x="76124763684" fg:w="12114727"/><text x="80.7729%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (12,114,727 samples, 0.01%)</title><rect x="80.5229%" y="661" width="0.0128%" height="15" fill="rgb(224,33,50)" fg:x="76124763684" fg:w="12114727"/><text x="80.7729%" y="671.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose (553,290,598 samples, 0.59%)</title><rect x="79.9579%" y="741" width="0.5853%" height="15" fill="rgb(246,198,51)" fg:x="75590581719" fg:w="553290598"/><text x="80.2079%" y="751.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose_to_uninit (553,290,598 samples, 0.59%)</title><rect x="79.9579%" y="725" width="0.5853%" height="15" fill="rgb(205,22,4)" fg:x="75590581719" fg:w="553290598"/><text x="80.2079%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (19,108,633 samples, 0.02%)</title><rect x="80.5229%" y="709" width="0.0202%" height="15" fill="rgb(206,3,8)" fg:x="76124763684" fg:w="19108633"/><text x="80.7729%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (19,108,633 samples, 0.02%)</title><rect x="80.5229%" y="693" width="0.0202%" height="15" fill="rgb(251,23,15)" fg:x="76124763684" fg:w="19108633"/><text x="80.7729%" y="703.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (92,414,565 samples, 0.10%)</title><rect x="80.5431%" y="693" width="0.0978%" height="15" fill="rgb(252,88,28)" fg:x="76143872317" fg:w="92414565"/><text x="80.7931%" y="703.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (138,019,584 samples, 0.15%)</title><rect x="80.5431%" y="741" width="0.1460%" height="15" fill="rgb(212,127,14)" fg:x="76143872317" fg:w="138019584"/><text x="80.7931%" y="751.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (138,019,584 samples, 0.15%)</title><rect x="80.5431%" y="725" width="0.1460%" height="15" fill="rgb(247,145,37)" fg:x="76143872317" fg:w="138019584"/><text x="80.7931%" y="735.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (138,019,584 samples, 0.15%)</title><rect x="80.5431%" y="709" width="0.1460%" height="15" fill="rgb(209,117,53)" fg:x="76143872317" fg:w="138019584"/><text x="80.7931%" y="719.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (45,605,019 samples, 0.05%)</title><rect x="80.6409%" y="693" width="0.0482%" height="15" fill="rgb(212,90,42)" fg:x="76236286882" fg:w="45605019"/><text x="80.8909%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (275,324,055 samples, 0.29%)</title><rect x="80.7003%" y="677" width="0.2912%" height="15" fill="rgb(218,164,37)" fg:x="76292487942" fg:w="275324055"/><text x="80.9503%" y="687.50"></text></g><g><title>[unknown] (135,256,489 samples, 0.14%)</title><rect x="80.8485%" y="661" width="0.1431%" height="15" fill="rgb(246,65,34)" fg:x="76432555508" fg:w="135256489"/><text x="81.0985%" y="671.50"></text></g><g><title>[unknown] (126,548,262 samples, 0.13%)</title><rect x="80.8577%" y="645" width="0.1339%" height="15" fill="rgb(231,100,33)" fg:x="76441263735" fg:w="126548262"/><text x="81.1077%" y="655.50"></text></g><g><title>[unknown] (126,548,262 samples, 0.13%)</title><rect x="80.8577%" y="629" width="0.1339%" height="15" fill="rgb(228,126,14)" fg:x="76441263735" fg:w="126548262"/><text x="81.1077%" y="639.50"></text></g><g><title>[unknown] (126,548,262 samples, 0.13%)</title><rect x="80.8577%" y="613" width="0.1339%" height="15" fill="rgb(215,173,21)" fg:x="76441263735" fg:w="126548262"/><text x="81.1077%" y="623.50"></text></g><g><title>[unknown] (123,013,392 samples, 0.13%)</title><rect x="80.8614%" y="597" width="0.1301%" height="15" fill="rgb(210,6,40)" fg:x="76444798605" fg:w="123013392"/><text x="81.1114%" y="607.50"></text></g><g><title>[unknown] (108,890,442 samples, 0.12%)</title><rect x="80.8764%" y="581" width="0.1152%" height="15" fill="rgb(212,48,18)" fg:x="76458921555" fg:w="108890442"/><text x="81.1264%" y="591.50"></text></g><g><title>[unknown] (108,890,442 samples, 0.12%)</title><rect x="80.8764%" y="565" width="0.1152%" height="15" fill="rgb(230,214,11)" fg:x="76458921555" fg:w="108890442"/><text x="81.1264%" y="575.50"></text></g><g><title>[unknown] (101,966,018 samples, 0.11%)</title><rect x="80.8837%" y="549" width="0.1079%" height="15" fill="rgb(254,105,39)" fg:x="76465845979" fg:w="101966018"/><text x="81.1337%" y="559.50"></text></g><g><title>[unknown] (84,412,514 samples, 0.09%)</title><rect x="80.9023%" y="533" width="0.0893%" height="15" fill="rgb(245,158,5)" fg:x="76483399483" fg:w="84412514"/><text x="81.1523%" y="543.50"></text></g><g><title>[unknown] (56,325,764 samples, 0.06%)</title><rect x="80.9320%" y="517" width="0.0596%" height="15" fill="rgb(249,208,11)" fg:x="76511486233" fg:w="56325764"/><text x="81.1820%" y="527.50"></text></g><g><title>[unknown] (56,325,764 samples, 0.06%)</title><rect x="80.9320%" y="501" width="0.0596%" height="15" fill="rgb(210,39,28)" fg:x="76511486233" fg:w="56325764"/><text x="81.1820%" y="511.50"></text></g><g><title>[unknown] (49,303,885 samples, 0.05%)</title><rect x="80.9394%" y="485" width="0.0522%" height="15" fill="rgb(211,56,53)" fg:x="76518508112" fg:w="49303885"/><text x="81.1894%" y="495.50"></text></g><g><title>[unknown] (45,860,928 samples, 0.05%)</title><rect x="80.9430%" y="469" width="0.0485%" height="15" fill="rgb(226,201,30)" fg:x="76521951069" fg:w="45860928"/><text x="81.1930%" y="479.50"></text></g><g><title>matrixmultiply::gemm::pack (289,392,128 samples, 0.31%)</title><rect x="80.6929%" y="693" width="0.3061%" height="15" fill="rgb(239,101,34)" fg:x="76285442254" fg:w="289392128"/><text x="80.9429%" y="703.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (4,290,358,480 samples, 4.54%)</title><rect x="81.4532%" y="565" width="4.5382%" height="15" fill="rgb(226,209,5)" fg:x="77004230864" fg:w="4290358480"/><text x="81.7032%" y="575.50">&lt;matr..</text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (4,290,358,480 samples, 4.54%)</title><rect x="81.4532%" y="549" width="4.5382%" height="15" fill="rgb(250,105,47)" fg:x="77004230864" fg:w="4290358480"/><text x="81.7032%" y="559.50">core:..</text></g><g><title>[unknown] (59,623,529 samples, 0.06%)</title><rect x="85.9283%" y="533" width="0.0631%" height="15" fill="rgb(230,72,3)" fg:x="81234965815" fg:w="59623529"/><text x="86.1783%" y="543.50"></text></g><g><title>[unknown] (56,122,722 samples, 0.06%)</title><rect x="85.9321%" y="517" width="0.0594%" height="15" fill="rgb(232,218,39)" fg:x="81238466622" fg:w="56122722"/><text x="86.1821%" y="527.50"></text></g><g><title>[unknown] (49,059,356 samples, 0.05%)</title><rect x="85.9395%" y="501" width="0.0519%" height="15" fill="rgb(248,166,6)" fg:x="81245529988" fg:w="49059356"/><text x="86.1895%" y="511.50"></text></g><g><title>[unknown] (45,518,955 samples, 0.05%)</title><rect x="85.9433%" y="485" width="0.0481%" height="15" fill="rgb(247,89,20)" fg:x="81249070389" fg:w="45518955"/><text x="86.1933%" y="495.50"></text></g><g><title>[unknown] (45,518,955 samples, 0.05%)</title><rect x="85.9433%" y="469" width="0.0481%" height="15" fill="rgb(248,130,54)" fg:x="81249070389" fg:w="45518955"/><text x="86.1933%" y="479.50"></text></g><g><title>[unknown] (42,019,585 samples, 0.04%)</title><rect x="85.9470%" y="453" width="0.0444%" height="15" fill="rgb(234,196,4)" fg:x="81252569759" fg:w="42019585"/><text x="86.1970%" y="463.50"></text></g><g><title>[unknown] (38,635,156 samples, 0.04%)</title><rect x="85.9505%" y="437" width="0.0409%" height="15" fill="rgb(250,143,31)" fg:x="81255954188" fg:w="38635156"/><text x="86.2005%" y="447.50"></text></g><g><title>[unknown] (38,635,156 samples, 0.04%)</title><rect x="85.9505%" y="421" width="0.0409%" height="15" fill="rgb(211,110,34)" fg:x="81255954188" fg:w="38635156"/><text x="86.2005%" y="431.50"></text></g><g><title>[unknown] (38,635,156 samples, 0.04%)</title><rect x="85.9505%" y="405" width="0.0409%" height="15" fill="rgb(215,124,48)" fg:x="81255954188" fg:w="38635156"/><text x="86.2005%" y="415.50"></text></g><g><title>[unknown] (28,330,739 samples, 0.03%)</title><rect x="85.9614%" y="389" width="0.0300%" height="15" fill="rgb(216,46,13)" fg:x="81266258605" fg:w="28330739"/><text x="86.2114%" y="399.50"></text></g><g><title>[unknown] (21,316,751 samples, 0.02%)</title><rect x="85.9689%" y="373" width="0.0225%" height="15" fill="rgb(205,184,25)" fg:x="81273272593" fg:w="21316751"/><text x="86.2189%" y="383.50"></text></g><g><title>[unknown] (10,559,939 samples, 0.01%)</title><rect x="85.9802%" y="357" width="0.0112%" height="15" fill="rgb(228,1,10)" fg:x="81284029405" fg:w="10559939"/><text x="86.2302%" y="367.50"></text></g><g><title>[unknown] (10,559,939 samples, 0.01%)</title><rect x="85.9802%" y="341" width="0.0112%" height="15" fill="rgb(213,116,27)" fg:x="81284029405" fg:w="10559939"/><text x="86.2302%" y="351.50"></text></g><g><title>[unknown] (10,559,939 samples, 0.01%)</title><rect x="85.9802%" y="325" width="0.0112%" height="15" fill="rgb(241,95,50)" fg:x="81284029405" fg:w="10559939"/><text x="86.2302%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_blend_pd (17,562,629 samples, 0.02%)</title><rect x="85.9950%" y="565" width="0.0186%" height="15" fill="rgb(238,48,32)" fg:x="81297992595" fg:w="17562629"/><text x="86.2450%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (1,320,034,825 samples, 1.40%)</title><rect x="86.0136%" y="565" width="1.3963%" height="15" fill="rgb(235,113,49)" fg:x="81315555224" fg:w="1320034825"/><text x="86.2636%" y="575.50"></text></g><g><title>[unknown] (17,366,846 samples, 0.02%)</title><rect x="87.3915%" y="549" width="0.0184%" height="15" fill="rgb(205,127,43)" fg:x="82618223203" fg:w="17366846"/><text x="87.6415%" y="559.50"></text></g><g><title>[unknown] (17,366,846 samples, 0.02%)</title><rect x="87.3915%" y="533" width="0.0184%" height="15" fill="rgb(250,162,2)" fg:x="82618223203" fg:w="17366846"/><text x="87.6415%" y="543.50"></text></g><g><title>[unknown] (17,366,846 samples, 0.02%)</title><rect x="87.3915%" y="517" width="0.0184%" height="15" fill="rgb(220,13,41)" fg:x="82618223203" fg:w="17366846"/><text x="87.6415%" y="527.50"></text></g><g><title>[unknown] (17,366,846 samples, 0.02%)</title><rect x="87.3915%" y="501" width="0.0184%" height="15" fill="rgb(249,221,25)" fg:x="82618223203" fg:w="17366846"/><text x="87.6415%" y="511.50"></text></g><g><title>[unknown] (17,366,846 samples, 0.02%)</title><rect x="87.3915%" y="485" width="0.0184%" height="15" fill="rgb(215,208,19)" fg:x="82618223203" fg:w="17366846"/><text x="87.6415%" y="495.50"></text></g><g><title>[unknown] (17,366,846 samples, 0.02%)</title><rect x="87.3915%" y="469" width="0.0184%" height="15" fill="rgb(236,175,2)" fg:x="82618223203" fg:w="17366846"/><text x="87.6415%" y="479.50"></text></g><g><title>[unknown] (17,366,846 samples, 0.02%)</title><rect x="87.3915%" y="453" width="0.0184%" height="15" fill="rgb(241,52,2)" fg:x="82618223203" fg:w="17366846"/><text x="87.6415%" y="463.50"></text></g><g><title>[unknown] (13,841,027 samples, 0.01%)</title><rect x="87.3953%" y="437" width="0.0146%" height="15" fill="rgb(248,140,14)" fg:x="82621749022" fg:w="13841027"/><text x="87.6453%" y="447.50"></text></g><g><title>[unknown] (10,346,269 samples, 0.01%)</title><rect x="87.3989%" y="421" width="0.0109%" height="15" fill="rgb(253,22,42)" fg:x="82625243780" fg:w="10346269"/><text x="87.6489%" y="431.50"></text></g><g><title>[unknown] (10,346,269 samples, 0.01%)</title><rect x="87.3989%" y="405" width="0.0109%" height="15" fill="rgb(234,61,47)" fg:x="82625243780" fg:w="10346269"/><text x="87.6489%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_pd (147,262,981 samples, 0.16%)</title><rect x="87.4099%" y="565" width="0.1558%" height="15" fill="rgb(208,226,15)" fg:x="82635590049" fg:w="147262981"/><text x="87.6599%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (147,262,981 samples, 0.16%)</title><rect x="87.4099%" y="549" width="0.1558%" height="15" fill="rgb(217,221,4)" fg:x="82635590049" fg:w="147262981"/><text x="87.6599%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (2,993,297,524 samples, 3.17%)</title><rect x="87.5674%" y="565" width="3.1662%" height="15" fill="rgb(212,174,34)" fg:x="82784449601" fg:w="2993297524"/><text x="87.8174%" y="575.50">cor..</text></g><g><title>[unknown] (40,085,790 samples, 0.04%)</title><rect x="90.6912%" y="549" width="0.0424%" height="15" fill="rgb(253,83,4)" fg:x="85737661335" fg:w="40085790"/><text x="90.9412%" y="559.50"></text></g><g><title>[unknown] (40,085,790 samples, 0.04%)</title><rect x="90.6912%" y="533" width="0.0424%" height="15" fill="rgb(250,195,49)" fg:x="85737661335" fg:w="40085790"/><text x="90.9412%" y="543.50"></text></g><g><title>[unknown] (40,085,790 samples, 0.04%)</title><rect x="90.6912%" y="517" width="0.0424%" height="15" fill="rgb(241,192,25)" fg:x="85737661335" fg:w="40085790"/><text x="90.9412%" y="527.50"></text></g><g><title>[unknown] (36,702,681 samples, 0.04%)</title><rect x="90.6948%" y="501" width="0.0388%" height="15" fill="rgb(208,124,10)" fg:x="85741044444" fg:w="36702681"/><text x="90.9448%" y="511.50"></text></g><g><title>[unknown] (33,165,247 samples, 0.04%)</title><rect x="90.6985%" y="485" width="0.0351%" height="15" fill="rgb(222,33,0)" fg:x="85744581878" fg:w="33165247"/><text x="90.9485%" y="495.50"></text></g><g><title>[unknown] (33,165,247 samples, 0.04%)</title><rect x="90.6985%" y="469" width="0.0351%" height="15" fill="rgb(234,209,28)" fg:x="85744581878" fg:w="33165247"/><text x="90.9485%" y="479.50"></text></g><g><title>[unknown] (33,165,247 samples, 0.04%)</title><rect x="90.6985%" y="453" width="0.0351%" height="15" fill="rgb(224,11,23)" fg:x="85744581878" fg:w="33165247"/><text x="90.9485%" y="463.50"></text></g><g><title>[unknown] (33,165,247 samples, 0.04%)</title><rect x="90.6985%" y="437" width="0.0351%" height="15" fill="rgb(232,99,1)" fg:x="85744581878" fg:w="33165247"/><text x="90.9485%" y="447.50"></text></g><g><title>[unknown] (29,631,488 samples, 0.03%)</title><rect x="90.7022%" y="421" width="0.0313%" height="15" fill="rgb(237,95,45)" fg:x="85748115637" fg:w="29631488"/><text x="90.9522%" y="431.50"></text></g><g><title>[unknown] (29,631,488 samples, 0.03%)</title><rect x="90.7022%" y="405" width="0.0313%" height="15" fill="rgb(208,109,11)" fg:x="85748115637" fg:w="29631488"/><text x="90.9522%" y="415.50"></text></g><g><title>[unknown] (22,552,105 samples, 0.02%)</title><rect x="90.7097%" y="389" width="0.0239%" height="15" fill="rgb(216,190,48)" fg:x="85755195020" fg:w="22552105"/><text x="90.9597%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (296,234,522 samples, 0.31%)</title><rect x="90.7336%" y="565" width="0.3133%" height="15" fill="rgb(251,171,36)" fg:x="85777747125" fg:w="296234522"/><text x="90.9836%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (322,474,863 samples, 0.34%)</title><rect x="91.0469%" y="565" width="0.3411%" height="15" fill="rgb(230,62,22)" fg:x="86073981647" fg:w="322474863"/><text x="91.2969%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (322,474,863 samples, 0.34%)</title><rect x="91.0469%" y="549" width="0.3411%" height="15" fill="rgb(225,114,35)" fg:x="86073981647" fg:w="322474863"/><text x="91.2969%" y="559.50"></text></g><g><title>core::ptr::write_unaligned (322,474,863 samples, 0.34%)</title><rect x="91.0469%" y="533" width="0.3411%" height="15" fill="rgb(215,118,42)" fg:x="86073981647" fg:w="322474863"/><text x="91.2969%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (322,474,863 samples, 0.34%)</title><rect x="91.0469%" y="517" width="0.3411%" height="15" fill="rgb(243,119,21)" fg:x="86073981647" fg:w="322474863"/><text x="91.2969%" y="527.50"></text></g><g><title>[unknown] (297,791,399 samples, 0.31%)</title><rect x="91.0730%" y="501" width="0.3150%" height="15" fill="rgb(252,177,53)" fg:x="86098665111" fg:w="297791399"/><text x="91.3230%" y="511.50"></text></g><g><title>[unknown] (269,437,871 samples, 0.29%)</title><rect x="91.1030%" y="485" width="0.2850%" height="15" fill="rgb(237,209,29)" fg:x="86127018639" fg:w="269437871"/><text x="91.3530%" y="495.50"></text></g><g><title>[unknown] (267,445,697 samples, 0.28%)</title><rect x="91.1051%" y="469" width="0.2829%" height="15" fill="rgb(212,65,23)" fg:x="86129010813" fg:w="267445697"/><text x="91.3551%" y="479.50"></text></g><g><title>[unknown] (256,962,781 samples, 0.27%)</title><rect x="91.1162%" y="453" width="0.2718%" height="15" fill="rgb(230,222,46)" fg:x="86139493729" fg:w="256962781"/><text x="91.3662%" y="463.50"></text></g><g><title>[unknown] (234,369,499 samples, 0.25%)</title><rect x="91.1401%" y="437" width="0.2479%" height="15" fill="rgb(215,135,32)" fg:x="86162087011" fg:w="234369499"/><text x="91.3901%" y="447.50"></text></g><g><title>[unknown] (198,959,916 samples, 0.21%)</title><rect x="91.1776%" y="421" width="0.2105%" height="15" fill="rgb(246,101,22)" fg:x="86197496594" fg:w="198959916"/><text x="91.4276%" y="431.50"></text></g><g><title>[unknown] (188,332,504 samples, 0.20%)</title><rect x="91.1888%" y="405" width="0.1992%" height="15" fill="rgb(206,107,13)" fg:x="86208124006" fg:w="188332504"/><text x="91.4388%" y="415.50"></text></g><g><title>[unknown] (160,117,504 samples, 0.17%)</title><rect x="91.2187%" y="389" width="0.1694%" height="15" fill="rgb(250,100,44)" fg:x="86236339006" fg:w="160117504"/><text x="91.4687%" y="399.50"></text></g><g><title>[unknown] (137,466,272 samples, 0.15%)</title><rect x="91.2426%" y="373" width="0.1454%" height="15" fill="rgb(231,147,38)" fg:x="86258990238" fg:w="137466272"/><text x="91.4926%" y="383.50"></text></g><g><title>[unknown] (104,139,936 samples, 0.11%)</title><rect x="91.2779%" y="357" width="0.1102%" height="15" fill="rgb(229,8,40)" fg:x="86292316574" fg:w="104139936"/><text x="91.5279%" y="367.50"></text></g><g><title>[unknown] (82,860,477 samples, 0.09%)</title><rect x="91.3004%" y="341" width="0.0876%" height="15" fill="rgb(221,135,30)" fg:x="86313596033" fg:w="82860477"/><text x="91.5504%" y="351.50"></text></g><g><title>[unknown] (61,734,064 samples, 0.07%)</title><rect x="91.3227%" y="325" width="0.0653%" height="15" fill="rgb(249,193,18)" fg:x="86334722446" fg:w="61734064"/><text x="91.5727%" y="335.50"></text></g><g><title>[unknown] (59,727,765 samples, 0.06%)</title><rect x="91.3249%" y="309" width="0.0632%" height="15" fill="rgb(209,133,39)" fg:x="86336728745" fg:w="59727765"/><text x="91.5749%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (80,791,804 samples, 0.09%)</title><rect x="91.3880%" y="565" width="0.0855%" height="15" fill="rgb(232,100,14)" fg:x="86396456510" fg:w="80791804"/><text x="91.6380%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (80,791,804 samples, 0.09%)</title><rect x="91.3880%" y="549" width="0.0855%" height="15" fill="rgb(224,185,1)" fg:x="86396456510" fg:w="80791804"/><text x="91.6380%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (63,551,738 samples, 0.07%)</title><rect x="91.4063%" y="533" width="0.0672%" height="15" fill="rgb(223,139,8)" fg:x="86413696576" fg:w="63551738"/><text x="91.6563%" y="543.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (9,899,383,960 samples, 10.47%)</title><rect x="81.0134%" y="613" width="10.4713%" height="15" fill="rgb(232,213,38)" fg:x="76588463218" fg:w="9899383960"/><text x="81.2634%" y="623.50">&lt;matrixmultiply..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (9,895,839,926 samples, 10.47%)</title><rect x="81.0171%" y="597" width="10.4676%" height="15" fill="rgb(207,94,22)" fg:x="76592007252" fg:w="9895839926"/><text x="81.2671%" y="607.50">matrixmultiply:..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (9,880,284,978 samples, 10.45%)</title><rect x="81.0336%" y="581" width="10.4511%" height="15" fill="rgb(219,183,54)" fg:x="76607562200" fg:w="9880284978"/><text x="81.2836%" y="591.50">matrixmultiply:..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10,598,864 samples, 0.01%)</title><rect x="91.4735%" y="565" width="0.0112%" height="15" fill="rgb(216,185,54)" fg:x="86477248314" fg:w="10598864"/><text x="91.7235%" y="575.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (76,181,696 samples, 0.08%)</title><rect x="91.4939%" y="549" width="0.0806%" height="15" fill="rgb(254,217,39)" fg:x="86496527001" fg:w="76181696"/><text x="91.7439%" y="559.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (76,181,696 samples, 0.08%)</title><rect x="91.4939%" y="533" width="0.0806%" height="15" fill="rgb(240,178,23)" fg:x="86496527001" fg:w="76181696"/><text x="91.7439%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (17,705,920 samples, 0.02%)</title><rect x="91.5745%" y="549" width="0.0187%" height="15" fill="rgb(218,11,47)" fg:x="86572708697" fg:w="17705920"/><text x="91.8245%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (59,074,347 samples, 0.06%)</title><rect x="91.5932%" y="549" width="0.0625%" height="15" fill="rgb(218,51,51)" fg:x="86590414617" fg:w="59074347"/><text x="91.8432%" y="559.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (10,078,170,240 samples, 10.66%)</title><rect x="80.9990%" y="661" width="10.6604%" height="15" fill="rgb(238,126,27)" fg:x="76574834382" fg:w="10078170240"/><text x="81.2490%" y="671.50">matrixmultiply::..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (10,078,170,240 samples, 10.66%)</title><rect x="80.9990%" y="645" width="10.6604%" height="15" fill="rgb(249,202,22)" fg:x="76574834382" fg:w="10078170240"/><text x="81.2490%" y="655.50">matrixmultiply::..</text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (10,078,170,240 samples, 10.66%)</title><rect x="80.9990%" y="629" width="10.6604%" height="15" fill="rgb(254,195,49)" fg:x="76574834382" fg:w="10078170240"/><text x="81.2490%" y="639.50">matrixmultiply::..</text></g><g><title>matrixmultiply::gemm::masked_kernel (165,157,444 samples, 0.17%)</title><rect x="91.4847%" y="613" width="0.1747%" height="15" fill="rgb(208,123,14)" fg:x="86487847178" fg:w="165157444"/><text x="91.7347%" y="623.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (165,157,444 samples, 0.17%)</title><rect x="91.4847%" y="597" width="0.1747%" height="15" fill="rgb(224,200,8)" fg:x="86487847178" fg:w="165157444"/><text x="91.7347%" y="607.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (165,157,444 samples, 0.17%)</title><rect x="91.4847%" y="581" width="0.1747%" height="15" fill="rgb(217,61,36)" fg:x="86487847178" fg:w="165157444"/><text x="91.7347%" y="591.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (165,157,444 samples, 0.17%)</title><rect x="91.4847%" y="565" width="0.1747%" height="15" fill="rgb(206,35,45)" fg:x="86487847178" fg:w="165157444"/><text x="91.7347%" y="575.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (10,550,057,028 samples, 11.16%)</title><rect x="80.6891%" y="709" width="11.1596%" height="15" fill="rgb(217,65,33)" fg:x="76281891901" fg:w="10550057028"/><text x="80.9391%" y="719.50">matrixmultiply::..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (10,257,114,547 samples, 10.85%)</title><rect x="80.9990%" y="693" width="10.8497%" height="15" fill="rgb(222,158,48)" fg:x="76574834382" fg:w="10257114547"/><text x="81.2490%" y="703.50">matrixmultiply::..</text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (10,257,114,547 samples, 10.85%)</title><rect x="80.9990%" y="677" width="10.8497%" height="15" fill="rgb(254,2,54)" fg:x="76574834382" fg:w="10257114547"/><text x="81.2490%" y="687.50">matrixmultiply::..</text></g><g><title>matrixmultiply::gemm::pack (178,944,307 samples, 0.19%)</title><rect x="91.6594%" y="661" width="0.1893%" height="15" fill="rgb(250,143,38)" fg:x="86653004622" fg:w="178944307"/><text x="91.9094%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (171,904,716 samples, 0.18%)</title><rect x="91.6669%" y="645" width="0.1818%" height="15" fill="rgb(248,25,0)" fg:x="86660044213" fg:w="171904716"/><text x="91.9169%" y="655.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (48,714,914 samples, 0.05%)</title><rect x="91.8552%" y="661" width="0.0515%" height="15" fill="rgb(206,152,27)" fg:x="86838119393" fg:w="48714914"/><text x="92.1052%" y="671.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (43,934,788 samples, 0.05%)</title><rect x="91.9068%" y="661" width="0.0465%" height="15" fill="rgb(240,77,30)" fg:x="86886834307" fg:w="43934788"/><text x="92.1568%" y="671.50"></text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (10,655,782,081 samples, 11.27%)</title><rect x="80.6891%" y="725" width="11.2714%" height="15" fill="rgb(231,5,3)" fg:x="76281891901" fg:w="10655782081"/><text x="80.9391%" y="735.50">nalgebra::base::b..</text></g><g><title>nalgebra::base::blas_uninit::gemv_uninit (105,725,053 samples, 0.11%)</title><rect x="91.8487%" y="709" width="0.1118%" height="15" fill="rgb(207,226,32)" fg:x="86831948929" fg:w="105725053"/><text x="92.0987%" y="719.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (105,725,053 samples, 0.11%)</title><rect x="91.8487%" y="693" width="0.1118%" height="15" fill="rgb(222,207,47)" fg:x="86831948929" fg:w="105725053"/><text x="92.0987%" y="703.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (105,725,053 samples, 0.11%)</title><rect x="91.8487%" y="677" width="0.1118%" height="15" fill="rgb(229,115,45)" fg:x="86831948929" fg:w="105725053"/><text x="92.0987%" y="687.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (10,662,841,633 samples, 11.28%)</title><rect x="80.6891%" y="741" width="11.2789%" height="15" fill="rgb(224,191,6)" fg:x="76281891901" fg:w="10662841633"/><text x="80.9391%" y="751.50">nalgebra::base::o..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;nalgebra::base::matrix::Matrix&lt;f64,R,C,S&gt;&gt; for f64&gt;::mul (44,756,812 samples, 0.05%)</title><rect x="91.9680%" y="741" width="0.0473%" height="15" fill="rgb(230,227,24)" fg:x="86944733534" fg:w="44756812"/><text x="92.2180%" y="751.50"></text></g><g><title>core::intrinsics::copy (41,429,948 samples, 0.04%)</title><rect x="92.0228%" y="629" width="0.0438%" height="15" fill="rgb(228,80,19)" fg:x="86996536284" fg:w="41429948"/><text x="92.2728%" y="639.50"></text></g><g><title>nalgebra::base::edition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::swap_rows (44,931,130 samples, 0.05%)</title><rect x="92.0228%" y="709" width="0.0475%" height="15" fill="rgb(247,229,0)" fg:x="86996536284" fg:w="44931130"/><text x="92.2728%" y="719.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::swap_unchecked (44,931,130 samples, 0.05%)</title><rect x="92.0228%" y="693" width="0.0475%" height="15" fill="rgb(237,194,15)" fg:x="86996536284" fg:w="44931130"/><text x="92.2728%" y="703.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked (44,931,130 samples, 0.05%)</title><rect x="92.0228%" y="677" width="0.0475%" height="15" fill="rgb(219,203,20)" fg:x="86996536284" fg:w="44931130"/><text x="92.2728%" y="687.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked_linear (44,931,130 samples, 0.05%)</title><rect x="92.0228%" y="661" width="0.0475%" height="15" fill="rgb(234,128,8)" fg:x="86996536284" fg:w="44931130"/><text x="92.2728%" y="671.50"></text></g><g><title>core::ptr::swap (44,931,130 samples, 0.05%)</title><rect x="92.0228%" y="645" width="0.0475%" height="15" fill="rgb(248,202,8)" fg:x="86996536284" fg:w="44931130"/><text x="92.2728%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (14,024,436 samples, 0.01%)</title><rect x="92.0889%" y="693" width="0.0148%" height="15" fill="rgb(206,104,37)" fg:x="87059017685" fg:w="14024436"/><text x="92.3389%" y="703.50"></text></g><g><title>nalgebra::base::min_max::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::icamax (42,034,398 samples, 0.04%)</title><rect x="92.0703%" y="709" width="0.0445%" height="15" fill="rgb(223,8,27)" fg:x="87041467414" fg:w="42034398"/><text x="92.3203%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10,459,691 samples, 0.01%)</title><rect x="92.1037%" y="693" width="0.0111%" height="15" fill="rgb(216,217,28)" fg:x="87073042121" fg:w="10459691"/><text x="92.3537%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10,459,691 samples, 0.01%)</title><rect x="92.1037%" y="677" width="0.0111%" height="15" fill="rgb(249,199,1)" fg:x="87073042121" fg:w="10459691"/><text x="92.3537%" y="687.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (10,459,691 samples, 0.01%)</title><rect x="92.1037%" y="661" width="0.0111%" height="15" fill="rgb(240,85,17)" fg:x="87073042121" fg:w="10459691"/><text x="92.3537%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (10,459,691 samples, 0.01%)</title><rect x="92.1037%" y="645" width="0.0111%" height="15" fill="rgb(206,108,45)" fg:x="87073042121" fg:w="10459691"/><text x="92.3537%" y="655.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (246,084,348 samples, 0.26%)</title><rect x="92.1148%" y="693" width="0.2603%" height="15" fill="rgb(245,210,41)" fg:x="87083501812" fg:w="246084348"/><text x="92.3648%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (22,561,881 samples, 0.02%)</title><rect x="92.3751%" y="693" width="0.0239%" height="15" fill="rgb(206,13,37)" fg:x="87329586160" fg:w="22561881"/><text x="92.6251%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (22,561,881 samples, 0.02%)</title><rect x="92.3751%" y="677" width="0.0239%" height="15" fill="rgb(250,61,18)" fg:x="87329586160" fg:w="22561881"/><text x="92.6251%" y="687.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2,947,685,190 samples, 3.12%)</title><rect x="93.4111%" y="629" width="3.1180%" height="15" fill="rgb(235,172,48)" fg:x="88308988844" fg:w="2947685190"/><text x="93.6611%" y="639.50">&lt;f6..</text></g><g><title>[unknown] (46,459,968 samples, 0.05%)</title><rect x="96.4799%" y="613" width="0.0491%" height="15" fill="rgb(249,201,17)" fg:x="91210214066" fg:w="46459968"/><text x="96.7299%" y="623.50"></text></g><g><title>[unknown] (46,459,968 samples, 0.05%)</title><rect x="96.4799%" y="597" width="0.0491%" height="15" fill="rgb(219,208,6)" fg:x="91210214066" fg:w="46459968"/><text x="96.7299%" y="607.50"></text></g><g><title>[unknown] (46,459,968 samples, 0.05%)</title><rect x="96.4799%" y="581" width="0.0491%" height="15" fill="rgb(248,31,23)" fg:x="91210214066" fg:w="46459968"/><text x="96.7299%" y="591.50"></text></g><g><title>[unknown] (46,459,968 samples, 0.05%)</title><rect x="96.4799%" y="565" width="0.0491%" height="15" fill="rgb(245,15,42)" fg:x="91210214066" fg:w="46459968"/><text x="96.7299%" y="575.50"></text></g><g><title>[unknown] (43,056,672 samples, 0.05%)</title><rect x="96.4835%" y="549" width="0.0455%" height="15" fill="rgb(222,217,39)" fg:x="91213617362" fg:w="43056672"/><text x="96.7335%" y="559.50"></text></g><g><title>[unknown] (43,056,672 samples, 0.05%)</title><rect x="96.4835%" y="533" width="0.0455%" height="15" fill="rgb(210,219,27)" fg:x="91213617362" fg:w="43056672"/><text x="96.7335%" y="543.50"></text></g><g><title>[unknown] (43,056,672 samples, 0.05%)</title><rect x="96.4835%" y="517" width="0.0455%" height="15" fill="rgb(252,166,36)" fg:x="91213617362" fg:w="43056672"/><text x="96.7335%" y="527.50"></text></g><g><title>[unknown] (36,450,147 samples, 0.04%)</title><rect x="96.4905%" y="501" width="0.0386%" height="15" fill="rgb(245,132,34)" fg:x="91220223887" fg:w="36450147"/><text x="96.7405%" y="511.50"></text></g><g><title>[unknown] (33,029,137 samples, 0.03%)</title><rect x="96.4941%" y="485" width="0.0349%" height="15" fill="rgb(236,54,3)" fg:x="91223644897" fg:w="33029137"/><text x="96.7441%" y="495.50"></text></g><g><title>[unknown] (33,029,137 samples, 0.03%)</title><rect x="96.4941%" y="469" width="0.0349%" height="15" fill="rgb(241,173,43)" fg:x="91223644897" fg:w="33029137"/><text x="96.7441%" y="479.50"></text></g><g><title>[unknown] (19,903,637 samples, 0.02%)</title><rect x="96.5080%" y="453" width="0.0211%" height="15" fill="rgb(215,190,9)" fg:x="91236770397" fg:w="19903637"/><text x="96.7580%" y="463.50"></text></g><g><title>[unknown] (10,448,122 samples, 0.01%)</title><rect x="96.5180%" y="437" width="0.0111%" height="15" fill="rgb(242,101,16)" fg:x="91246225912" fg:w="10448122"/><text x="96.7680%" y="447.50"></text></g><g><title>[unknown] (10,448,122 samples, 0.01%)</title><rect x="96.5180%" y="421" width="0.0111%" height="15" fill="rgb(223,190,21)" fg:x="91246225912" fg:w="10448122"/><text x="96.7680%" y="431.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (2,143,129,083 samples, 2.27%)</title><rect x="96.5367%" y="629" width="2.2669%" height="15" fill="rgb(215,228,25)" fg:x="91263932527" fg:w="2143129083"/><text x="96.7867%" y="639.50">c..</text></g><g><title>[unknown] (26,082,118 samples, 0.03%)</title><rect x="98.7761%" y="613" width="0.0276%" height="15" fill="rgb(225,36,22)" fg:x="93380979492" fg:w="26082118"/><text x="99.0261%" y="623.50"></text></g><g><title>[unknown] (22,632,184 samples, 0.02%)</title><rect x="98.7798%" y="597" width="0.0239%" height="15" fill="rgb(251,106,46)" fg:x="93384429426" fg:w="22632184"/><text x="99.0298%" y="607.50"></text></g><g><title>[unknown] (22,632,184 samples, 0.02%)</title><rect x="98.7798%" y="581" width="0.0239%" height="15" fill="rgb(208,90,1)" fg:x="93384429426" fg:w="22632184"/><text x="99.0298%" y="591.50"></text></g><g><title>[unknown] (17,065,295 samples, 0.02%)</title><rect x="98.7856%" y="565" width="0.0181%" height="15" fill="rgb(243,10,4)" fg:x="93389996315" fg:w="17065295"/><text x="99.0356%" y="575.50"></text></g><g><title>[unknown] (17,065,295 samples, 0.02%)</title><rect x="98.7856%" y="549" width="0.0181%" height="15" fill="rgb(212,137,27)" fg:x="93389996315" fg:w="17065295"/><text x="99.0356%" y="559.50"></text></g><g><title>[unknown] (17,065,295 samples, 0.02%)</title><rect x="98.7856%" y="533" width="0.0181%" height="15" fill="rgb(231,220,49)" fg:x="93389996315" fg:w="17065295"/><text x="99.0356%" y="543.50"></text></g><g><title>[unknown] (17,065,295 samples, 0.02%)</title><rect x="98.7856%" y="517" width="0.0181%" height="15" fill="rgb(237,96,20)" fg:x="93389996315" fg:w="17065295"/><text x="99.0356%" y="527.50"></text></g><g><title>[unknown] (17,065,295 samples, 0.02%)</title><rect x="98.7856%" y="501" width="0.0181%" height="15" fill="rgb(239,229,30)" fg:x="93389996315" fg:w="17065295"/><text x="99.0356%" y="511.50"></text></g><g><title>[unknown] (17,065,295 samples, 0.02%)</title><rect x="98.7856%" y="485" width="0.0181%" height="15" fill="rgb(219,65,33)" fg:x="93389996315" fg:w="17065295"/><text x="99.0356%" y="495.50"></text></g><g><title>[unknown] (17,065,295 samples, 0.02%)</title><rect x="98.7856%" y="469" width="0.0181%" height="15" fill="rgb(243,134,7)" fg:x="93389996315" fg:w="17065295"/><text x="99.0356%" y="479.50"></text></g><g><title>[unknown] (10,191,966 samples, 0.01%)</title><rect x="98.7929%" y="453" width="0.0108%" height="15" fill="rgb(216,177,54)" fg:x="93396869644" fg:w="10191966"/><text x="99.0429%" y="463.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (6,701,283,494 samples, 7.09%)</title><rect x="92.3990%" y="693" width="7.0885%" height="15" fill="rgb(211,160,20)" fg:x="87352148041" fg:w="6701283494"/><text x="92.6490%" y="703.50">nalgebra::..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (6,701,283,494 samples, 7.09%)</title><rect x="92.3990%" y="677" width="7.0885%" height="15" fill="rgb(239,85,39)" fg:x="87352148041" fg:w="6701283494"/><text x="92.6490%" y="687.50">nalgebra::..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (6,701,283,494 samples, 7.09%)</title><rect x="92.3990%" y="661" width="7.0885%" height="15" fill="rgb(232,125,22)" fg:x="87352148041" fg:w="6701283494"/><text x="92.6490%" y="671.50">nalgebra::..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (6,701,283,494 samples, 7.09%)</title><rect x="92.3990%" y="645" width="7.0885%" height="15" fill="rgb(244,57,34)" fg:x="87352148041" fg:w="6701283494"/><text x="92.6490%" y="655.50">nalgebra::..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (646,369,925 samples, 0.68%)</title><rect x="98.8037%" y="629" width="0.6837%" height="15" fill="rgb(214,203,32)" fg:x="93407061610" fg:w="646369925"/><text x="99.0537%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (646,369,925 samples, 0.68%)</title><rect x="98.8037%" y="613" width="0.6837%" height="15" fill="rgb(207,58,43)" fg:x="93407061610" fg:w="646369925"/><text x="99.0537%" y="623.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (628,336,309 samples, 0.66%)</title><rect x="98.8228%" y="597" width="0.6646%" height="15" fill="rgb(215,193,15)" fg:x="93425095226" fg:w="628336309"/><text x="99.0728%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (628,336,309 samples, 0.66%)</title><rect x="98.8228%" y="581" width="0.6646%" height="15" fill="rgb(232,15,44)" fg:x="93425095226" fg:w="628336309"/><text x="99.0728%" y="591.50"></text></g><g><title>[unknown] (18,360,217 samples, 0.02%)</title><rect x="99.4680%" y="565" width="0.0194%" height="15" fill="rgb(212,3,48)" fg:x="94035071318" fg:w="18360217"/><text x="99.7180%" y="575.50"></text></g><g><title>[unknown] (15,203,834 samples, 0.02%)</title><rect x="99.4713%" y="549" width="0.0161%" height="15" fill="rgb(218,128,7)" fg:x="94038227701" fg:w="15203834"/><text x="99.7213%" y="559.50"></text></g><g><title>[unknown] (15,203,834 samples, 0.02%)</title><rect x="99.4713%" y="533" width="0.0161%" height="15" fill="rgb(226,216,39)" fg:x="94038227701" fg:w="15203834"/><text x="99.7213%" y="543.50"></text></g><g><title>[unknown] (15,203,834 samples, 0.02%)</title><rect x="99.4713%" y="517" width="0.0161%" height="15" fill="rgb(243,47,51)" fg:x="94038227701" fg:w="15203834"/><text x="99.7213%" y="527.50"></text></g><g><title>[unknown] (15,203,834 samples, 0.02%)</title><rect x="99.4713%" y="501" width="0.0161%" height="15" fill="rgb(241,183,40)" fg:x="94038227701" fg:w="15203834"/><text x="99.7213%" y="511.50"></text></g><g><title>[unknown] (13,610,627 samples, 0.01%)</title><rect x="99.4730%" y="485" width="0.0144%" height="15" fill="rgb(231,217,32)" fg:x="94039820908" fg:w="13610627"/><text x="99.7230%" y="495.50"></text></g><g><title>[unknown] (13,610,627 samples, 0.01%)</title><rect x="99.4730%" y="469" width="0.0144%" height="15" fill="rgb(229,61,38)" fg:x="94039820908" fg:w="13610627"/><text x="99.7230%" y="479.50"></text></g><g><title>[unknown] (13,610,627 samples, 0.01%)</title><rect x="99.4730%" y="453" width="0.0144%" height="15" fill="rgb(225,210,5)" fg:x="94039820908" fg:w="13610627"/><text x="99.7230%" y="463.50"></text></g><g><title>[unknown] (10,105,629 samples, 0.01%)</title><rect x="99.4767%" y="437" width="0.0107%" height="15" fill="rgb(231,79,45)" fg:x="94043325906" fg:w="10105629"/><text x="99.7267%" y="447.50"></text></g><g><title>[unknown] (10,105,629 samples, 0.01%)</title><rect x="99.4767%" y="421" width="0.0107%" height="15" fill="rgb(224,100,7)" fg:x="94043325906" fg:w="10105629"/><text x="99.7267%" y="431.50"></text></g><g><title>&lt;f64 as core::ops::arith::MulAssign&gt;::mul_assign (10,675,111 samples, 0.01%)</title><rect x="99.4874%" y="677" width="0.0113%" height="15" fill="rgb(241,198,18)" fg:x="94053431535" fg:w="10675111"/><text x="99.7374%" y="687.50"></text></g><g><title>nalgebra::linalg::lu::gauss_step (6,984,121,698 samples, 7.39%)</title><rect x="92.1148%" y="709" width="7.3876%" height="15" fill="rgb(252,97,53)" fg:x="87083501812" fg:w="6984121698"/><text x="92.3648%" y="719.50">nalgebra::..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::MulAssign&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul_assign (14,191,975 samples, 0.02%)</title><rect x="99.4874%" y="693" width="0.0150%" height="15" fill="rgb(220,88,7)" fg:x="94053431535" fg:w="14191975"/><text x="99.7374%" y="703.50"></text></g><g><title>core::mem::swap (19,088,028 samples, 0.02%)</title><rect x="99.5024%" y="693" width="0.0202%" height="15" fill="rgb(213,176,14)" fg:x="94067623510" fg:w="19088028"/><text x="99.7524%" y="703.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (113,733,111 samples, 0.12%)</title><rect x="99.5501%" y="629" width="0.1203%" height="15" fill="rgb(246,73,7)" fg:x="94112684212" fg:w="113733111"/><text x="99.8001%" y="639.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (99,507,439 samples, 0.11%)</title><rect x="99.6704%" y="629" width="0.1053%" height="15" fill="rgb(245,64,36)" fg:x="94226417323" fg:w="99507439"/><text x="99.9204%" y="639.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (265,740,912 samples, 0.28%)</title><rect x="99.5226%" y="693" width="0.2811%" height="15" fill="rgb(245,80,10)" fg:x="94086711538" fg:w="265740912"/><text x="99.7726%" y="703.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (265,740,912 samples, 0.28%)</title><rect x="99.5226%" y="677" width="0.2811%" height="15" fill="rgb(232,107,50)" fg:x="94086711538" fg:w="265740912"/><text x="99.7726%" y="687.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (265,740,912 samples, 0.28%)</title><rect x="99.5226%" y="661" width="0.2811%" height="15" fill="rgb(253,3,0)" fg:x="94086711538" fg:w="265740912"/><text x="99.7726%" y="671.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (265,740,912 samples, 0.28%)</title><rect x="99.5226%" y="645" width="0.2811%" height="15" fill="rgb(212,99,53)" fg:x="94086711538" fg:w="265740912"/><text x="99.7726%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (26,527,688 samples, 0.03%)</title><rect x="99.7756%" y="629" width="0.0281%" height="15" fill="rgb(249,111,54)" fg:x="94325924762" fg:w="26527688"/><text x="100.0256%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (26,527,688 samples, 0.03%)</title><rect x="99.7756%" y="613" width="0.0281%" height="15" fill="rgb(249,55,30)" fg:x="94325924762" fg:w="26527688"/><text x="100.0256%" y="623.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (23,024,143 samples, 0.02%)</title><rect x="99.7793%" y="597" width="0.0244%" height="15" fill="rgb(237,47,42)" fg:x="94329428307" fg:w="23024143"/><text x="100.0293%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (23,024,143 samples, 0.02%)</title><rect x="99.7793%" y="581" width="0.0244%" height="15" fill="rgb(211,20,18)" fg:x="94329428307" fg:w="23024143"/><text x="100.0293%" y="591.50"></text></g><g><title>nalgebra::linalg::decomposition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::lu (7,366,460,259 samples, 7.79%)</title><rect x="92.0153%" y="741" width="7.7921%" height="15" fill="rgb(231,203,46)" fg:x="86989490346" fg:w="7366460259"/><text x="92.2653%" y="751.50">nalgebra::l..</text></g><g><title>nalgebra::linalg::lu::LU&lt;T,R,C&gt;::new (7,366,460,259 samples, 7.79%)</title><rect x="92.0153%" y="725" width="7.7921%" height="15" fill="rgb(237,142,3)" fg:x="86989490346" fg:w="7366460259"/><text x="92.2653%" y="735.50">nalgebra::l..</text></g><g><title>nalgebra::linalg::lu::gauss_step_swap (288,327,095 samples, 0.30%)</title><rect x="99.5024%" y="709" width="0.3050%" height="15" fill="rgb(241,107,1)" fg:x="94067623510" fg:w="288327095"/><text x="99.7524%" y="719.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::solve_lower_triangular_with_diag_mut (17,264,150 samples, 0.02%)</title><rect x="99.8110%" y="709" width="0.0183%" height="15" fill="rgb(229,83,13)" fg:x="94359365511" fg:w="17264150"/><text x="100.0610%" y="719.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (17,264,150 samples, 0.02%)</title><rect x="99.8110%" y="693" width="0.0183%" height="15" fill="rgb(241,91,40)" fg:x="94359365511" fg:w="17264150"/><text x="100.0610%" y="703.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (17,264,150 samples, 0.02%)</title><rect x="99.8110%" y="677" width="0.0183%" height="15" fill="rgb(225,3,45)" fg:x="94359365511" fg:w="17264150"/><text x="100.0610%" y="687.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (17,264,150 samples, 0.02%)</title><rect x="99.8110%" y="661" width="0.0183%" height="15" fill="rgb(244,223,14)" fg:x="94359365511" fg:w="17264150"/><text x="100.0610%" y="671.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (17,264,150 samples, 0.02%)</title><rect x="99.8110%" y="645" width="0.0183%" height="15" fill="rgb(224,124,37)" fg:x="94359365511" fg:w="17264150"/><text x="100.0610%" y="655.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (10,296,697 samples, 0.01%)</title><rect x="99.8184%" y="629" width="0.0109%" height="15" fill="rgb(251,171,30)" fg:x="94366332964" fg:w="10296697"/><text x="100.0684%" y="639.50"></text></g><g><title>nalgebra::linalg::lu::LU&lt;T,D,D&gt;::solve (42,842,424 samples, 0.05%)</title><rect x="99.8074%" y="741" width="0.0453%" height="15" fill="rgb(236,46,54)" fg:x="94355950605" fg:w="42842424"/><text x="100.0574%" y="751.50"></text></g><g><title>nalgebra::linalg::lu::LU&lt;T,D,D&gt;::solve_mut (39,427,518 samples, 0.04%)</title><rect x="99.8110%" y="725" width="0.0417%" height="15" fill="rgb(245,213,5)" fg:x="94359365511" fg:w="39427518"/><text x="100.0610%" y="735.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::solve_upper_triangular_mut (22,163,368 samples, 0.02%)</title><rect x="99.8293%" y="709" width="0.0234%" height="15" fill="rgb(230,144,27)" fg:x="94376629661" fg:w="22163368"/><text x="100.0793%" y="719.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::solve_upper_triangular_vector_mut (22,163,368 samples, 0.02%)</title><rect x="99.8293%" y="693" width="0.0234%" height="15" fill="rgb(220,86,6)" fg:x="94376629661" fg:w="22163368"/><text x="100.0793%" y="703.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (18,663,491 samples, 0.02%)</title><rect x="99.8330%" y="677" width="0.0197%" height="15" fill="rgb(240,20,13)" fg:x="94380129538" fg:w="18663491"/><text x="100.0830%" y="687.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (18,663,491 samples, 0.02%)</title><rect x="99.8330%" y="661" width="0.0197%" height="15" fill="rgb(217,89,34)" fg:x="94380129538" fg:w="18663491"/><text x="100.0830%" y="671.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (18,663,491 samples, 0.02%)</title><rect x="99.8330%" y="645" width="0.0197%" height="15" fill="rgb(229,13,5)" fg:x="94380129538" fg:w="18663491"/><text x="100.0830%" y="655.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (18,663,491 samples, 0.02%)</title><rect x="99.8330%" y="629" width="0.0197%" height="15" fill="rgb(244,67,35)" fg:x="94380129538" fg:w="18663491"/><text x="100.0830%" y="639.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (12,279,198 samples, 0.01%)</title><rect x="99.8625%" y="517" width="0.0130%" height="15" fill="rgb(221,40,2)" fg:x="94408046584" fg:w="12279198"/><text x="100.1125%" y="527.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (12,279,198 samples, 0.01%)</title><rect x="99.8625%" y="501" width="0.0130%" height="15" fill="rgb(237,157,21)" fg:x="94408046584" fg:w="12279198"/><text x="100.1125%" y="511.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (19,609,672 samples, 0.02%)</title><rect x="99.8566%" y="613" width="0.0207%" height="15" fill="rgb(222,94,11)" fg:x="94402464231" fg:w="19609672"/><text x="100.1066%" y="623.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (19,609,672 samples, 0.02%)</title><rect x="99.8566%" y="597" width="0.0207%" height="15" fill="rgb(249,113,6)" fg:x="94402464231" fg:w="19609672"/><text x="100.1066%" y="607.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (19,609,672 samples, 0.02%)</title><rect x="99.8566%" y="581" width="0.0207%" height="15" fill="rgb(238,137,36)" fg:x="94402464231" fg:w="19609672"/><text x="100.1066%" y="591.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (19,609,672 samples, 0.02%)</title><rect x="99.8566%" y="565" width="0.0207%" height="15" fill="rgb(210,102,26)" fg:x="94402464231" fg:w="19609672"/><text x="100.1066%" y="575.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (19,609,672 samples, 0.02%)</title><rect x="99.8566%" y="549" width="0.0207%" height="15" fill="rgb(218,30,30)" fg:x="94402464231" fg:w="19609672"/><text x="100.1066%" y="559.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (19,609,672 samples, 0.02%)</title><rect x="99.8566%" y="533" width="0.0207%" height="15" fill="rgb(214,67,26)" fg:x="94402464231" fg:w="19609672"/><text x="100.1066%" y="543.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (23,108,051 samples, 0.02%)</title><rect x="99.8566%" y="709" width="0.0244%" height="15" fill="rgb(251,9,53)" fg:x="94402464231" fg:w="23108051"/><text x="100.1066%" y="719.50"></text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (23,108,051 samples, 0.02%)</title><rect x="99.8566%" y="693" width="0.0244%" height="15" fill="rgb(228,204,25)" fg:x="94402464231" fg:w="23108051"/><text x="100.1066%" y="703.50"></text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (23,108,051 samples, 0.02%)</title><rect x="99.8566%" y="677" width="0.0244%" height="15" fill="rgb(207,153,8)" fg:x="94402464231" fg:w="23108051"/><text x="100.1066%" y="687.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (23,108,051 samples, 0.02%)</title><rect x="99.8566%" y="661" width="0.0244%" height="15" fill="rgb(242,9,16)" fg:x="94402464231" fg:w="23108051"/><text x="100.1066%" y="671.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (23,108,051 samples, 0.02%)</title><rect x="99.8566%" y="645" width="0.0244%" height="15" fill="rgb(217,211,10)" fg:x="94402464231" fg:w="23108051"/><text x="100.1066%" y="655.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (23,108,051 samples, 0.02%)</title><rect x="99.8566%" y="629" width="0.0244%" height="15" fill="rgb(219,228,52)" fg:x="94402464231" fg:w="23108051"/><text x="100.1066%" y="639.50"></text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit (94,399,171,525 samples, 99.85%)</title><rect x="0.1299%" y="773" width="99.8531%" height="15" fill="rgb(231,92,29)" fg:x="122814018" fg:w="94399171525"/><text x="0.3799%" y="783.50">rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit</text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::update_weights (19,853,693,073 samples, 21.00%)</title><rect x="78.9823%" y="757" width="21.0007%" height="15" fill="rgb(232,8,23)" fg:x="74668292470" fg:w="19853693073"/><text x="79.2323%" y="767.50">rkl::core::optimizers::MarquardtO..</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (123,192,514 samples, 0.13%)</title><rect x="99.8527%" y="741" width="0.1303%" height="15" fill="rgb(216,211,34)" fg:x="94398793029" fg:w="123192514"/><text x="100.1027%" y="751.50"></text></g><g><title>rkl::core::layers::Dense::forward (123,192,514 samples, 0.13%)</title><rect x="99.8527%" y="725" width="0.1303%" height="15" fill="rgb(236,151,0)" fg:x="94398793029" fg:w="123192514"/><text x="100.1027%" y="735.50"></text></g><g><title>rkl::core::activations::Activation::forward (96,413,261 samples, 0.10%)</title><rect x="99.8810%" y="709" width="0.1020%" height="15" fill="rgb(209,168,3)" fg:x="94425572282" fg:w="96413261"/><text x="100.1310%" y="719.50"></text></g><g><title>rkl::core::activations::tanh_forward (96,413,261 samples, 0.10%)</title><rect x="99.8810%" y="693" width="0.1020%" height="15" fill="rgb(208,129,28)" fg:x="94425572282" fg:w="96413261"/><text x="100.1310%" y="703.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (96,413,261 samples, 0.10%)</title><rect x="99.8810%" y="677" width="0.1020%" height="15" fill="rgb(229,78,22)" fg:x="94425572282" fg:w="96413261"/><text x="100.1310%" y="687.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (96,413,261 samples, 0.10%)</title><rect x="99.8810%" y="661" width="0.1020%" height="15" fill="rgb(228,187,13)" fg:x="94425572282" fg:w="96413261"/><text x="100.1310%" y="671.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (96,413,261 samples, 0.10%)</title><rect x="99.8810%" y="645" width="0.1020%" height="15" fill="rgb(240,119,24)" fg:x="94425572282" fg:w="96413261"/><text x="100.1310%" y="655.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (96,413,261 samples, 0.10%)</title><rect x="99.8810%" y="629" width="0.1020%" height="15" fill="rgb(209,194,42)" fg:x="94425572282" fg:w="96413261"/><text x="100.1310%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (96,413,261 samples, 0.10%)</title><rect x="99.8810%" y="613" width="0.1020%" height="15" fill="rgb(247,200,46)" fg:x="94425572282" fg:w="96413261"/><text x="100.1310%" y="623.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (96,413,261 samples, 0.10%)</title><rect x="99.8810%" y="597" width="0.1020%" height="15" fill="rgb(218,76,16)" fg:x="94425572282" fg:w="96413261"/><text x="100.1310%" y="607.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (89,390,372 samples, 0.09%)</title><rect x="99.8885%" y="581" width="0.0946%" height="15" fill="rgb(225,21,48)" fg:x="94432595171" fg:w="89390372"/><text x="100.1385%" y="591.50"></text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (89,390,372 samples, 0.09%)</title><rect x="99.8885%" y="565" width="0.0946%" height="15" fill="rgb(239,223,50)" fg:x="94432595171" fg:w="89390372"/><text x="100.1385%" y="575.50"></text></g><g><title>fastapprox::fast::tanh (85,869,210 samples, 0.09%)</title><rect x="99.8922%" y="549" width="0.0908%" height="15" fill="rgb(244,45,21)" fg:x="94436116333" fg:w="85869210"/><text x="100.1422%" y="559.50"></text></g><g><title>fastapprox::fast::exp (70,253,813 samples, 0.07%)</title><rect x="99.9087%" y="533" width="0.0743%" height="15" fill="rgb(232,33,43)" fg:x="94451731730" fg:w="70253813"/><text x="100.1587%" y="543.50"></text></g><g><title>fastapprox::fast::pow2 (70,253,813 samples, 0.07%)</title><rect x="99.9087%" y="517" width="0.0743%" height="15" fill="rgb(209,8,3)" fg:x="94451731730" fg:w="70253813"/><text x="100.1587%" y="527.50"></text></g><g><title>__libc_start_main_impl (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="1029" width="99.8642%" height="15" fill="rgb(214,25,53)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="1039.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="1013" width="99.8642%" height="15" fill="rgb(254,186,54)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="1023.50">__libc_start_call_main</text></g><g><title>main (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="997" width="99.8642%" height="15" fill="rgb(208,174,49)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="1007.50">main</text></g><g><title>std::rt::lang_start_internal (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="981" width="99.8642%" height="15" fill="rgb(233,191,51)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="991.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="965" width="99.8642%" height="15" fill="rgb(222,134,10)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="949" width="99.8642%" height="15" fill="rgb(230,226,20)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="933" width="99.8642%" height="15" fill="rgb(251,111,25)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="943.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="917" width="99.8642%" height="15" fill="rgb(224,40,46)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="927.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="901" width="99.8642%" height="15" fill="rgb(236,108,47)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="885" width="99.8642%" height="15" fill="rgb(234,93,0)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="869" width="99.8642%" height="15" fill="rgb(224,213,32)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="879.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="853" width="99.8642%" height="15" fill="rgb(251,11,48)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="863.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="837" width="99.8642%" height="15" fill="rgb(236,173,5)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="847.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="821" width="99.8642%" height="15" fill="rgb(230,95,12)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="831.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="805" width="99.8642%" height="15" fill="rgb(232,209,1)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="815.50">core::ops::function::FnOnce::call_once</text></g><g><title>main_benchmark::main (94,409,611,972 samples, 99.86%)</title><rect x="0.1262%" y="789" width="99.8642%" height="15" fill="rgb(232,6,1)" fg:x="119333976" fg:w="94409611972"/><text x="0.3762%" y="799.50">main_benchmark::main</text></g><g><title>_start (94,415,112,189 samples, 99.87%)</title><rect x="0.1262%" y="1045" width="99.8700%" height="15" fill="rgb(210,224,50)" fg:x="119333976" fg:w="94415112189"/><text x="0.3762%" y="1055.50">_start</text></g><g><title>main_benchmark (94,537,966,453 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="99.9999%" height="15" fill="rgb(228,127,35)" fg:x="0" fg:w="94537966453"/><text x="0.2500%" y="1071.50">main_benchmark</text></g><g><title>all (94,538,028,685 samples, 100%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(245,102,45)" fg:x="0" fg:w="94538028685"/><text x="0.2500%" y="1087.50"></text></g></svg></svg>