<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="2590441577"><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::new (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="901" width="0.1333%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="911.50"></text></g><g><title>plotters::style::font::ttf::load_font_data (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="885" width="0.1333%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="869" width="0.1333%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="853" width="0.1333%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="863.50"></text></g><g><title>plotters::style::font::ttf::load_font_data::_{{closure}} (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="837" width="0.1333%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="847.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_best_match (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="821" width="0.1333%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="831.50"></text></g><g><title>font_kit::source::Source::select_best_match (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="805" width="0.1333%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="815.50"></text></g><g><title>font_kit::source::Source::select_family_by_generic_name (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="789" width="0.1333%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="799.50"></text></g><g><title>&lt;font_kit::sources::fontconfig::FontconfigSource as font_kit::source::Source&gt;::select_family_by_name (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="773" width="0.1333%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="783.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_family_by_name (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="757" width="0.1333%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="767.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_generic_font (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="741" width="0.1333%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="751.50"></text></g><g><title>font_kit::sources::fontconfig::fc::Pattern::config_substitute (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="725" width="0.1333%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="735.50"></text></g><g><title>FcConfigSubstituteWithPat (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="709" width="0.1333%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="719.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="693" width="0.1333%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="703.50"></text></g><g><title>FcConfigBuildFonts (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="677" width="0.1333%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="687.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="661" width="0.1333%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="671.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="645" width="0.1333%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="655.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="629" width="0.1333%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="639.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="613" width="0.1333%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="623.50"></text></g><g><title>__libc_open64 (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="597" width="0.1333%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="607.50"></text></g><g><title>[unknown] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="581" width="0.1333%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="591.50"></text></g><g><title>[unknown] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="565" width="0.1333%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="575.50"></text></g><g><title>[unknown] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="549" width="0.1333%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="559.50"></text></g><g><title>[unknown] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="533" width="0.1333%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="543.50"></text></g><g><title>[unknown] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="517" width="0.1333%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="527.50"></text></g><g><title>[unknown] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="501" width="0.1333%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="511.50"></text></g><g><title>[unknown] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="485" width="0.1333%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="495.50"></text></g><g><title>[unknown] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="469" width="0.1333%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="479.50"></text></g><g><title>[unknown] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="453" width="0.1333%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="463.50"></text></g><g><title>[unknown] (3,452,023 samples, 0.13%)</title><rect x="0.0000%" y="437" width="0.1333%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="3452023"/><text x="0.2500%" y="447.50"></text></g><g><title>FcConfigGetFilename (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="885" width="0.2657%" height="15" fill="rgb(209,103,24)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="895.50"></text></g><g><title>[libfontconfig.so.1.12.1] (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="869" width="0.2657%" height="15" fill="rgb(229,88,8)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="879.50"></text></g><g><title>__GI___access (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="853" width="0.2657%" height="15" fill="rgb(213,181,19)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="863.50"></text></g><g><title>[unknown] (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="837" width="0.2657%" height="15" fill="rgb(254,191,54)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="847.50"></text></g><g><title>[unknown] (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="821" width="0.2657%" height="15" fill="rgb(241,83,37)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="831.50"></text></g><g><title>[unknown] (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="805" width="0.2657%" height="15" fill="rgb(233,36,39)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="815.50"></text></g><g><title>[unknown] (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="789" width="0.2657%" height="15" fill="rgb(226,3,54)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="799.50"></text></g><g><title>[unknown] (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="773" width="0.2657%" height="15" fill="rgb(245,192,40)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="783.50"></text></g><g><title>[unknown] (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="757" width="0.2657%" height="15" fill="rgb(238,167,29)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="767.50"></text></g><g><title>[unknown] (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="741" width="0.2657%" height="15" fill="rgb(232,182,51)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="751.50"></text></g><g><title>[unknown] (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="725" width="0.2657%" height="15" fill="rgb(231,60,39)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="735.50"></text></g><g><title>[unknown] (6,882,667 samples, 0.27%)</title><rect x="0.1333%" y="709" width="0.2657%" height="15" fill="rgb(208,69,12)" fg:x="3452023" fg:w="6882667"/><text x="0.3833%" y="719.50"></text></g><g><title>[libexpat.so.1.9.1] (10,328,403 samples, 0.40%)</title><rect x="1.0636%" y="789" width="0.3987%" height="15" fill="rgb(235,93,37)" fg:x="27552137" fg:w="10328403"/><text x="1.3136%" y="799.50"></text></g><g><title>[libexpat.so.1.9.1] (3,418,797 samples, 0.13%)</title><rect x="1.3303%" y="773" width="0.1320%" height="15" fill="rgb(213,116,39)" fg:x="34461743" fg:w="3418797"/><text x="1.5803%" y="783.50"></text></g><g><title>[libexpat.so.1.9.1] (3,418,797 samples, 0.13%)</title><rect x="1.3303%" y="757" width="0.1320%" height="15" fill="rgb(222,207,29)" fg:x="34461743" fg:w="3418797"/><text x="1.5803%" y="767.50"></text></g><g><title>[libexpat.so.1.9.1] (3,418,797 samples, 0.13%)</title><rect x="1.3303%" y="741" width="0.1320%" height="15" fill="rgb(206,96,30)" fg:x="34461743" fg:w="3418797"/><text x="1.5803%" y="751.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,436,201 samples, 0.13%)</title><rect x="1.4623%" y="773" width="0.1326%" height="15" fill="rgb(218,138,4)" fg:x="37880540" fg:w="3436201"/><text x="1.7123%" y="783.50"></text></g><g><title>__GI___libc_malloc (3,436,201 samples, 0.13%)</title><rect x="1.4623%" y="757" width="0.1326%" height="15" fill="rgb(250,191,14)" fg:x="37880540" fg:w="3436201"/><text x="1.7123%" y="767.50"></text></g><g><title>_int_malloc (3,436,201 samples, 0.13%)</title><rect x="1.4623%" y="741" width="0.1326%" height="15" fill="rgb(239,60,40)" fg:x="37880540" fg:w="3436201"/><text x="1.7123%" y="751.50"></text></g><g><title>[libexpat.so.1.9.1] (20,653,362 samples, 0.80%)</title><rect x="0.9305%" y="805" width="0.7973%" height="15" fill="rgb(206,27,48)" fg:x="24103672" fg:w="20653362"/><text x="1.1805%" y="815.50"></text></g><g><title>[libfontconfig.so.1.12.1] (6,876,494 samples, 0.27%)</title><rect x="1.4623%" y="789" width="0.2655%" height="15" fill="rgb(225,35,8)" fg:x="37880540" fg:w="6876494"/><text x="1.7123%" y="799.50"></text></g><g><title>__strcmp_avx2 (3,440,293 samples, 0.13%)</title><rect x="1.5950%" y="773" width="0.1328%" height="15" fill="rgb(250,213,24)" fg:x="41316741" fg:w="3440293"/><text x="1.8450%" y="783.50"></text></g><g><title>XML_ParseBuffer (27,552,525 samples, 1.06%)</title><rect x="0.7974%" y="869" width="1.0636%" height="15" fill="rgb(247,123,22)" fg:x="20655022" fg:w="27552525"/><text x="1.0474%" y="879.50"></text></g><g><title>[libexpat.so.1.9.1] (27,552,525 samples, 1.06%)</title><rect x="0.7974%" y="853" width="1.0636%" height="15" fill="rgb(231,138,38)" fg:x="20655022" fg:w="27552525"/><text x="1.0474%" y="863.50"></text></g><g><title>[libexpat.so.1.9.1] (24,103,875 samples, 0.93%)</title><rect x="0.9305%" y="837" width="0.9305%" height="15" fill="rgb(231,145,46)" fg:x="24103672" fg:w="24103875"/><text x="1.1805%" y="847.50"></text></g><g><title>[libexpat.so.1.9.1] (24,103,875 samples, 0.93%)</title><rect x="0.9305%" y="821" width="0.9305%" height="15" fill="rgb(251,118,11)" fg:x="24103672" fg:w="24103875"/><text x="1.1805%" y="831.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,450,513 samples, 0.13%)</title><rect x="1.7278%" y="805" width="0.1332%" height="15" fill="rgb(217,147,25)" fg:x="44757034" fg:w="3450513"/><text x="1.9778%" y="815.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,450,513 samples, 0.13%)</title><rect x="1.7278%" y="789" width="0.1332%" height="15" fill="rgb(247,81,37)" fg:x="44757034" fg:w="3450513"/><text x="1.9778%" y="799.50"></text></g><g><title>[libfontconfig.so.1.12.1] (41,286,503 samples, 1.59%)</title><rect x="0.3990%" y="885" width="1.5938%" height="15" fill="rgb(209,12,38)" fg:x="10334690" fg:w="41286503"/><text x="0.6490%" y="895.50"></text></g><g><title>__libc_open64 (3,413,646 samples, 0.13%)</title><rect x="1.8610%" y="869" width="0.1318%" height="15" fill="rgb(227,1,9)" fg:x="48207547" fg:w="3413646"/><text x="2.1110%" y="879.50"></text></g><g><title>[unknown] (3,413,646 samples, 0.13%)</title><rect x="1.8610%" y="853" width="0.1318%" height="15" fill="rgb(248,47,43)" fg:x="48207547" fg:w="3413646"/><text x="2.1110%" y="863.50"></text></g><g><title>[unknown] (3,413,646 samples, 0.13%)</title><rect x="1.8610%" y="837" width="0.1318%" height="15" fill="rgb(221,10,30)" fg:x="48207547" fg:w="3413646"/><text x="2.1110%" y="847.50"></text></g><g><title>[unknown] (3,413,646 samples, 0.13%)</title><rect x="1.8610%" y="821" width="0.1318%" height="15" fill="rgb(210,229,1)" fg:x="48207547" fg:w="3413646"/><text x="2.1110%" y="831.50"></text></g><g><title>__GI___fstatat64 (3,444,891 samples, 0.13%)</title><rect x="1.9928%" y="885" width="0.1330%" height="15" fill="rgb(222,148,37)" fg:x="51621193" fg:w="3444891"/><text x="2.2428%" y="895.50"></text></g><g><title>[unknown] (3,444,891 samples, 0.13%)</title><rect x="1.9928%" y="869" width="0.1330%" height="15" fill="rgb(234,67,33)" fg:x="51621193" fg:w="3444891"/><text x="2.2428%" y="879.50"></text></g><g><title>[unknown] (3,444,891 samples, 0.13%)</title><rect x="1.9928%" y="853" width="0.1330%" height="15" fill="rgb(247,98,35)" fg:x="51621193" fg:w="3444891"/><text x="2.2428%" y="863.50"></text></g><g><title>[unknown] (3,444,891 samples, 0.13%)</title><rect x="1.9928%" y="837" width="0.1330%" height="15" fill="rgb(247,138,52)" fg:x="51621193" fg:w="3444891"/><text x="2.2428%" y="847.50"></text></g><g><title>[unknown] (3,444,891 samples, 0.13%)</title><rect x="1.9928%" y="821" width="0.1330%" height="15" fill="rgb(213,79,30)" fg:x="51621193" fg:w="3444891"/><text x="2.2428%" y="831.50"></text></g><g><title>[unknown] (3,444,891 samples, 0.13%)</title><rect x="1.9928%" y="805" width="0.1330%" height="15" fill="rgb(246,177,23)" fg:x="51621193" fg:w="3444891"/><text x="2.2428%" y="815.50"></text></g><g><title>[unknown] (3,444,891 samples, 0.13%)</title><rect x="1.9928%" y="789" width="0.1330%" height="15" fill="rgb(230,62,27)" fg:x="51621193" fg:w="3444891"/><text x="2.2428%" y="799.50"></text></g><g><title>[unknown] (3,444,891 samples, 0.13%)</title><rect x="1.9928%" y="773" width="0.1330%" height="15" fill="rgb(216,154,8)" fg:x="51621193" fg:w="3444891"/><text x="2.2428%" y="783.50"></text></g><g><title>[unknown] (3,444,891 samples, 0.13%)</title><rect x="1.9928%" y="757" width="0.1330%" height="15" fill="rgb(244,35,45)" fg:x="51621193" fg:w="3444891"/><text x="2.2428%" y="767.50"></text></g><g><title>[unknown] (3,444,891 samples, 0.13%)</title><rect x="1.9928%" y="741" width="0.1330%" height="15" fill="rgb(251,115,12)" fg:x="51621193" fg:w="3444891"/><text x="2.2428%" y="751.50"></text></g><g><title>[libfontconfig.so.1.12.1] (55,036,940 samples, 2.12%)</title><rect x="0.1333%" y="901" width="2.1246%" height="15" fill="rgb(240,54,50)" fg:x="3452023" fg:w="55036940"/><text x="0.3833%" y="911.50">[..</text></g><g><title>__readlink (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="885" width="0.1321%" height="15" fill="rgb(233,84,52)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="895.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="869" width="0.1321%" height="15" fill="rgb(207,117,47)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="879.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="853" width="0.1321%" height="15" fill="rgb(249,43,39)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="863.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="837" width="0.1321%" height="15" fill="rgb(209,38,44)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="847.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="821" width="0.1321%" height="15" fill="rgb(236,212,23)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="831.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="805" width="0.1321%" height="15" fill="rgb(242,79,21)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="815.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="789" width="0.1321%" height="15" fill="rgb(211,96,35)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="799.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="773" width="0.1321%" height="15" fill="rgb(253,215,40)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="783.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="757" width="0.1321%" height="15" fill="rgb(211,81,21)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="767.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="741" width="0.1321%" height="15" fill="rgb(208,190,38)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="751.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="725" width="0.1321%" height="15" fill="rgb(235,213,38)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="735.50"></text></g><g><title>[unknown] (3,422,879 samples, 0.13%)</title><rect x="2.1257%" y="709" width="0.1321%" height="15" fill="rgb(237,122,38)" fg:x="55066084" fg:w="3422879"/><text x="2.3757%" y="719.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="901" width="0.2272%" height="15" fill="rgb(244,218,35)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="911.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="885" width="0.2272%" height="15" fill="rgb(240,68,47)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="895.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="869" width="0.2272%" height="15" fill="rgb(210,16,53)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="879.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="853" width="0.2272%" height="15" fill="rgb(235,124,12)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="863.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="837" width="0.2272%" height="15" fill="rgb(224,169,11)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="847.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="821" width="0.2272%" height="15" fill="rgb(250,166,2)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="831.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="805" width="0.2272%" height="15" fill="rgb(242,216,29)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="815.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="789" width="0.2272%" height="15" fill="rgb(230,116,27)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="799.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="773" width="0.2272%" height="15" fill="rgb(228,99,48)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="783.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="757" width="0.2272%" height="15" fill="rgb(253,11,6)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="767.50"></text></g><g><title>[unknown] (5,884,832 samples, 0.23%)</title><rect x="2.2579%" y="741" width="0.2272%" height="15" fill="rgb(247,143,39)" fg:x="58488963" fg:w="5884832"/><text x="2.5079%" y="751.50"></text></g><g><title>[unknown] (2,408,106 samples, 0.09%)</title><rect x="2.3921%" y="725" width="0.0930%" height="15" fill="rgb(236,97,10)" fg:x="61965689" fg:w="2408106"/><text x="2.6421%" y="735.50"></text></g><g><title>[unknown] (2,408,106 samples, 0.09%)</title><rect x="2.3921%" y="709" width="0.0930%" height="15" fill="rgb(233,208,19)" fg:x="61965689" fg:w="2408106"/><text x="2.6421%" y="719.50"></text></g><g><title>[unknown] (2,408,106 samples, 0.09%)</title><rect x="2.3921%" y="693" width="0.0930%" height="15" fill="rgb(216,164,2)" fg:x="61965689" fg:w="2408106"/><text x="2.6421%" y="703.50"></text></g><g><title>plotters::chart::mesh::MeshStyle&lt;X,Y,DB&gt;::draw (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="901" width="0.1339%" height="15" fill="rgb(220,129,5)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="911.50"></text></g><g><title>plotters::chart::context::cartesian2d::draw_impl::&lt;impl plotters::chart::context::ChartContext&lt;DB,plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;&gt;&gt;::draw_mesh (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="885" width="0.1339%" height="15" fill="rgb(242,17,10)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="895.50"></text></g><g><title>plotters::chart::context::cartesian2d::draw_impl::&lt;impl plotters::chart::context::ChartContext&lt;DB,plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;&gt;&gt;::draw_axis_and_labels (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="869" width="0.1339%" height="15" fill="rgb(242,107,0)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="879.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,plotters::coord::Shift&gt;::draw_text (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="853" width="0.1339%" height="15" fill="rgb(251,28,31)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="863.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="837" width="0.1339%" height="15" fill="rgb(233,223,10)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="847.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,plotters::coord::Shift&gt;::draw_text::_{{closure}} (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="821" width="0.1339%" height="15" fill="rgb(215,21,27)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="831.50"></text></g><g><title>plotters_backend::DrawingBackend::draw_text (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="805" width="0.1339%" height="15" fill="rgb(232,23,21)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="815.50"></text></g><g><title>&lt;plotters::style::text::TextStyle as plotters_backend::text::BackendTextStyle&gt;::draw (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="789" width="0.1339%" height="15" fill="rgb(244,5,23)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="799.50"></text></g><g><title>plotters::style::font::font_desc::FontDesc::draw (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="773" width="0.1339%" height="15" fill="rgb(226,81,46)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="783.50"></text></g><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::draw (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="757" width="0.1339%" height="15" fill="rgb(247,70,30)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="767.50"></text></g><g><title>&lt;plotters::style::text::TextStyle as plotters_backend::text::BackendTextStyle&gt;::draw::_{{closure}} (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="741" width="0.1339%" height="15" fill="rgb(212,68,19)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="751.50"></text></g><g><title>plotters_backend::style::BackendColor::mix (3,467,362 samples, 0.13%)</title><rect x="2.4851%" y="725" width="0.1339%" height="15" fill="rgb(240,187,13)" fg:x="64373795" fg:w="3467362"/><text x="2.7351%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="757" width="0.1346%" height="15" fill="rgb(223,113,26)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="767.50"></text></g><g><title>plotters::style::font::ttf::FONT_SOURCE::_{{constant}}::_{{closure}} (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="741" width="0.1346%" height="15" fill="rgb(206,192,2)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="751.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="725" width="0.1346%" height="15" fill="rgb(241,108,4)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="735.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::initialize (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="709" width="0.1346%" height="15" fill="rgb(247,173,49)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="693" width="0.1346%" height="15" fill="rgb(224,114,35)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="677" width="0.1346%" height="15" fill="rgb(245,159,27)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="687.50"></text></g><g><title>plotters::style::font::ttf::FONT_SOURCE::__init (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="661" width="0.1346%" height="15" fill="rgb(245,172,44)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="671.50"></text></g><g><title>FcInitLoadConfigAndFonts (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="645" width="0.1346%" height="15" fill="rgb(236,23,11)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="655.50"></text></g><g><title>FcConfigBuildFonts (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="629" width="0.1346%" height="15" fill="rgb(205,117,38)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="639.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="613" width="0.1346%" height="15" fill="rgb(237,72,25)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="623.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="597" width="0.1346%" height="15" fill="rgb(244,70,9)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="607.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="581" width="0.1346%" height="15" fill="rgb(217,125,39)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="591.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,487,441 samples, 0.13%)</title><rect x="2.6189%" y="565" width="0.1346%" height="15" fill="rgb(235,36,10)" fg:x="67841157" fg:w="3487441"/><text x="2.8689%" y="575.50"></text></g><g><title>font_kit::source::Source::select_descriptions_in_family (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="709" width="0.1336%" height="15" fill="rgb(251,123,47)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="719.50"></text></g><g><title>font_kit::loaders::freetype::Font::from_handle (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="693" width="0.1336%" height="15" fill="rgb(221,13,13)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="703.50"></text></g><g><title>font_kit::loader::Loader::from_handle (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="677" width="0.1336%" height="15" fill="rgb(238,131,9)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="687.50"></text></g><g><title>font_kit::loader::Loader::from_path (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="661" width="0.1336%" height="15" fill="rgb(211,50,8)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="671.50"></text></g><g><title>&lt;font_kit::loaders::freetype::Font as font_kit::loader::Loader&gt;::from_file (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="645" width="0.1336%" height="15" fill="rgb(245,182,24)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="655.50"></text></g><g><title>font_kit::loaders::freetype::Font::from_file (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="629" width="0.1336%" height="15" fill="rgb(242,14,37)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="639.50"></text></g><g><title>font_kit::utils::slurp_file (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="613" width="0.1336%" height="15" fill="rgb(246,228,12)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="623.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_end (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="597" width="0.1336%" height="15" fill="rgb(213,55,15)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="607.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_to_end (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="581" width="0.1336%" height="15" fill="rgb(209,9,3)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="591.50"></text></g><g><title>std::io::default_read_to_end (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="565" width="0.1336%" height="15" fill="rgb(230,59,30)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="575.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="549" width="0.1336%" height="15" fill="rgb(209,121,21)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="559.50"></text></g><g><title>std::sys::pal::unix::fs::File::read_buf (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="533" width="0.1336%" height="15" fill="rgb(220,109,13)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="543.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="517" width="0.1336%" height="15" fill="rgb(232,18,1)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="527.50"></text></g><g><title>__GI___libc_read (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="501" width="0.1336%" height="15" fill="rgb(215,41,42)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="511.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="485" width="0.1336%" height="15" fill="rgb(224,123,36)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="495.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="469" width="0.1336%" height="15" fill="rgb(240,125,3)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="479.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="453" width="0.1336%" height="15" fill="rgb(205,98,50)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="463.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="437" width="0.1336%" height="15" fill="rgb(205,185,37)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="447.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="421" width="0.1336%" height="15" fill="rgb(238,207,15)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="431.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="405" width="0.1336%" height="15" fill="rgb(213,199,42)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="415.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="389" width="0.1336%" height="15" fill="rgb(235,201,11)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="399.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="373" width="0.1336%" height="15" fill="rgb(207,46,11)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="383.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="357" width="0.1336%" height="15" fill="rgb(241,35,35)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="367.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="341" width="0.1336%" height="15" fill="rgb(243,32,47)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="351.50"></text></g><g><title>[unknown] (3,461,997 samples, 0.13%)</title><rect x="2.7535%" y="325" width="0.1336%" height="15" fill="rgb(247,202,23)" fg:x="71328598" fg:w="3461997"/><text x="3.0035%" y="335.50"></text></g><g><title>font_kit::sources::fontconfig::fc::Pattern::config_substitute (3,461,829 samples, 0.13%)</title><rect x="2.8872%" y="645" width="0.1336%" height="15" fill="rgb(219,102,11)" fg:x="74790595" fg:w="3461829"/><text x="3.1372%" y="655.50"></text></g><g><title>FcConfigSubstituteWithPat (3,461,829 samples, 0.13%)</title><rect x="2.8872%" y="629" width="0.1336%" height="15" fill="rgb(243,110,44)" fg:x="74790595" fg:w="3461829"/><text x="3.1372%" y="639.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,461,829 samples, 0.13%)</title><rect x="2.8872%" y="613" width="0.1336%" height="15" fill="rgb(222,74,54)" fg:x="74790595" fg:w="3461829"/><text x="3.1372%" y="623.50"></text></g><g><title>FcConfigBuildFonts (3,461,829 samples, 0.13%)</title><rect x="2.8872%" y="597" width="0.1336%" height="15" fill="rgb(216,99,12)" fg:x="74790595" fg:w="3461829"/><text x="3.1372%" y="607.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,461,829 samples, 0.13%)</title><rect x="2.8872%" y="581" width="0.1336%" height="15" fill="rgb(226,22,26)" fg:x="74790595" fg:w="3461829"/><text x="3.1372%" y="591.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,461,829 samples, 0.13%)</title><rect x="2.8872%" y="565" width="0.1336%" height="15" fill="rgb(217,163,10)" fg:x="74790595" fg:w="3461829"/><text x="3.1372%" y="575.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,461,829 samples, 0.13%)</title><rect x="2.8872%" y="549" width="0.1336%" height="15" fill="rgb(213,25,53)" fg:x="74790595" fg:w="3461829"/><text x="3.1372%" y="559.50"></text></g><g><title>&lt;T as plotters::style::font::font_desc::IntoFont&gt;::into_font (13,874,630 samples, 0.54%)</title><rect x="2.6189%" y="885" width="0.5356%" height="15" fill="rgb(252,105,26)" fg:x="67841157" fg:w="13874630"/><text x="2.8689%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13,874,630 samples, 0.54%)</title><rect x="2.6189%" y="869" width="0.5356%" height="15" fill="rgb(220,39,43)" fg:x="67841157" fg:w="13874630"/><text x="2.8689%" y="879.50"></text></g><g><title>&lt;plotters::style::font::font_desc::FontDesc as core::convert::From&lt;(&amp;str,T)&gt;&gt;::from (13,874,630 samples, 0.54%)</title><rect x="2.6189%" y="853" width="0.5356%" height="15" fill="rgb(229,68,48)" fg:x="67841157" fg:w="13874630"/><text x="2.8689%" y="863.50"></text></g><g><title>plotters::style::font::font_desc::FontDesc::new (13,874,630 samples, 0.54%)</title><rect x="2.6189%" y="837" width="0.5356%" height="15" fill="rgb(252,8,32)" fg:x="67841157" fg:w="13874630"/><text x="2.8689%" y="847.50"></text></g><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::new (13,874,630 samples, 0.54%)</title><rect x="2.6189%" y="821" width="0.5356%" height="15" fill="rgb(223,20,43)" fg:x="67841157" fg:w="13874630"/><text x="2.8689%" y="831.50"></text></g><g><title>plotters::style::font::ttf::load_font_data (13,874,630 samples, 0.54%)</title><rect x="2.6189%" y="805" width="0.5356%" height="15" fill="rgb(229,81,49)" fg:x="67841157" fg:w="13874630"/><text x="2.8689%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,874,630 samples, 0.54%)</title><rect x="2.6189%" y="789" width="0.5356%" height="15" fill="rgb(236,28,36)" fg:x="67841157" fg:w="13874630"/><text x="2.8689%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,874,630 samples, 0.54%)</title><rect x="2.6189%" y="773" width="0.5356%" height="15" fill="rgb(249,185,26)" fg:x="67841157" fg:w="13874630"/><text x="2.8689%" y="783.50"></text></g><g><title>plotters::style::font::ttf::load_font_data::_{{closure}} (10,387,189 samples, 0.40%)</title><rect x="2.7535%" y="757" width="0.4010%" height="15" fill="rgb(249,174,33)" fg:x="71328598" fg:w="10387189"/><text x="3.0035%" y="767.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_best_match (10,387,189 samples, 0.40%)</title><rect x="2.7535%" y="741" width="0.4010%" height="15" fill="rgb(233,201,37)" fg:x="71328598" fg:w="10387189"/><text x="3.0035%" y="751.50"></text></g><g><title>font_kit::source::Source::select_best_match (10,387,189 samples, 0.40%)</title><rect x="2.7535%" y="725" width="0.4010%" height="15" fill="rgb(221,78,26)" fg:x="71328598" fg:w="10387189"/><text x="3.0035%" y="735.50"></text></g><g><title>font_kit::source::Source::select_family_by_generic_name (6,925,192 samples, 0.27%)</title><rect x="2.8872%" y="709" width="0.2673%" height="15" fill="rgb(250,127,30)" fg:x="74790595" fg:w="6925192"/><text x="3.1372%" y="719.50"></text></g><g><title>&lt;font_kit::sources::fontconfig::FontconfigSource as font_kit::source::Source&gt;::select_family_by_name (6,925,192 samples, 0.27%)</title><rect x="2.8872%" y="693" width="0.2673%" height="15" fill="rgb(230,49,44)" fg:x="74790595" fg:w="6925192"/><text x="3.1372%" y="703.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_family_by_name (6,925,192 samples, 0.27%)</title><rect x="2.8872%" y="677" width="0.2673%" height="15" fill="rgb(229,67,23)" fg:x="74790595" fg:w="6925192"/><text x="3.1372%" y="687.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_generic_font (6,925,192 samples, 0.27%)</title><rect x="2.8872%" y="661" width="0.2673%" height="15" fill="rgb(249,83,47)" fg:x="74790595" fg:w="6925192"/><text x="3.1372%" y="671.50"></text></g><g><title>font_kit::sources::fontconfig::fc::Pattern::sorted (3,463,363 samples, 0.13%)</title><rect x="3.0208%" y="645" width="0.1337%" height="15" fill="rgb(215,43,3)" fg:x="78252424" fg:w="3463363"/><text x="3.2708%" y="655.50"></text></g><g><title>FcFontSort (3,463,363 samples, 0.13%)</title><rect x="3.0208%" y="629" width="0.1337%" height="15" fill="rgb(238,154,13)" fg:x="78252424" fg:w="3463363"/><text x="3.2708%" y="639.50"></text></g><g><title>FcFontSetSort (3,463,363 samples, 0.13%)</title><rect x="3.0208%" y="613" width="0.1337%" height="15" fill="rgb(219,56,2)" fg:x="78252424" fg:w="3463363"/><text x="3.2708%" y="623.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,463,363 samples, 0.13%)</title><rect x="3.0208%" y="597" width="0.1337%" height="15" fill="rgb(233,0,4)" fg:x="78252424" fg:w="3463363"/><text x="3.2708%" y="607.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,463,363 samples, 0.13%)</title><rect x="3.0208%" y="581" width="0.1337%" height="15" fill="rgb(235,30,7)" fg:x="78252424" fg:w="3463363"/><text x="3.2708%" y="591.50"></text></g><g><title>plotters::chart::builder::ChartBuilder&lt;DB&gt;::build_cartesian_2d (3,462,374 samples, 0.13%)</title><rect x="3.1545%" y="885" width="0.1337%" height="15" fill="rgb(250,79,13)" fg:x="81715787" fg:w="3462374"/><text x="3.4045%" y="895.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,plotters::coord::Shift&gt;::titled (3,462,374 samples, 0.13%)</title><rect x="3.1545%" y="869" width="0.1337%" height="15" fill="rgb(211,146,34)" fg:x="81715787" fg:w="3462374"/><text x="3.4045%" y="879.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (3,462,374 samples, 0.13%)</title><rect x="3.1545%" y="853" width="0.1337%" height="15" fill="rgb(228,22,38)" fg:x="81715787" fg:w="3462374"/><text x="3.4045%" y="863.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,plotters::coord::Shift&gt;::titled::_{{closure}} (3,462,374 samples, 0.13%)</title><rect x="3.1545%" y="837" width="0.1337%" height="15" fill="rgb(235,168,5)" fg:x="81715787" fg:w="3462374"/><text x="3.4045%" y="847.50"></text></g><g><title>plotters_backend::DrawingBackend::draw_text (3,462,374 samples, 0.13%)</title><rect x="3.1545%" y="821" width="0.1337%" height="15" fill="rgb(221,155,16)" fg:x="81715787" fg:w="3462374"/><text x="3.4045%" y="831.50"></text></g><g><title>&lt;plotters::style::text::TextStyle as plotters_backend::text::BackendTextStyle&gt;::draw (3,462,374 samples, 0.13%)</title><rect x="3.1545%" y="805" width="0.1337%" height="15" fill="rgb(215,215,53)" fg:x="81715787" fg:w="3462374"/><text x="3.4045%" y="815.50"></text></g><g><title>plotters::style::font::font_desc::FontDesc::draw (3,462,374 samples, 0.13%)</title><rect x="3.1545%" y="789" width="0.1337%" height="15" fill="rgb(223,4,10)" fg:x="81715787" fg:w="3462374"/><text x="3.4045%" y="799.50"></text></g><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::draw (3,462,374 samples, 0.13%)</title><rect x="3.1545%" y="773" width="0.1337%" height="15" fill="rgb(234,103,6)" fg:x="81715787" fg:w="3462374"/><text x="3.4045%" y="783.50"></text></g><g><title>&lt;plotters::style::text::TextStyle as plotters_backend::text::BackendTextStyle&gt;::draw::_{{closure}} (3,462,374 samples, 0.13%)</title><rect x="3.1545%" y="757" width="0.1337%" height="15" fill="rgb(227,97,0)" fg:x="81715787" fg:w="3462374"/><text x="3.4045%" y="767.50"></text></g><g><title>plotters_backend::style::BackendColor::mix (3,462,374 samples, 0.13%)</title><rect x="3.1545%" y="741" width="0.1337%" height="15" fill="rgb(234,150,53)" fg:x="81715787" fg:w="3462374"/><text x="3.4045%" y="751.50"></text></g><g><title>[unknown] (92,120,567 samples, 3.56%)</title><rect x="0.0000%" y="917" width="3.5562%" height="15" fill="rgb(228,201,54)" fg:x="0" fg:w="92120567"/><text x="0.2500%" y="927.50">[unk..</text></g><g><title>rkl::plot::plot_comparision::plot_comparison (24,279,410 samples, 0.94%)</title><rect x="2.6189%" y="901" width="0.9373%" height="15" fill="rgb(222,22,37)" fg:x="67841157" fg:w="24279410"/><text x="2.8689%" y="911.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="885" width="0.2680%" height="15" fill="rgb(237,53,32)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="895.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="869" width="0.2680%" height="15" fill="rgb(233,25,53)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="879.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present::_{{closure}} (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="853" width="0.2680%" height="15" fill="rgb(210,40,34)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="863.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::present (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="837" width="0.2680%" height="15" fill="rgb(241,220,44)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="847.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="821" width="0.2680%" height="15" fill="rgb(235,28,35)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="831.50"></text></g><g><title>image::dynimage::save_buffer (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="805" width="0.2680%" height="15" fill="rgb(210,56,17)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="815.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="789" width="0.2680%" height="15" fill="rgb(224,130,29)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="799.50"></text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="773" width="0.2680%" height="15" fill="rgb(235,212,8)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="783.50"></text></g><g><title>image::io::free_functions::write_buffer_impl (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="757" width="0.2680%" height="15" fill="rgb(223,33,50)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="767.50"></text></g><g><title>&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="741" width="0.2680%" height="15" fill="rgb(219,149,13)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="751.50"></text></g><g><title>image::codecs::png::PngEncoder&lt;W&gt;::encode_inner (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="725" width="0.2680%" height="15" fill="rgb(250,156,29)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="735.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_image_data (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="709" width="0.2680%" height="15" fill="rgb(216,193,19)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="719.50"></text></g><g><title>png::filter::filter (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="693" width="0.2680%" height="15" fill="rgb(216,135,14)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="703.50"></text></g><g><title>png::filter::filter_internal (6,942,406 samples, 0.27%)</title><rect x="3.2882%" y="677" width="0.2680%" height="15" fill="rgb(241,47,5)" fg:x="85178161" fg:w="6942406"/><text x="3.5382%" y="687.50"></text></g><g><title>png::filter::filter_paeth (3,470,711 samples, 0.13%)</title><rect x="3.4222%" y="661" width="0.1340%" height="15" fill="rgb(233,42,35)" fg:x="88649856" fg:w="3470711"/><text x="3.6722%" y="671.50"></text></g><g><title>_int_free_merge_chunk (3,642,614 samples, 0.14%)</title><rect x="3.5562%" y="917" width="0.1406%" height="15" fill="rgb(231,13,6)" fg:x="92120567" fg:w="3642614"/><text x="3.8062%" y="927.50"></text></g><g><title>unlink_chunk (3,642,614 samples, 0.14%)</title><rect x="3.5562%" y="901" width="0.1406%" height="15" fill="rgb(207,181,40)" fg:x="92120567" fg:w="3642614"/><text x="3.8062%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,923,800 samples, 0.27%)</title><rect x="3.6968%" y="437" width="0.2673%" height="15" fill="rgb(254,173,49)" fg:x="95763181" fg:w="6923800"/><text x="3.9468%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,923,800 samples, 0.27%)</title><rect x="3.6968%" y="421" width="0.2673%" height="15" fill="rgb(221,1,38)" fg:x="95763181" fg:w="6923800"/><text x="3.9468%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (6,923,800 samples, 0.27%)</title><rect x="3.6968%" y="405" width="0.2673%" height="15" fill="rgb(206,124,46)" fg:x="95763181" fg:w="6923800"/><text x="3.9468%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,923,800 samples, 0.27%)</title><rect x="3.6968%" y="389" width="0.2673%" height="15" fill="rgb(249,21,11)" fg:x="95763181" fg:w="6923800"/><text x="3.9468%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6,923,800 samples, 0.27%)</title><rect x="3.6968%" y="373" width="0.2673%" height="15" fill="rgb(222,201,40)" fg:x="95763181" fg:w="6923800"/><text x="3.9468%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,923,800 samples, 0.27%)</title><rect x="3.6968%" y="357" width="0.2673%" height="15" fill="rgb(235,61,29)" fg:x="95763181" fg:w="6923800"/><text x="3.9468%" y="367.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6,923,800 samples, 0.27%)</title><rect x="3.6968%" y="341" width="0.2673%" height="15" fill="rgb(219,207,3)" fg:x="95763181" fg:w="6923800"/><text x="3.9468%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,818,335 samples, 0.26%)</title><rect x="3.9641%" y="213" width="0.2632%" height="15" fill="rgb(222,56,46)" fg:x="102686981" fg:w="6818335"/><text x="4.2141%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,818,335 samples, 0.26%)</title><rect x="3.9641%" y="197" width="0.2632%" height="15" fill="rgb(239,76,54)" fg:x="102686981" fg:w="6818335"/><text x="4.2141%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,818,335 samples, 0.26%)</title><rect x="3.9641%" y="181" width="0.2632%" height="15" fill="rgb(231,124,27)" fg:x="102686981" fg:w="6818335"/><text x="4.2141%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,818,335 samples, 0.26%)</title><rect x="3.9641%" y="165" width="0.2632%" height="15" fill="rgb(249,195,6)" fg:x="102686981" fg:w="6818335"/><text x="4.2141%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,818,335 samples, 0.26%)</title><rect x="3.9641%" y="149" width="0.2632%" height="15" fill="rgb(237,174,47)" fg:x="102686981" fg:w="6818335"/><text x="4.2141%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,818,335 samples, 0.26%)</title><rect x="3.9641%" y="133" width="0.2632%" height="15" fill="rgb(206,201,31)" fg:x="102686981" fg:w="6818335"/><text x="4.2141%" y="143.50"></text></g><g><title>alloc::alloc::alloc (6,818,335 samples, 0.26%)</title><rect x="3.9641%" y="117" width="0.2632%" height="15" fill="rgb(231,57,52)" fg:x="102686981" fg:w="6818335"/><text x="4.2141%" y="127.50"></text></g><g><title>__GI___libc_malloc (6,818,335 samples, 0.26%)</title><rect x="3.9641%" y="101" width="0.2632%" height="15" fill="rgb(248,177,22)" fg:x="102686981" fg:w="6818335"/><text x="4.2141%" y="111.50"></text></g><g><title>_int_malloc (3,379,645 samples, 0.13%)</title><rect x="4.0968%" y="85" width="0.1305%" height="15" fill="rgb(215,211,37)" fg:x="106125671" fg:w="3379645"/><text x="4.3468%" y="95.50"></text></g><g><title>unlink_chunk (3,379,645 samples, 0.13%)</title><rect x="4.0968%" y="69" width="0.1305%" height="15" fill="rgb(241,128,51)" fg:x="106125671" fg:w="3379645"/><text x="4.3468%" y="79.50"></text></g><g><title>&lt;rkl::models::Sequential&lt;T&gt; as core::clone::Clone&gt;::clone (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="437" width="0.5284%" height="15" fill="rgb(227,165,31)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="421" width="0.5284%" height="15" fill="rgb(228,167,24)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="405" width="0.5284%" height="15" fill="rgb(228,143,12)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="389" width="0.5284%" height="15" fill="rgb(249,149,8)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="373" width="0.5284%" height="15" fill="rgb(243,35,44)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="383.50"></text></g><g><title>&lt;rkl::core::layers::Dense as core::clone::Clone&gt;::clone (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="357" width="0.5284%" height="15" fill="rgb(246,89,9)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="367.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="341" width="0.5284%" height="15" fill="rgb(233,213,13)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="351.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="325" width="0.5284%" height="15" fill="rgb(233,141,41)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="335.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="309" width="0.5284%" height="15" fill="rgb(239,167,4)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="293" width="0.5284%" height="15" fill="rgb(209,217,16)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="277" width="0.5284%" height="15" fill="rgb(219,88,35)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="261" width="0.5284%" height="15" fill="rgb(220,193,23)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="245" width="0.5284%" height="15" fill="rgb(230,90,52)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,688,676 samples, 0.53%)</title><rect x="3.9641%" y="229" width="0.5284%" height="15" fill="rgb(252,106,19)" fg:x="102686981" fg:w="13688676"/><text x="4.2141%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6,870,341 samples, 0.27%)</title><rect x="4.2273%" y="213" width="0.2652%" height="15" fill="rgb(206,74,20)" fg:x="109505316" fg:w="6870341"/><text x="4.4773%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,870,341 samples, 0.27%)</title><rect x="4.2273%" y="197" width="0.2652%" height="15" fill="rgb(230,138,44)" fg:x="109505316" fg:w="6870341"/><text x="4.4773%" y="207.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6,870,341 samples, 0.27%)</title><rect x="4.2273%" y="181" width="0.2652%" height="15" fill="rgb(235,182,43)" fg:x="109505316" fg:w="6870341"/><text x="4.4773%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,456,655 samples, 0.13%)</title><rect x="4.4925%" y="373" width="0.1334%" height="15" fill="rgb(242,16,51)" fg:x="116375657" fg:w="3456655"/><text x="4.7425%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,456,655 samples, 0.13%)</title><rect x="4.4925%" y="357" width="0.1334%" height="15" fill="rgb(248,9,4)" fg:x="116375657" fg:w="3456655"/><text x="4.7425%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,456,655 samples, 0.13%)</title><rect x="4.4925%" y="341" width="0.1334%" height="15" fill="rgb(210,31,22)" fg:x="116375657" fg:w="3456655"/><text x="4.7425%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,456,655 samples, 0.13%)</title><rect x="4.4925%" y="325" width="0.1334%" height="15" fill="rgb(239,54,39)" fg:x="116375657" fg:w="3456655"/><text x="4.7425%" y="335.50"></text></g><g><title>alloc::raw_vec::layout_array (3,456,655 samples, 0.13%)</title><rect x="4.4925%" y="309" width="0.1334%" height="15" fill="rgb(230,99,41)" fg:x="116375657" fg:w="3456655"/><text x="4.7425%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3,456,655 samples, 0.13%)</title><rect x="4.4925%" y="293" width="0.1334%" height="15" fill="rgb(253,106,12)" fg:x="116375657" fg:w="3456655"/><text x="4.7425%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6,942,916 samples, 0.27%)</title><rect x="4.4925%" y="437" width="0.2680%" height="15" fill="rgb(213,46,41)" fg:x="116375657" fg:w="6942916"/><text x="4.7425%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,942,916 samples, 0.27%)</title><rect x="4.4925%" y="421" width="0.2680%" height="15" fill="rgb(215,133,35)" fg:x="116375657" fg:w="6942916"/><text x="4.7425%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (6,942,916 samples, 0.27%)</title><rect x="4.4925%" y="405" width="0.2680%" height="15" fill="rgb(213,28,5)" fg:x="116375657" fg:w="6942916"/><text x="4.7425%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,942,916 samples, 0.27%)</title><rect x="4.4925%" y="389" width="0.2680%" height="15" fill="rgb(215,77,49)" fg:x="116375657" fg:w="6942916"/><text x="4.7425%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,486,261 samples, 0.13%)</title><rect x="4.6259%" y="373" width="0.1346%" height="15" fill="rgb(248,100,22)" fg:x="119832312" fg:w="3486261"/><text x="4.8759%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,486,261 samples, 0.13%)</title><rect x="4.6259%" y="357" width="0.1346%" height="15" fill="rgb(208,67,9)" fg:x="119832312" fg:w="3486261"/><text x="4.8759%" y="367.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3,486,261 samples, 0.13%)</title><rect x="4.6259%" y="341" width="0.1346%" height="15" fill="rgb(219,133,21)" fg:x="119832312" fg:w="3486261"/><text x="4.8759%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;&gt; (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="437" width="0.3980%" height="15" fill="rgb(246,46,29)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rkl::core::layers::Dense&gt;&gt; (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="421" width="0.3980%" height="15" fill="rgb(246,185,52)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="405" width="0.3980%" height="15" fill="rgb(252,136,11)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rkl::core::layers::Dense]&gt; (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="389" width="0.3980%" height="15" fill="rgb(219,138,53)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;rkl::core::layers::Dense&gt; (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="373" width="0.3980%" height="15" fill="rgb(211,51,23)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="357" width="0.3980%" height="15" fill="rgb(247,221,28)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="341" width="0.3980%" height="15" fill="rgb(251,222,45)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="351.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="325" width="0.3980%" height="15" fill="rgb(217,162,53)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="309" width="0.3980%" height="15" fill="rgb(229,93,14)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="293" width="0.3980%" height="15" fill="rgb(209,67,49)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="277" width="0.3980%" height="15" fill="rgb(213,87,29)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="261" width="0.3980%" height="15" fill="rgb(205,151,52)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="245" width="0.3980%" height="15" fill="rgb(253,215,39)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="229" width="0.3980%" height="15" fill="rgb(221,220,41)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="239.50"></text></g><g><title>__GI___libc_free (10,309,482 samples, 0.40%)</title><rect x="4.7605%" y="213" width="0.3980%" height="15" fill="rgb(218,133,21)" fg:x="123318573" fg:w="10309482"/><text x="5.0105%" y="223.50"></text></g><g><title>_int_free (6,865,999 samples, 0.27%)</title><rect x="4.8935%" y="197" width="0.2651%" height="15" fill="rgb(221,193,43)" fg:x="126762056" fg:w="6865999"/><text x="5.1435%" y="207.50"></text></g><g><title>__GI___libc_malloc (3,365,491 samples, 0.13%)</title><rect x="5.1585%" y="197" width="0.1299%" height="15" fill="rgb(240,128,52)" fg:x="133628055" fg:w="3365491"/><text x="5.4085%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,813,822 samples, 0.26%)</title><rect x="5.1585%" y="245" width="0.2630%" height="15" fill="rgb(253,114,12)" fg:x="133628055" fg:w="6813822"/><text x="5.4085%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,813,822 samples, 0.26%)</title><rect x="5.1585%" y="229" width="0.2630%" height="15" fill="rgb(215,223,47)" fg:x="133628055" fg:w="6813822"/><text x="5.4085%" y="239.50"></text></g><g><title>alloc::alloc::alloc (6,813,822 samples, 0.26%)</title><rect x="5.1585%" y="213" width="0.2630%" height="15" fill="rgb(248,225,23)" fg:x="133628055" fg:w="6813822"/><text x="5.4085%" y="223.50"></text></g><g><title>__rust_alloc (3,448,331 samples, 0.13%)</title><rect x="5.2884%" y="197" width="0.1331%" height="15" fill="rgb(250,108,0)" fg:x="136993546" fg:w="3448331"/><text x="5.5384%" y="207.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="437" width="0.5290%" height="15" fill="rgb(228,208,7)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="447.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="421" width="0.5290%" height="15" fill="rgb(244,45,10)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="431.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="405" width="0.5290%" height="15" fill="rgb(207,125,25)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="389" width="0.5290%" height="15" fill="rgb(210,195,18)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="373" width="0.5290%" height="15" fill="rgb(249,80,12)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="357" width="0.5290%" height="15" fill="rgb(221,65,9)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="341" width="0.5290%" height="15" fill="rgb(235,49,36)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="325" width="0.5290%" height="15" fill="rgb(225,32,20)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="309" width="0.5290%" height="15" fill="rgb(215,141,46)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="293" width="0.5290%" height="15" fill="rgb(250,160,47)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="277" width="0.5290%" height="15" fill="rgb(216,222,40)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (13,703,890 samples, 0.53%)</title><rect x="5.1585%" y="261" width="0.5290%" height="15" fill="rgb(234,217,39)" fg:x="133628055" fg:w="13703890"/><text x="5.4085%" y="271.50"></text></g><g><title>alloc::raw_vec::layout_array (6,890,068 samples, 0.27%)</title><rect x="5.4215%" y="245" width="0.2660%" height="15" fill="rgb(207,178,40)" fg:x="140441877" fg:w="6890068"/><text x="5.6715%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::repeat (6,890,068 samples, 0.27%)</title><rect x="5.4215%" y="229" width="0.2660%" height="15" fill="rgb(221,136,13)" fg:x="140441877" fg:w="6890068"/><text x="5.6715%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (6,890,068 samples, 0.27%)</title><rect x="5.4215%" y="213" width="0.2660%" height="15" fill="rgb(249,199,10)" fg:x="140441877" fg:w="6890068"/><text x="5.6715%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (6,890,068 samples, 0.27%)</title><rect x="5.4215%" y="197" width="0.2660%" height="15" fill="rgb(249,222,13)" fg:x="140441877" fg:w="6890068"/><text x="5.6715%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (6,890,068 samples, 0.27%)</title><rect x="5.4215%" y="181" width="0.2660%" height="15" fill="rgb(244,185,38)" fg:x="140441877" fg:w="6890068"/><text x="5.6715%" y="191.50"></text></g><g><title>[unknown] (3,444,288 samples, 0.13%)</title><rect x="5.5546%" y="165" width="0.1330%" height="15" fill="rgb(236,202,9)" fg:x="143887657" fg:w="3444288"/><text x="5.8046%" y="175.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign (3,449,779 samples, 0.13%)</title><rect x="5.6875%" y="437" width="0.1332%" height="15" fill="rgb(250,229,37)" fg:x="147331945" fg:w="3449779"/><text x="5.9375%" y="447.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (3,449,779 samples, 0.13%)</title><rect x="5.6875%" y="421" width="0.1332%" height="15" fill="rgb(206,174,23)" fg:x="147331945" fg:w="3449779"/><text x="5.9375%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,449,779 samples, 0.13%)</title><rect x="5.6875%" y="405" width="0.1332%" height="15" fill="rgb(211,33,43)" fg:x="147331945" fg:w="3449779"/><text x="5.9375%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3,449,779 samples, 0.13%)</title><rect x="5.6875%" y="389" width="0.1332%" height="15" fill="rgb(245,58,50)" fg:x="147331945" fg:w="3449779"/><text x="5.9375%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (3,454,228 samples, 0.13%)</title><rect x="5.8207%" y="421" width="0.1333%" height="15" fill="rgb(244,68,36)" fg:x="150781724" fg:w="3454228"/><text x="6.0707%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (3,454,228 samples, 0.13%)</title><rect x="5.8207%" y="405" width="0.1333%" height="15" fill="rgb(232,229,15)" fg:x="150781724" fg:w="3454228"/><text x="6.0707%" y="415.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3,454,228 samples, 0.13%)</title><rect x="5.8207%" y="389" width="0.1333%" height="15" fill="rgb(254,30,23)" fg:x="150781724" fg:w="3454228"/><text x="6.0707%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (3,454,228 samples, 0.13%)</title><rect x="5.8207%" y="373" width="0.1333%" height="15" fill="rgb(235,160,14)" fg:x="150781724" fg:w="3454228"/><text x="6.0707%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (3,454,228 samples, 0.13%)</title><rect x="5.8207%" y="357" width="0.1333%" height="15" fill="rgb(212,155,44)" fg:x="150781724" fg:w="3454228"/><text x="6.0707%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,454,228 samples, 0.13%)</title><rect x="5.8207%" y="341" width="0.1333%" height="15" fill="rgb(226,2,50)" fg:x="150781724" fg:w="3454228"/><text x="6.0707%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,454,228 samples, 0.13%)</title><rect x="5.8207%" y="325" width="0.1333%" height="15" fill="rgb(234,177,6)" fg:x="150781724" fg:w="3454228"/><text x="6.0707%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,454,228 samples, 0.13%)</title><rect x="5.8207%" y="309" width="0.1333%" height="15" fill="rgb(217,24,9)" fg:x="150781724" fg:w="3454228"/><text x="6.0707%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (3,454,228 samples, 0.13%)</title><rect x="5.8207%" y="293" width="0.1333%" height="15" fill="rgb(220,13,46)" fg:x="150781724" fg:w="3454228"/><text x="6.0707%" y="303.50"></text></g><g><title>__GI___libc_free (3,454,228 samples, 0.13%)</title><rect x="5.8207%" y="277" width="0.1333%" height="15" fill="rgb(239,221,27)" fg:x="150781724" fg:w="3454228"/><text x="6.0707%" y="287.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Sub&lt;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::sub (10,315,436 samples, 0.40%)</title><rect x="5.8207%" y="437" width="0.3982%" height="15" fill="rgb(222,198,25)" fg:x="150781724" fg:w="10315436"/><text x="6.0707%" y="447.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Sub&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::sub (6,861,208 samples, 0.26%)</title><rect x="5.9540%" y="421" width="0.2649%" height="15" fill="rgb(211,99,13)" fg:x="154235952" fg:w="6861208"/><text x="6.2040%" y="431.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (6,861,208 samples, 0.26%)</title><rect x="5.9540%" y="405" width="0.2649%" height="15" fill="rgb(232,111,31)" fg:x="154235952" fg:w="6861208"/><text x="6.2040%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,861,208 samples, 0.26%)</title><rect x="5.9540%" y="389" width="0.2649%" height="15" fill="rgb(245,82,37)" fg:x="154235952" fg:w="6861208"/><text x="6.2040%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (6,861,208 samples, 0.26%)</title><rect x="5.9540%" y="373" width="0.2649%" height="15" fill="rgb(227,149,46)" fg:x="154235952" fg:w="6861208"/><text x="6.2040%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,437,892 samples, 0.13%)</title><rect x="6.3522%" y="405" width="0.1327%" height="15" fill="rgb(218,36,50)" fg:x="164549181" fg:w="3437892"/><text x="6.6022%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13,875,988 samples, 0.54%)</title><rect x="6.4849%" y="277" width="0.5357%" height="15" fill="rgb(226,80,48)" fg:x="167987073" fg:w="13875988"/><text x="6.7349%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13,875,988 samples, 0.54%)</title><rect x="6.4849%" y="261" width="0.5357%" height="15" fill="rgb(238,224,15)" fg:x="167987073" fg:w="13875988"/><text x="6.7349%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (13,875,988 samples, 0.54%)</title><rect x="6.4849%" y="245" width="0.5357%" height="15" fill="rgb(241,136,10)" fg:x="167987073" fg:w="13875988"/><text x="6.7349%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (13,875,988 samples, 0.54%)</title><rect x="6.4849%" y="229" width="0.5357%" height="15" fill="rgb(208,32,45)" fg:x="167987073" fg:w="13875988"/><text x="6.7349%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,875,988 samples, 0.54%)</title><rect x="6.4849%" y="213" width="0.5357%" height="15" fill="rgb(207,135,9)" fg:x="167987073" fg:w="13875988"/><text x="6.7349%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,875,988 samples, 0.54%)</title><rect x="6.4849%" y="197" width="0.5357%" height="15" fill="rgb(206,86,44)" fg:x="167987073" fg:w="13875988"/><text x="6.7349%" y="207.50"></text></g><g><title>alloc::alloc::alloc (13,875,988 samples, 0.54%)</title><rect x="6.4849%" y="181" width="0.5357%" height="15" fill="rgb(245,177,15)" fg:x="167987073" fg:w="13875988"/><text x="6.7349%" y="191.50"></text></g><g><title>__GI___libc_malloc (13,875,988 samples, 0.54%)</title><rect x="6.4849%" y="165" width="0.5357%" height="15" fill="rgb(206,64,50)" fg:x="167987073" fg:w="13875988"/><text x="6.7349%" y="175.50"></text></g><g><title>_int_malloc (13,875,988 samples, 0.54%)</title><rect x="6.4849%" y="149" width="0.5357%" height="15" fill="rgb(234,36,40)" fg:x="167987073" fg:w="13875988"/><text x="6.7349%" y="159.50"></text></g><g><title>unlink_chunk (3,452,263 samples, 0.13%)</title><rect x="6.8873%" y="133" width="0.1333%" height="15" fill="rgb(213,64,8)" fg:x="178410798" fg:w="3452263"/><text x="7.1373%" y="143.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (55,070,047 samples, 2.13%)</title><rect x="6.4849%" y="405" width="2.1259%" height="15" fill="rgb(210,75,36)" fg:x="167987073" fg:w="55070047"/><text x="6.7349%" y="415.50">n..</text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (55,070,047 samples, 2.13%)</title><rect x="6.4849%" y="389" width="2.1259%" height="15" fill="rgb(229,88,21)" fg:x="167987073" fg:w="55070047"/><text x="6.7349%" y="399.50">&lt;..</text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (55,070,047 samples, 2.13%)</title><rect x="6.4849%" y="373" width="2.1259%" height="15" fill="rgb(252,204,47)" fg:x="167987073" fg:w="55070047"/><text x="6.7349%" y="383.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (55,070,047 samples, 2.13%)</title><rect x="6.4849%" y="357" width="2.1259%" height="15" fill="rgb(208,77,27)" fg:x="167987073" fg:w="55070047"/><text x="6.7349%" y="367.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (55,070,047 samples, 2.13%)</title><rect x="6.4849%" y="341" width="2.1259%" height="15" fill="rgb(221,76,26)" fg:x="167987073" fg:w="55070047"/><text x="6.7349%" y="351.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (55,070,047 samples, 2.13%)</title><rect x="6.4849%" y="325" width="2.1259%" height="15" fill="rgb(225,139,18)" fg:x="167987073" fg:w="55070047"/><text x="6.7349%" y="335.50">a..</text></g><g><title>alloc::slice::hack::to_vec (55,070,047 samples, 2.13%)</title><rect x="6.4849%" y="309" width="2.1259%" height="15" fill="rgb(230,137,11)" fg:x="167987073" fg:w="55070047"/><text x="6.7349%" y="319.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (55,070,047 samples, 2.13%)</title><rect x="6.4849%" y="293" width="2.1259%" height="15" fill="rgb(212,28,1)" fg:x="167987073" fg:w="55070047"/><text x="6.7349%" y="303.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (41,194,059 samples, 1.59%)</title><rect x="7.0205%" y="277" width="1.5902%" height="15" fill="rgb(248,164,17)" fg:x="181863061" fg:w="41194059"/><text x="7.2705%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41,194,059 samples, 1.59%)</title><rect x="7.0205%" y="261" width="1.5902%" height="15" fill="rgb(222,171,42)" fg:x="181863061" fg:w="41194059"/><text x="7.2705%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (41,194,059 samples, 1.59%)</title><rect x="7.0205%" y="245" width="1.5902%" height="15" fill="rgb(243,84,45)" fg:x="181863061" fg:w="41194059"/><text x="7.2705%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,456,297 samples, 0.13%)</title><rect x="8.6108%" y="389" width="0.1334%" height="15" fill="rgb(252,49,23)" fg:x="223057120" fg:w="3456297"/><text x="8.8608%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (3,456,297 samples, 0.13%)</title><rect x="8.6108%" y="373" width="0.1334%" height="15" fill="rgb(215,19,7)" fg:x="223057120" fg:w="3456297"/><text x="8.8608%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,456,297 samples, 0.13%)</title><rect x="8.6108%" y="357" width="0.1334%" height="15" fill="rgb(238,81,41)" fg:x="223057120" fg:w="3456297"/><text x="8.8608%" y="367.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (10,342,883 samples, 0.40%)</title><rect x="9.9340%" y="133" width="0.3993%" height="15" fill="rgb(210,199,37)" fg:x="257334286" fg:w="10342883"/><text x="10.1840%" y="143.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::add (51,550,474 samples, 1.99%)</title><rect x="8.6108%" y="405" width="1.9900%" height="15" fill="rgb(244,192,49)" fg:x="223057120" fg:w="51550474"/><text x="8.8608%" y="415.50">n..</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (48,094,177 samples, 1.86%)</title><rect x="8.7442%" y="389" width="1.8566%" height="15" fill="rgb(226,211,11)" fg:x="226513417" fg:w="48094177"/><text x="8.9942%" y="399.50">n..</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (48,094,177 samples, 1.86%)</title><rect x="8.7442%" y="373" width="1.8566%" height="15" fill="rgb(236,162,54)" fg:x="226513417" fg:w="48094177"/><text x="8.9942%" y="383.50">n..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (48,094,177 samples, 1.86%)</title><rect x="8.7442%" y="357" width="1.8566%" height="15" fill="rgb(220,229,9)" fg:x="226513417" fg:w="48094177"/><text x="8.9942%" y="367.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (48,094,177 samples, 1.86%)</title><rect x="8.7442%" y="341" width="1.8566%" height="15" fill="rgb(250,87,22)" fg:x="226513417" fg:w="48094177"/><text x="8.9942%" y="351.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (48,094,177 samples, 1.86%)</title><rect x="8.7442%" y="325" width="1.8566%" height="15" fill="rgb(239,43,17)" fg:x="226513417" fg:w="48094177"/><text x="8.9942%" y="335.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (48,094,177 samples, 1.86%)</title><rect x="8.7442%" y="309" width="1.8566%" height="15" fill="rgb(231,177,25)" fg:x="226513417" fg:w="48094177"/><text x="8.9942%" y="319.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (48,094,177 samples, 1.86%)</title><rect x="8.7442%" y="293" width="1.8566%" height="15" fill="rgb(219,179,1)" fg:x="226513417" fg:w="48094177"/><text x="8.9942%" y="303.50">n..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (41,280,549 samples, 1.59%)</title><rect x="9.0072%" y="277" width="1.5936%" height="15" fill="rgb(238,219,53)" fg:x="233327045" fg:w="41280549"/><text x="9.2572%" y="287.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (41,280,549 samples, 1.59%)</title><rect x="9.0072%" y="261" width="1.5936%" height="15" fill="rgb(232,167,36)" fg:x="233327045" fg:w="41280549"/><text x="9.2572%" y="271.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (41,280,549 samples, 1.59%)</title><rect x="9.0072%" y="245" width="1.5936%" height="15" fill="rgb(244,19,51)" fg:x="233327045" fg:w="41280549"/><text x="9.2572%" y="255.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (41,280,549 samples, 1.59%)</title><rect x="9.0072%" y="229" width="1.5936%" height="15" fill="rgb(224,6,22)" fg:x="233327045" fg:w="41280549"/><text x="9.2572%" y="239.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_contiguous (41,280,549 samples, 1.59%)</title><rect x="9.0072%" y="213" width="1.5936%" height="15" fill="rgb(224,145,5)" fg:x="233327045" fg:w="41280549"/><text x="9.2572%" y="223.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (41,280,549 samples, 1.59%)</title><rect x="9.0072%" y="197" width="1.5936%" height="15" fill="rgb(234,130,49)" fg:x="233327045" fg:w="41280549"/><text x="9.2572%" y="207.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (41,280,549 samples, 1.59%)</title><rect x="9.0072%" y="181" width="1.5936%" height="15" fill="rgb(254,6,2)" fg:x="233327045" fg:w="41280549"/><text x="9.2572%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (41,280,549 samples, 1.59%)</title><rect x="9.0072%" y="165" width="1.5936%" height="15" fill="rgb(208,96,46)" fg:x="233327045" fg:w="41280549"/><text x="9.2572%" y="175.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::clone_iopf::_{{closure}} (34,379,803 samples, 1.33%)</title><rect x="9.2736%" y="149" width="1.3272%" height="15" fill="rgb(239,3,39)" fg:x="240227791" fg:w="34379803"/><text x="9.5236%" y="159.50"></text></g><g><title>core::ops::function::Fn::call (6,930,425 samples, 0.27%)</title><rect x="10.3333%" y="133" width="0.2675%" height="15" fill="rgb(233,210,1)" fg:x="267677169" fg:w="6930425"/><text x="10.5833%" y="143.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (6,930,425 samples, 0.27%)</title><rect x="10.3333%" y="117" width="0.2675%" height="15" fill="rgb(244,137,37)" fg:x="267677169" fg:w="6930425"/><text x="10.5833%" y="127.50"></text></g><g><title>__GI___libc_free (3,450,007 samples, 0.13%)</title><rect x="10.6008%" y="357" width="0.1332%" height="15" fill="rgb(240,136,2)" fg:x="274607594" fg:w="3450007"/><text x="10.8508%" y="367.50"></text></g><g><title>_int_free_merge_chunk (3,450,007 samples, 0.13%)</title><rect x="10.6008%" y="341" width="0.1332%" height="15" fill="rgb(239,18,37)" fg:x="274607594" fg:w="3450007"/><text x="10.8508%" y="351.50"></text></g><g><title>unlink_chunk (3,450,007 samples, 0.13%)</title><rect x="10.6008%" y="325" width="0.1332%" height="15" fill="rgb(218,185,22)" fg:x="274607594" fg:w="3450007"/><text x="10.8508%" y="335.50"></text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (6,863,409 samples, 0.26%)</title><rect x="10.7340%" y="341" width="0.2650%" height="15" fill="rgb(225,218,4)" fg:x="278057601" fg:w="6863409"/><text x="10.9840%" y="351.50"></text></g><g><title>core::cmp::min (3,434,194 samples, 0.13%)</title><rect x="10.8664%" y="325" width="0.1326%" height="15" fill="rgb(230,182,32)" fg:x="281486816" fg:w="3434194"/><text x="11.1164%" y="335.50"></text></g><g><title>core::cmp::Ord::min (3,434,194 samples, 0.13%)</title><rect x="10.8664%" y="309" width="0.1326%" height="15" fill="rgb(242,56,43)" fg:x="281486816" fg:w="3434194"/><text x="11.1164%" y="319.50"></text></g><g><title>core::cmp::min_by (3,434,194 samples, 0.13%)</title><rect x="10.8664%" y="293" width="0.1326%" height="15" fill="rgb(233,99,24)" fg:x="281486816" fg:w="3434194"/><text x="11.1164%" y="303.50"></text></g><g><title>_int_free_create_chunk (3,442,728 samples, 0.13%)</title><rect x="11.1319%" y="181" width="0.1329%" height="15" fill="rgb(234,209,42)" fg:x="288365845" fg:w="3442728"/><text x="11.3819%" y="191.50"></text></g><g><title>unlink_chunk (3,442,728 samples, 0.13%)</title><rect x="11.1319%" y="165" width="0.1329%" height="15" fill="rgb(227,7,12)" fg:x="288365845" fg:w="3442728"/><text x="11.3819%" y="175.50"></text></g><g><title>matrixmultiply::gemm::make_packing_buffer (14,678,955 samples, 0.57%)</title><rect x="10.9989%" y="341" width="0.5667%" height="15" fill="rgb(245,203,43)" fg:x="284921010" fg:w="14678955"/><text x="11.2489%" y="351.50"></text></g><g><title>matrixmultiply::aligned_alloc::Alloc&lt;T&gt;::new (14,678,955 samples, 0.57%)</title><rect x="10.9989%" y="325" width="0.5667%" height="15" fill="rgb(238,205,33)" fg:x="284921010" fg:w="14678955"/><text x="11.2489%" y="335.50"></text></g><g><title>alloc::alloc::alloc (14,678,955 samples, 0.57%)</title><rect x="10.9989%" y="309" width="0.5667%" height="15" fill="rgb(231,56,7)" fg:x="284921010" fg:w="14678955"/><text x="11.2489%" y="319.50"></text></g><g><title>__rdl_alloc (14,678,955 samples, 0.57%)</title><rect x="10.9989%" y="293" width="0.5667%" height="15" fill="rgb(244,186,29)" fg:x="284921010" fg:w="14678955"/><text x="11.2489%" y="303.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (14,678,955 samples, 0.57%)</title><rect x="10.9989%" y="277" width="0.5667%" height="15" fill="rgb(234,111,31)" fg:x="284921010" fg:w="14678955"/><text x="11.2489%" y="287.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (14,678,955 samples, 0.57%)</title><rect x="10.9989%" y="261" width="0.5667%" height="15" fill="rgb(241,149,10)" fg:x="284921010" fg:w="14678955"/><text x="11.2489%" y="271.50"></text></g><g><title>__posix_memalign (14,678,955 samples, 0.57%)</title><rect x="10.9989%" y="245" width="0.5667%" height="15" fill="rgb(249,206,44)" fg:x="284921010" fg:w="14678955"/><text x="11.2489%" y="255.50"></text></g><g><title>__posix_memalign (14,678,955 samples, 0.57%)</title><rect x="10.9989%" y="229" width="0.5667%" height="15" fill="rgb(251,153,30)" fg:x="284921010" fg:w="14678955"/><text x="11.2489%" y="239.50"></text></g><g><title>_mid_memalign (14,678,955 samples, 0.57%)</title><rect x="10.9989%" y="213" width="0.5667%" height="15" fill="rgb(239,152,38)" fg:x="284921010" fg:w="14678955"/><text x="11.2489%" y="223.50"></text></g><g><title>_int_memalign (14,678,955 samples, 0.57%)</title><rect x="10.9989%" y="197" width="0.5667%" height="15" fill="rgb(249,139,47)" fg:x="284921010" fg:w="14678955"/><text x="11.2489%" y="207.50"></text></g><g><title>_int_malloc (7,791,392 samples, 0.30%)</title><rect x="11.2648%" y="181" width="0.3008%" height="15" fill="rgb(244,64,35)" fg:x="291808573" fg:w="7791392"/><text x="11.5148%" y="191.50"></text></g><g><title>matrixmultiply::gemm::pack (10,348,152 samples, 0.40%)</title><rect x="11.5656%" y="341" width="0.3995%" height="15" fill="rgb(216,46,15)" fg:x="299599965" fg:w="10348152"/><text x="11.8156%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10,348,152 samples, 0.40%)</title><rect x="11.5656%" y="325" width="0.3995%" height="15" fill="rgb(250,74,19)" fg:x="299599965" fg:w="10348152"/><text x="11.8156%" y="335.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (58,252,912 samples, 2.25%)</title><rect x="12.3633%" y="213" width="2.2488%" height="15" fill="rgb(249,42,33)" fg:x="320264669" fg:w="58252912"/><text x="12.6133%" y="223.50">&lt;..</text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (58,252,912 samples, 2.25%)</title><rect x="12.3633%" y="197" width="2.2488%" height="15" fill="rgb(242,149,17)" fg:x="320264669" fg:w="58252912"/><text x="12.6133%" y="207.50">c..</text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (3,471,971 samples, 0.13%)</title><rect x="14.6121%" y="213" width="0.1340%" height="15" fill="rgb(244,29,21)" fg:x="378517581" fg:w="3471971"/><text x="14.8621%" y="223.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (17,338,828 samples, 0.67%)</title><rect x="14.7461%" y="213" width="0.6693%" height="15" fill="rgb(220,130,37)" fg:x="381989552" fg:w="17338828"/><text x="14.9961%" y="223.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (96,155,858 samples, 3.71%)</title><rect x="11.9651%" y="261" width="3.7119%" height="15" fill="rgb(211,67,2)" fg:x="309948117" fg:w="96155858"/><text x="12.2151%" y="271.50">&lt;mat..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (96,155,858 samples, 3.71%)</title><rect x="11.9651%" y="245" width="3.7119%" height="15" fill="rgb(235,68,52)" fg:x="309948117" fg:w="96155858"/><text x="12.2151%" y="255.50">matr..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (92,649,184 samples, 3.58%)</title><rect x="12.1004%" y="229" width="3.5766%" height="15" fill="rgb(246,142,3)" fg:x="313454791" fg:w="92649184"/><text x="12.3504%" y="239.50">matr..</text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (6,775,595 samples, 0.26%)</title><rect x="15.4155%" y="213" width="0.2616%" height="15" fill="rgb(241,25,7)" fg:x="399328380" fg:w="6775595"/><text x="15.6655%" y="223.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (51,808,925 samples, 2.00%)</title><rect x="16.4844%" y="197" width="2.0000%" height="15" fill="rgb(242,119,39)" fg:x="427017846" fg:w="51808925"/><text x="16.7344%" y="207.50">&lt;..</text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (51,808,925 samples, 2.00%)</title><rect x="16.4844%" y="181" width="2.0000%" height="15" fill="rgb(241,98,45)" fg:x="427017846" fg:w="51808925"/><text x="16.7344%" y="191.50">c..</text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (10,428,454 samples, 0.40%)</title><rect x="18.4844%" y="197" width="0.4026%" height="15" fill="rgb(254,28,30)" fg:x="478826771" fg:w="10428454"/><text x="18.7344%" y="207.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (27,586,569 samples, 1.06%)</title><rect x="18.8869%" y="197" width="1.0649%" height="15" fill="rgb(241,142,54)" fg:x="489255225" fg:w="27586569"/><text x="19.1369%" y="207.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (3,392,124 samples, 0.13%)</title><rect x="19.9519%" y="197" width="0.1309%" height="15" fill="rgb(222,85,15)" fg:x="516841794" fg:w="3392124"/><text x="20.2019%" y="207.50"></text></g><g><title>matrixmultiply::gemm::masked_kernel (123,203,077 samples, 4.76%)</title><rect x="15.6770%" y="261" width="4.7561%" height="15" fill="rgb(210,85,47)" fg:x="406103975" fg:w="123203077"/><text x="15.9270%" y="271.50">matrix..</text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (119,748,582 samples, 4.62%)</title><rect x="15.8104%" y="245" width="4.6227%" height="15" fill="rgb(224,206,25)" fg:x="409558470" fg:w="119748582"/><text x="16.0604%" y="255.50">&lt;matr..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (116,279,868 samples, 4.49%)</title><rect x="15.9443%" y="229" width="4.4888%" height="15" fill="rgb(243,201,19)" fg:x="413027184" fg:w="116279868"/><text x="16.1943%" y="239.50">matri..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (102,289,206 samples, 3.95%)</title><rect x="16.4844%" y="213" width="3.9487%" height="15" fill="rgb(236,59,4)" fg:x="427017846" fg:w="102289206"/><text x="16.7344%" y="223.50">matr..</text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (9,073,134 samples, 0.35%)</title><rect x="20.0828%" y="197" width="0.3503%" height="15" fill="rgb(254,179,45)" fg:x="520233918" fg:w="9073134"/><text x="20.3328%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (9,073,134 samples, 0.35%)</title><rect x="20.0828%" y="181" width="0.3503%" height="15" fill="rgb(226,14,10)" fg:x="520233918" fg:w="9073134"/><text x="20.3328%" y="191.50"></text></g><g><title>core::ptr::write_unaligned (9,073,134 samples, 0.35%)</title><rect x="20.0828%" y="165" width="0.3503%" height="15" fill="rgb(244,27,41)" fg:x="520233918" fg:w="9073134"/><text x="20.3328%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9,073,134 samples, 0.35%)</title><rect x="20.0828%" y="149" width="0.3503%" height="15" fill="rgb(235,35,32)" fg:x="520233918" fg:w="9073134"/><text x="20.3328%" y="159.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (222,823,697 samples, 8.60%)</title><rect x="11.9651%" y="309" width="8.6018%" height="15" fill="rgb(218,68,31)" fg:x="309948117" fg:w="222823697"/><text x="12.2151%" y="319.50">matrixmultip..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (222,823,697 samples, 8.60%)</title><rect x="11.9651%" y="293" width="8.6018%" height="15" fill="rgb(207,120,37)" fg:x="309948117" fg:w="222823697"/><text x="12.2151%" y="303.50">matrixmultip..</text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (222,823,697 samples, 8.60%)</title><rect x="11.9651%" y="277" width="8.6018%" height="15" fill="rgb(227,98,0)" fg:x="309948117" fg:w="222823697"/><text x="12.2151%" y="287.50">matrixmultip..</text></g><g><title>rawpointer::PointerExt::stride_offset (3,464,762 samples, 0.13%)</title><rect x="20.4331%" y="261" width="0.1338%" height="15" fill="rgb(207,7,3)" fg:x="529307052" fg:w="3464762"/><text x="20.6831%" y="271.50"></text></g><g><title>&lt;matrixmultiply::ptr::Ptr&lt;*const T&gt; as rawpointer::PointerExt&gt;::offset (3,464,762 samples, 0.13%)</title><rect x="20.4331%" y="245" width="0.1338%" height="15" fill="rgb(206,98,19)" fg:x="529307052" fg:w="3464762"/><text x="20.6831%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3,464,762 samples, 0.13%)</title><rect x="20.4331%" y="229" width="0.1338%" height="15" fill="rgb(217,5,26)" fg:x="529307052" fg:w="3464762"/><text x="20.6831%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41,451,571 samples, 1.60%)</title><rect x="21.0330%" y="293" width="1.6002%" height="15" fill="rgb(235,190,38)" fg:x="544848647" fg:w="41451571"/><text x="21.2830%" y="303.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (315,136,852 samples, 12.17%)</title><rect x="10.6008%" y="405" width="12.1654%" height="15" fill="rgb(247,86,24)" fg:x="274607594" fg:w="315136852"/><text x="10.8508%" y="415.50">ndarray::linalg::i..</text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (315,136,852 samples, 12.17%)</title><rect x="10.6008%" y="389" width="12.1654%" height="15" fill="rgb(205,101,16)" fg:x="274607594" fg:w="315136852"/><text x="10.8508%" y="399.50">&lt;ndarray::ArrayBas..</text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (315,136,852 samples, 12.17%)</title><rect x="10.6008%" y="373" width="12.1654%" height="15" fill="rgb(246,168,33)" fg:x="274607594" fg:w="315136852"/><text x="10.8508%" y="383.50">ndarray::linalg::i..</text></g><g><title>matrixmultiply::gemm::gemm_loop (311,686,845 samples, 12.03%)</title><rect x="10.7340%" y="357" width="12.0322%" height="15" fill="rgb(231,114,1)" fg:x="278057601" fg:w="311686845"/><text x="10.9840%" y="367.50">matrixmultiply::ge..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (279,796,329 samples, 10.80%)</title><rect x="11.9651%" y="341" width="10.8011%" height="15" fill="rgb(207,184,53)" fg:x="309948117" fg:w="279796329"/><text x="12.2151%" y="351.50">matrixmultiply::..</text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (279,796,329 samples, 10.80%)</title><rect x="11.9651%" y="325" width="10.8011%" height="15" fill="rgb(224,95,51)" fg:x="309948117" fg:w="279796329"/><text x="12.2151%" y="335.50">matrixmultiply::..</text></g><g><title>matrixmultiply::gemm::pack (56,972,632 samples, 2.20%)</title><rect x="20.5668%" y="309" width="2.1993%" height="15" fill="rgb(212,188,45)" fg:x="532771814" fg:w="56972632"/><text x="20.8168%" y="319.50">m..</text></g><g><title>rawpointer::PointerExt::stride_offset (3,444,228 samples, 0.13%)</title><rect x="22.6332%" y="293" width="0.1330%" height="15" fill="rgb(223,154,38)" fg:x="586300218" fg:w="3444228"/><text x="22.8832%" y="303.50"></text></g><g><title>__GI___libc_free (3,329,698 samples, 0.13%)</title><rect x="22.7662%" y="389" width="0.1285%" height="15" fill="rgb(251,22,52)" fg:x="589744446" fg:w="3329698"/><text x="23.0162%" y="399.50"></text></g><g><title>_int_free_merge_chunk (3,329,698 samples, 0.13%)</title><rect x="22.7662%" y="373" width="0.1285%" height="15" fill="rgb(229,209,22)" fg:x="589744446" fg:w="3329698"/><text x="23.0162%" y="383.50"></text></g><g><title>core::ptr::write (27,664,608 samples, 1.07%)</title><rect x="23.2939%" y="277" width="1.0679%" height="15" fill="rgb(234,138,34)" fg:x="603414552" fg:w="27664608"/><text x="23.5439%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,220,632,244 samples, 47.12%)</title><rect x="22.8947%" y="309" width="47.1206%" height="15" fill="rgb(212,95,11)" fg:x="593074144" fg:w="1220632244"/><text x="23.1447%" y="319.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (1,210,291,836 samples, 46.72%)</title><rect x="23.2939%" y="293" width="46.7214%" height="15" fill="rgb(240,179,47)" fg:x="603414552" fg:w="1210291836"/><text x="23.5439%" y="303.50">ndarray::iterators::to_vec_mapped::_{{closure}}</text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (1,182,627,228 samples, 45.65%)</title><rect x="24.3618%" y="277" width="45.6535%" height="15" fill="rgb(240,163,11)" fg:x="631079160" fg:w="1182627228"/><text x="24.6118%" y="287.50">ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}}</text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (1,182,627,228 samples, 45.65%)</title><rect x="24.3618%" y="261" width="45.6535%" height="15" fill="rgb(236,37,12)" fg:x="631079160" fg:w="1182627228"/><text x="24.6118%" y="271.50">rkl::core::activations::tanh_forward::_{{closure}}</text></g><g><title>fastapprox::fast::tanh (1,137,777,228 samples, 43.92%)</title><rect x="26.0932%" y="245" width="43.9221%" height="15" fill="rgb(232,164,16)" fg:x="675929160" fg:w="1137777228"/><text x="26.3432%" y="255.50">fastapprox::fast::tanh</text></g><g><title>fastapprox::fast::exp (1,014,166,810 samples, 39.15%)</title><rect x="30.8650%" y="229" width="39.1503%" height="15" fill="rgb(244,205,15)" fg:x="799539578" fg:w="1014166810"/><text x="31.1150%" y="239.50">fastapprox::fast::exp</text></g><g><title>fastapprox::fast::pow2 (1,014,166,810 samples, 39.15%)</title><rect x="30.8650%" y="213" width="39.1503%" height="15" fill="rgb(223,117,47)" fg:x="799539578" fg:w="1014166810"/><text x="31.1150%" y="223.50">fastapprox::fast::pow2</text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="197" width="0.1304%" height="15" fill="rgb(244,107,35)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="207.50"></text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="181" width="0.1304%" height="15" fill="rgb(205,140,8)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="191.50"></text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="165" width="0.1304%" height="15" fill="rgb(228,84,46)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="175.50"></text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="149" width="0.1304%" height="15" fill="rgb(254,188,9)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="159.50"></text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="133" width="0.1304%" height="15" fill="rgb(206,112,54)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="143.50"></text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="117" width="0.1304%" height="15" fill="rgb(216,84,49)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="127.50"></text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="101" width="0.1304%" height="15" fill="rgb(214,194,35)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="111.50"></text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="85" width="0.1304%" height="15" fill="rgb(249,28,3)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="95.50"></text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="69" width="0.1304%" height="15" fill="rgb(222,56,52)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="79.50"></text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="53" width="0.1304%" height="15" fill="rgb(245,217,50)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="63.50"></text></g><g><title>[unknown] (3,377,829 samples, 0.13%)</title><rect x="69.8849%" y="37" width="0.1304%" height="15" fill="rgb(213,201,24)" fg:x="1810328559" fg:w="3377829"/><text x="70.1349%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="613" width="66.4488%" height="15" fill="rgb(248,116,28)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="623.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="597" width="66.4488%" height="15" fill="rgb(219,72,43)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="581" width="66.4488%" height="15" fill="rgb(209,138,14)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="591.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="565" width="66.4488%" height="15" fill="rgb(222,18,33)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="575.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="549" width="66.4488%" height="15" fill="rgb(213,199,7)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="559.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="533" width="66.4488%" height="15" fill="rgb(250,110,10)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="543.50">alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="517" width="66.4488%" height="15" fill="rgb(248,123,6)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="527.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="501" width="66.4488%" height="15" fill="rgb(206,91,31)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="511.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="485" width="66.4488%" height="15" fill="rgb(211,154,13)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="495.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="469" width="66.4488%" height="15" fill="rgb(225,148,7)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="479.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::compute_jacobian::_{{closure}} (1,721,316,192 samples, 66.45%)</title><rect x="3.6968%" y="453" width="66.4488%" height="15" fill="rgb(220,160,43)" fg:x="95763181" fg:w="1721316192"/><text x="3.9468%" y="463.50">rkl::core::optimizers::MarquardtOptimizer::compute_jacobian::_{{closure}}</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (1,655,982,213 samples, 63.93%)</title><rect x="6.2189%" y="437" width="63.9266%" height="15" fill="rgb(213,52,39)" fg:x="161097160" fg:w="1655982213"/><text x="6.4689%" y="447.50">rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict</text></g><g><title>rkl::core::layers::Dense::forward (1,655,982,213 samples, 63.93%)</title><rect x="6.2189%" y="421" width="63.9266%" height="15" fill="rgb(243,137,7)" fg:x="161097160" fg:w="1655982213"/><text x="6.4689%" y="431.50">rkl::core::layers::Dense::forward</text></g><g><title>rkl::core::activations::Activation::forward (1,227,334,927 samples, 47.38%)</title><rect x="22.7662%" y="405" width="47.3794%" height="15" fill="rgb(230,79,13)" fg:x="589744446" fg:w="1227334927"/><text x="23.0162%" y="415.50">rkl::core::activations::Activation::forward</text></g><g><title>rkl::core::activations::tanh_forward (1,224,005,229 samples, 47.25%)</title><rect x="22.8947%" y="389" width="47.2508%" height="15" fill="rgb(247,105,23)" fg:x="593074144" fg:w="1224005229"/><text x="23.1447%" y="399.50">rkl::core::activations::tanh_forward</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (1,224,005,229 samples, 47.25%)</title><rect x="22.8947%" y="373" width="47.2508%" height="15" fill="rgb(223,179,41)" fg:x="593074144" fg:w="1224005229"/><text x="23.1447%" y="383.50">ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (1,224,005,229 samples, 47.25%)</title><rect x="22.8947%" y="357" width="47.2508%" height="15" fill="rgb(218,9,34)" fg:x="593074144" fg:w="1224005229"/><text x="23.1447%" y="367.50">ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map</text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (1,224,005,229 samples, 47.25%)</title><rect x="22.8947%" y="341" width="47.2508%" height="15" fill="rgb(222,106,8)" fg:x="593074144" fg:w="1224005229"/><text x="23.1447%" y="351.50">ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted..</text></g><g><title>ndarray::iterators::to_vec_mapped (1,224,005,229 samples, 47.25%)</title><rect x="22.8947%" y="325" width="47.2508%" height="15" fill="rgb(211,220,0)" fg:x="593074144" fg:w="1224005229"/><text x="23.1447%" y="335.50">ndarray::iterators::to_vec_mapped</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,372,985 samples, 0.13%)</title><rect x="70.0153%" y="309" width="0.1302%" height="15" fill="rgb(229,52,16)" fg:x="1813706388" fg:w="3372985"/><text x="70.2653%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,372,985 samples, 0.13%)</title><rect x="70.0153%" y="293" width="0.1302%" height="15" fill="rgb(212,155,18)" fg:x="1813706388" fg:w="3372985"/><text x="70.2653%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,372,985 samples, 0.13%)</title><rect x="70.0153%" y="277" width="0.1302%" height="15" fill="rgb(242,21,14)" fg:x="1813706388" fg:w="3372985"/><text x="70.2653%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,372,985 samples, 0.13%)</title><rect x="70.0153%" y="261" width="0.1302%" height="15" fill="rgb(222,19,48)" fg:x="1813706388" fg:w="3372985"/><text x="70.2653%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,372,985 samples, 0.13%)</title><rect x="70.0153%" y="245" width="0.1302%" height="15" fill="rgb(232,45,27)" fg:x="1813706388" fg:w="3372985"/><text x="70.2653%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,372,985 samples, 0.13%)</title><rect x="70.0153%" y="229" width="0.1302%" height="15" fill="rgb(249,103,42)" fg:x="1813706388" fg:w="3372985"/><text x="70.2653%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,372,985 samples, 0.13%)</title><rect x="70.0153%" y="213" width="0.1302%" height="15" fill="rgb(246,81,33)" fg:x="1813706388" fg:w="3372985"/><text x="70.2653%" y="223.50"></text></g><g><title>alloc::alloc::alloc (3,372,985 samples, 0.13%)</title><rect x="70.0153%" y="197" width="0.1302%" height="15" fill="rgb(252,33,42)" fg:x="1813706388" fg:w="3372985"/><text x="70.2653%" y="207.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zeros (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="613" width="0.6589%" height="15" fill="rgb(209,212,41)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="623.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_elem (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="597" width="0.6589%" height="15" fill="rgb(207,154,6)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="607.50"></text></g><g><title>alloc::vec::from_elem (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="581" width="0.6589%" height="15" fill="rgb(223,64,47)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="591.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="565" width="0.6589%" height="15" fill="rgb(211,161,38)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="549" width="0.6589%" height="15" fill="rgb(219,138,40)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="533" width="0.6589%" height="15" fill="rgb(241,228,46)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="517" width="0.6589%" height="15" fill="rgb(223,209,38)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="501" width="0.6589%" height="15" fill="rgb(236,164,45)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="485" width="0.6589%" height="15" fill="rgb(231,15,5)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="495.50"></text></g><g><title>alloc::alloc::alloc_zeroed (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="469" width="0.6589%" height="15" fill="rgb(252,35,15)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="479.50"></text></g><g><title>__memset_avx2_unaligned_erms (17,069,039 samples, 0.66%)</title><rect x="70.1455%" y="453" width="0.6589%" height="15" fill="rgb(248,181,18)" fg:x="1817079373" fg:w="17069039"/><text x="70.3955%" y="463.50"></text></g><g><title>[unknown] (3,362,070 samples, 0.13%)</title><rect x="70.6747%" y="437" width="0.1298%" height="15" fill="rgb(233,39,42)" fg:x="1830786342" fg:w="3362070"/><text x="70.9247%" y="447.50"></text></g><g><title>[unknown] (3,362,070 samples, 0.13%)</title><rect x="70.6747%" y="421" width="0.1298%" height="15" fill="rgb(238,110,33)" fg:x="1830786342" fg:w="3362070"/><text x="70.9247%" y="431.50"></text></g><g><title>[unknown] (3,362,070 samples, 0.13%)</title><rect x="70.6747%" y="405" width="0.1298%" height="15" fill="rgb(233,195,10)" fg:x="1830786342" fg:w="3362070"/><text x="70.9247%" y="415.50"></text></g><g><title>[unknown] (3,362,070 samples, 0.13%)</title><rect x="70.6747%" y="389" width="0.1298%" height="15" fill="rgb(254,105,3)" fg:x="1830786342" fg:w="3362070"/><text x="70.9247%" y="399.50"></text></g><g><title>[unknown] (3,362,070 samples, 0.13%)</title><rect x="70.6747%" y="373" width="0.1298%" height="15" fill="rgb(221,225,9)" fg:x="1830786342" fg:w="3362070"/><text x="70.9247%" y="383.50"></text></g><g><title>[unknown] (3,362,070 samples, 0.13%)</title><rect x="70.6747%" y="357" width="0.1298%" height="15" fill="rgb(224,227,45)" fg:x="1830786342" fg:w="3362070"/><text x="70.9247%" y="367.50"></text></g><g><title>[unknown] (3,362,070 samples, 0.13%)</title><rect x="70.6747%" y="341" width="0.1298%" height="15" fill="rgb(229,198,43)" fg:x="1830786342" fg:w="3362070"/><text x="70.9247%" y="351.50"></text></g><g><title>[unknown] (3,362,070 samples, 0.13%)</title><rect x="70.6747%" y="325" width="0.1298%" height="15" fill="rgb(206,209,35)" fg:x="1830786342" fg:w="3362070"/><text x="70.9247%" y="335.50"></text></g><g><title>[unknown] (3,362,070 samples, 0.13%)</title><rect x="70.6747%" y="309" width="0.1298%" height="15" fill="rgb(245,195,53)" fg:x="1830786342" fg:w="3362070"/><text x="70.9247%" y="319.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="613" width="0.5822%" height="15" fill="rgb(240,92,26)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="623.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="597" width="0.5822%" height="15" fill="rgb(207,40,23)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="607.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="581" width="0.5822%" height="15" fill="rgb(223,111,35)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="591.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="565" width="0.5822%" height="15" fill="rgb(229,147,28)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="575.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="549" width="0.5822%" height="15" fill="rgb(211,29,28)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="559.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="533" width="0.5822%" height="15" fill="rgb(228,72,33)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="543.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="517" width="0.5822%" height="15" fill="rgb(205,214,31)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="527.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="501" width="0.5822%" height="15" fill="rgb(224,111,15)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="511.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="485" width="0.5822%" height="15" fill="rgb(253,21,26)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="495.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="469" width="0.5822%" height="15" fill="rgb(245,139,43)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="479.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="453" width="0.5822%" height="15" fill="rgb(252,170,7)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="463.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="437" width="0.5822%" height="15" fill="rgb(231,118,14)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="447.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="421" width="0.5822%" height="15" fill="rgb(238,83,0)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="431.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="405" width="0.5822%" height="15" fill="rgb(221,39,39)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15,080,529 samples, 0.58%)</title><rect x="70.8045%" y="389" width="0.5822%" height="15" fill="rgb(222,119,46)" fg:x="1834148412" fg:w="15080529"/><text x="71.0545%" y="399.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign::_{{closure}} (8,232,608 samples, 0.32%)</title><rect x="71.0688%" y="373" width="0.3178%" height="15" fill="rgb(222,165,49)" fg:x="1840996333" fg:w="8232608"/><text x="71.3188%" y="383.50"></text></g><g><title>core::clone::Clone::clone_from (8,232,608 samples, 0.32%)</title><rect x="71.0688%" y="357" width="0.3178%" height="15" fill="rgb(219,113,52)" fg:x="1840996333" fg:w="8232608"/><text x="71.3188%" y="367.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="341" width="0.1865%" height="15" fill="rgb(214,7,15)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="351.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="325" width="0.1865%" height="15" fill="rgb(235,32,4)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="335.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="309" width="0.1865%" height="15" fill="rgb(238,90,54)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="319.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="293" width="0.1865%" height="15" fill="rgb(213,208,19)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="303.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="277" width="0.1865%" height="15" fill="rgb(233,156,4)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="287.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="261" width="0.1865%" height="15" fill="rgb(207,194,5)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="271.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="245" width="0.1865%" height="15" fill="rgb(206,111,30)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="255.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="229" width="0.1865%" height="15" fill="rgb(243,70,54)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="239.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="213" width="0.1865%" height="15" fill="rgb(242,28,8)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="223.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="197" width="0.1865%" height="15" fill="rgb(219,106,18)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="207.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="181" width="0.1865%" height="15" fill="rgb(244,222,10)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="191.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="165" width="0.1865%" height="15" fill="rgb(236,179,52)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="175.50"></text></g><g><title>[unknown] (4,831,859 samples, 0.19%)</title><rect x="71.2001%" y="149" width="0.1865%" height="15" fill="rgb(213,23,39)" fg:x="1844397082" fg:w="4831859"/><text x="71.4501%" y="159.50"></text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::compute_jacobian (1,756,902,883 samples, 67.82%)</title><rect x="3.6968%" y="629" width="67.8225%" height="15" fill="rgb(238,48,10)" fg:x="95763181" fg:w="1756902883"/><text x="3.9468%" y="639.50">rkl::core::optimizers::MarquardtOptimizer::compute_jacobian</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="613" width="0.1327%" height="15" fill="rgb(251,196,23)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="623.50"></text></g><g><title>rkl::core::layers::Dense::forward (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="597" width="0.1327%" height="15" fill="rgb(250,152,24)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="607.50"></text></g><g><title>rkl::core::activations::Activation::forward (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="581" width="0.1327%" height="15" fill="rgb(209,150,17)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="591.50"></text></g><g><title>rkl::core::activations::tanh_forward (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="565" width="0.1327%" height="15" fill="rgb(234,202,34)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="575.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="549" width="0.1327%" height="15" fill="rgb(253,148,53)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="559.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="533" width="0.1327%" height="15" fill="rgb(218,129,16)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="543.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="517" width="0.1327%" height="15" fill="rgb(216,85,19)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="527.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="501" width="0.1327%" height="15" fill="rgb(235,228,7)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="485" width="0.1327%" height="15" fill="rgb(245,175,0)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="495.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="469" width="0.1327%" height="15" fill="rgb(208,168,36)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="479.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="453" width="0.1327%" height="15" fill="rgb(246,171,24)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="463.50"></text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="437" width="0.1327%" height="15" fill="rgb(215,142,24)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="447.50"></text></g><g><title>fastapprox::fast::tanh (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="421" width="0.1327%" height="15" fill="rgb(250,187,7)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="431.50"></text></g><g><title>fastapprox::fast::exp (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="405" width="0.1327%" height="15" fill="rgb(228,66,33)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="415.50"></text></g><g><title>fastapprox::fast::pow2 (3,437,123 samples, 0.13%)</title><rect x="71.3866%" y="389" width="0.1327%" height="15" fill="rgb(234,215,21)" fg:x="1849228941" fg:w="3437123"/><text x="71.6366%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="613" width="0.1334%" height="15" fill="rgb(222,191,20)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="597" width="0.1334%" height="15" fill="rgb(245,79,54)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="581" width="0.1334%" height="15" fill="rgb(240,10,37)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="565" width="0.1334%" height="15" fill="rgb(214,192,32)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="549" width="0.1334%" height="15" fill="rgb(209,36,54)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="533" width="0.1334%" height="15" fill="rgb(220,10,11)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="517" width="0.1334%" height="15" fill="rgb(221,106,17)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="501" width="0.1334%" height="15" fill="rgb(251,142,44)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="485" width="0.1334%" height="15" fill="rgb(238,13,15)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="469" width="0.1334%" height="15" fill="rgb(208,107,27)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="453" width="0.1334%" height="15" fill="rgb(205,136,37)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="437" width="0.1334%" height="15" fill="rgb(250,205,27)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="447.50"></text></g><g><title>alloc::alloc::realloc (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="421" width="0.1334%" height="15" fill="rgb(210,80,43)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="431.50"></text></g><g><title>__GI___libc_realloc (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="405" width="0.1334%" height="15" fill="rgb(247,160,36)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="415.50"></text></g><g><title>_int_realloc (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="389" width="0.1334%" height="15" fill="rgb(234,13,49)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="399.50"></text></g><g><title>_int_malloc (3,455,582 samples, 0.13%)</title><rect x="71.5193%" y="373" width="0.1334%" height="15" fill="rgb(234,122,0)" fg:x="1852666064" fg:w="3455582"/><text x="71.7693%" y="383.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (58,620,160 samples, 2.26%)</title><rect x="71.6527%" y="613" width="2.2629%" height="15" fill="rgb(207,146,38)" fg:x="1856121646" fg:w="58620160"/><text x="71.9027%" y="623.50">&lt;..</text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (58,620,160 samples, 2.26%)</title><rect x="71.6527%" y="597" width="2.2629%" height="15" fill="rgb(207,177,25)" fg:x="1856121646" fg:w="58620160"/><text x="71.9027%" y="607.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (58,620,160 samples, 2.26%)</title><rect x="71.6527%" y="581" width="2.2629%" height="15" fill="rgb(211,178,42)" fg:x="1856121646" fg:w="58620160"/><text x="71.9027%" y="591.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58,620,160 samples, 2.26%)</title><rect x="71.6527%" y="565" width="2.2629%" height="15" fill="rgb(230,69,54)" fg:x="1856121646" fg:w="58620160"/><text x="71.9027%" y="575.50">a..</text></g><g><title>alloc::slice::hack::to_vec (58,620,160 samples, 2.26%)</title><rect x="71.6527%" y="549" width="2.2629%" height="15" fill="rgb(214,135,41)" fg:x="1856121646" fg:w="58620160"/><text x="71.9027%" y="559.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58,620,160 samples, 2.26%)</title><rect x="71.6527%" y="533" width="2.2629%" height="15" fill="rgb(237,67,25)" fg:x="1856121646" fg:w="58620160"/><text x="71.9027%" y="543.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (58,620,160 samples, 2.26%)</title><rect x="71.6527%" y="517" width="2.2629%" height="15" fill="rgb(222,189,50)" fg:x="1856121646" fg:w="58620160"/><text x="71.9027%" y="527.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (58,620,160 samples, 2.26%)</title><rect x="71.6527%" y="501" width="2.2629%" height="15" fill="rgb(245,148,34)" fg:x="1856121646" fg:w="58620160"/><text x="71.9027%" y="511.50">c..</text></g><g><title>__memcpy_avx_unaligned_erms (58,620,160 samples, 2.26%)</title><rect x="71.6527%" y="485" width="2.2629%" height="15" fill="rgb(222,29,6)" fg:x="1856121646" fg:w="58620160"/><text x="71.9027%" y="495.50">_..</text></g><g><title>[unknown] (48,392,901 samples, 1.87%)</title><rect x="72.0475%" y="469" width="1.8681%" height="15" fill="rgb(221,189,43)" fg:x="1866348905" fg:w="48392901"/><text x="72.2975%" y="479.50">[..</text></g><g><title>[unknown] (44,873,526 samples, 1.73%)</title><rect x="72.1834%" y="453" width="1.7323%" height="15" fill="rgb(207,36,27)" fg:x="1869868280" fg:w="44873526"/><text x="72.4334%" y="463.50"></text></g><g><title>[unknown] (44,873,526 samples, 1.73%)</title><rect x="72.1834%" y="437" width="1.7323%" height="15" fill="rgb(217,90,24)" fg:x="1869868280" fg:w="44873526"/><text x="72.4334%" y="447.50"></text></g><g><title>[unknown] (44,873,526 samples, 1.73%)</title><rect x="72.1834%" y="421" width="1.7323%" height="15" fill="rgb(224,66,35)" fg:x="1869868280" fg:w="44873526"/><text x="72.4334%" y="431.50"></text></g><g><title>[unknown] (41,425,373 samples, 1.60%)</title><rect x="72.3165%" y="405" width="1.5992%" height="15" fill="rgb(221,13,50)" fg:x="1873316433" fg:w="41425373"/><text x="72.5665%" y="415.50"></text></g><g><title>[unknown] (41,425,373 samples, 1.60%)</title><rect x="72.3165%" y="389" width="1.5992%" height="15" fill="rgb(236,68,49)" fg:x="1873316433" fg:w="41425373"/><text x="72.5665%" y="399.50"></text></g><g><title>[unknown] (41,425,373 samples, 1.60%)</title><rect x="72.3165%" y="373" width="1.5992%" height="15" fill="rgb(229,146,28)" fg:x="1873316433" fg:w="41425373"/><text x="72.5665%" y="383.50"></text></g><g><title>[unknown] (41,425,373 samples, 1.60%)</title><rect x="72.3165%" y="357" width="1.5992%" height="15" fill="rgb(225,31,38)" fg:x="1873316433" fg:w="41425373"/><text x="72.5665%" y="367.50"></text></g><g><title>[unknown] (37,966,127 samples, 1.47%)</title><rect x="72.4500%" y="341" width="1.4656%" height="15" fill="rgb(250,208,3)" fg:x="1876775679" fg:w="37966127"/><text x="72.7000%" y="351.50"></text></g><g><title>[unknown] (27,607,939 samples, 1.07%)</title><rect x="72.8499%" y="325" width="1.0658%" height="15" fill="rgb(246,54,23)" fg:x="1887133867" fg:w="27607939"/><text x="73.0999%" y="335.50"></text></g><g><title>[unknown] (24,294,363 samples, 0.94%)</title><rect x="72.9778%" y="309" width="0.9378%" height="15" fill="rgb(243,76,11)" fg:x="1890447443" fg:w="24294363"/><text x="73.2278%" y="319.50"></text></g><g><title>[unknown] (24,294,363 samples, 0.94%)</title><rect x="72.9778%" y="293" width="0.9378%" height="15" fill="rgb(245,21,50)" fg:x="1890447443" fg:w="24294363"/><text x="73.2278%" y="303.50"></text></g><g><title>[unknown] (24,294,363 samples, 0.94%)</title><rect x="72.9778%" y="277" width="0.9378%" height="15" fill="rgb(228,9,43)" fg:x="1890447443" fg:w="24294363"/><text x="73.2278%" y="287.50"></text></g><g><title>[unknown] (3,687,407 samples, 0.14%)</title><rect x="73.7733%" y="261" width="0.1423%" height="15" fill="rgb(208,100,47)" fg:x="1911054399" fg:w="3687407"/><text x="74.0233%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;&gt; (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="613" width="0.1452%" height="15" fill="rgb(232,26,8)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt; (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="597" width="0.1452%" height="15" fill="rgb(216,166,38)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="581" width="0.1452%" height="15" fill="rgb(251,202,51)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="565" width="0.1452%" height="15" fill="rgb(254,216,34)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="549" width="0.1452%" height="15" fill="rgb(251,32,27)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="533" width="0.1452%" height="15" fill="rgb(208,127,28)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="517" width="0.1452%" height="15" fill="rgb(224,137,22)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="501" width="0.1452%" height="15" fill="rgb(254,70,32)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="511.50"></text></g><g><title>__GI___libc_free (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="485" width="0.1452%" height="15" fill="rgb(229,75,37)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="495.50"></text></g><g><title>__GI_munmap (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="469" width="0.1452%" height="15" fill="rgb(252,64,23)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="479.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="453" width="0.1452%" height="15" fill="rgb(232,162,48)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="463.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="437" width="0.1452%" height="15" fill="rgb(246,160,12)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="447.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="421" width="0.1452%" height="15" fill="rgb(247,166,0)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="431.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="405" width="0.1452%" height="15" fill="rgb(249,219,21)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="415.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="389" width="0.1452%" height="15" fill="rgb(205,209,3)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="399.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="373" width="0.1452%" height="15" fill="rgb(243,44,1)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="383.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="357" width="0.1452%" height="15" fill="rgb(206,159,16)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="367.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="341" width="0.1452%" height="15" fill="rgb(244,77,30)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="351.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="325" width="0.1452%" height="15" fill="rgb(218,69,12)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="335.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="309" width="0.1452%" height="15" fill="rgb(212,87,7)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="319.50"></text></g><g><title>[unknown] (3,762,215 samples, 0.15%)</title><rect x="73.9157%" y="293" width="0.1452%" height="15" fill="rgb(245,114,25)" fg:x="1914741806" fg:w="3762215"/><text x="74.1657%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::linalg::lu::LU&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt; (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="613" width="1.0576%" height="15" fill="rgb(210,61,42)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;&gt; (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="597" width="1.0576%" height="15" fill="rgb(211,52,33)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt; (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="581" width="1.0576%" height="15" fill="rgb(234,58,33)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="565" width="1.0576%" height="15" fill="rgb(220,115,36)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="549" width="1.0576%" height="15" fill="rgb(243,153,54)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="533" width="1.0576%" height="15" fill="rgb(251,47,18)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="517" width="1.0576%" height="15" fill="rgb(242,102,42)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="501" width="1.0576%" height="15" fill="rgb(234,31,38)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="485" width="1.0576%" height="15" fill="rgb(221,117,51)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="495.50"></text></g><g><title>__GI___libc_free (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="469" width="1.0576%" height="15" fill="rgb(212,20,18)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="479.50"></text></g><g><title>systrim (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="453" width="1.0576%" height="15" fill="rgb(245,133,36)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="463.50"></text></g><g><title>__glibc_morecore (27,395,471 samples, 1.06%)</title><rect x="74.0609%" y="437" width="1.0576%" height="15" fill="rgb(212,6,19)" fg:x="1918504021" fg:w="27395471"/><text x="74.3109%" y="447.50"></text></g><g><title>__GI___sbrk (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="421" width="0.9245%" height="15" fill="rgb(218,1,36)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="431.50"></text></g><g><title>__brk (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="405" width="0.9245%" height="15" fill="rgb(246,84,54)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="415.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="389" width="0.9245%" height="15" fill="rgb(242,110,6)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="399.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="373" width="0.9245%" height="15" fill="rgb(214,47,5)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="383.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="357" width="0.9245%" height="15" fill="rgb(218,159,25)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="367.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="341" width="0.9245%" height="15" fill="rgb(215,211,28)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="351.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="325" width="0.9245%" height="15" fill="rgb(238,59,32)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="335.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="309" width="0.9245%" height="15" fill="rgb(226,82,3)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="319.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="293" width="0.9245%" height="15" fill="rgb(240,164,32)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="303.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="277" width="0.9245%" height="15" fill="rgb(232,46,7)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="287.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="261" width="0.9245%" height="15" fill="rgb(229,129,53)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="271.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="245" width="0.9245%" height="15" fill="rgb(234,188,29)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="255.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="229" width="0.9245%" height="15" fill="rgb(246,141,4)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="239.50"></text></g><g><title>[unknown] (23,948,397 samples, 0.92%)</title><rect x="74.1940%" y="213" width="0.9245%" height="15" fill="rgb(229,23,39)" fg:x="1921951095" fg:w="23948397"/><text x="74.4440%" y="223.50"></text></g><g><title>[unknown] (13,805,845 samples, 0.53%)</title><rect x="74.5855%" y="197" width="0.5330%" height="15" fill="rgb(206,12,3)" fg:x="1932093647" fg:w="13805845"/><text x="74.8355%" y="207.50"></text></g><g><title>[unknown] (6,959,097 samples, 0.27%)</title><rect x="74.8498%" y="181" width="0.2686%" height="15" fill="rgb(252,226,20)" fg:x="1938940395" fg:w="6959097"/><text x="75.0998%" y="191.50"></text></g><g><title>[unknown] (3,469,047 samples, 0.13%)</title><rect x="74.9845%" y="165" width="0.1339%" height="15" fill="rgb(216,123,35)" fg:x="1942430445" fg:w="3469047"/><text x="75.2345%" y="175.50"></text></g><g><title>[unknown] (3,469,047 samples, 0.13%)</title><rect x="74.9845%" y="149" width="0.1339%" height="15" fill="rgb(212,68,40)" fg:x="1942430445" fg:w="3469047"/><text x="75.2345%" y="159.50"></text></g><g><title>[unknown] (3,469,047 samples, 0.13%)</title><rect x="74.9845%" y="133" width="0.1339%" height="15" fill="rgb(254,125,32)" fg:x="1942430445" fg:w="3469047"/><text x="75.2345%" y="143.50"></text></g><g><title>[unknown] (3,469,047 samples, 0.13%)</title><rect x="74.9845%" y="117" width="0.1339%" height="15" fill="rgb(253,97,22)" fg:x="1942430445" fg:w="3469047"/><text x="75.2345%" y="127.50"></text></g><g><title>[unknown] (3,469,047 samples, 0.13%)</title><rect x="74.9845%" y="101" width="0.1339%" height="15" fill="rgb(241,101,14)" fg:x="1942430445" fg:w="3469047"/><text x="75.2345%" y="111.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::identity (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="613" width="1.5884%" height="15" fill="rgb(238,103,29)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="623.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::identity_generic (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="597" width="1.5884%" height="15" fill="rgb(233,195,47)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="607.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_diagonal_element_generic (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="581" width="1.5884%" height="15" fill="rgb(246,218,30)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="591.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros_generic (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="565" width="1.5884%" height="15" fill="rgb(219,145,47)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="575.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_element_generic (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="549" width="1.5884%" height="15" fill="rgb(243,12,26)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="559.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_iterator_generic (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="533" width="1.5884%" height="15" fill="rgb(214,87,16)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="543.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::allocate_from_iterator (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="517" width="1.5884%" height="15" fill="rgb(208,99,42)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="501" width="1.5884%" height="15" fill="rgb(253,99,2)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="485" width="1.5884%" height="15" fill="rgb(220,168,23)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="469" width="1.5884%" height="15" fill="rgb(242,38,24)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="453" width="1.5884%" height="15" fill="rgb(225,182,9)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="437" width="1.5884%" height="15" fill="rgb(243,178,37)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="421" width="1.5884%" height="15" fill="rgb(232,139,19)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="405" width="1.5884%" height="15" fill="rgb(225,201,24)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="389" width="1.5884%" height="15" fill="rgb(221,47,46)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="373" width="1.5884%" height="15" fill="rgb(249,23,13)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="357" width="1.5884%" height="15" fill="rgb(219,9,5)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="341" width="1.5884%" height="15" fill="rgb(254,171,16)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="351.50"></text></g><g><title>core::ptr::write (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="325" width="1.5884%" height="15" fill="rgb(230,171,20)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="309" width="1.5884%" height="15" fill="rgb(210,71,41)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="319.50"></text></g><g><title>[unknown] (41,147,830 samples, 1.59%)</title><rect x="75.1184%" y="293" width="1.5884%" height="15" fill="rgb(206,173,20)" fg:x="1945899492" fg:w="41147830"/><text x="75.3684%" y="303.50"></text></g><g><title>[unknown] (30,899,453 samples, 1.19%)</title><rect x="75.5141%" y="277" width="1.1928%" height="15" fill="rgb(233,88,34)" fg:x="1956147869" fg:w="30899453"/><text x="75.7641%" y="287.50"></text></g><g><title>[unknown] (30,899,453 samples, 1.19%)</title><rect x="75.5141%" y="261" width="1.1928%" height="15" fill="rgb(223,209,46)" fg:x="1956147869" fg:w="30899453"/><text x="75.7641%" y="271.50"></text></g><g><title>[unknown] (30,899,453 samples, 1.19%)</title><rect x="75.5141%" y="245" width="1.1928%" height="15" fill="rgb(250,43,18)" fg:x="1956147869" fg:w="30899453"/><text x="75.7641%" y="255.50"></text></g><g><title>[unknown] (30,899,453 samples, 1.19%)</title><rect x="75.5141%" y="229" width="1.1928%" height="15" fill="rgb(208,13,10)" fg:x="1956147869" fg:w="30899453"/><text x="75.7641%" y="239.50"></text></g><g><title>[unknown] (27,506,085 samples, 1.06%)</title><rect x="75.6451%" y="213" width="1.0618%" height="15" fill="rgb(212,200,36)" fg:x="1959541237" fg:w="27506085"/><text x="75.8951%" y="223.50"></text></g><g><title>[unknown] (27,506,085 samples, 1.06%)</title><rect x="75.6451%" y="197" width="1.0618%" height="15" fill="rgb(225,90,30)" fg:x="1959541237" fg:w="27506085"/><text x="75.8951%" y="207.50"></text></g><g><title>[unknown] (17,229,409 samples, 0.67%)</title><rect x="76.0418%" y="181" width="0.6651%" height="15" fill="rgb(236,182,39)" fg:x="1969817913" fg:w="17229409"/><text x="76.2918%" y="191.50"></text></g><g><title>[unknown] (17,229,409 samples, 0.67%)</title><rect x="76.0418%" y="165" width="0.6651%" height="15" fill="rgb(212,144,35)" fg:x="1969817913" fg:w="17229409"/><text x="76.2918%" y="175.50"></text></g><g><title>[unknown] (17,229,409 samples, 0.67%)</title><rect x="76.0418%" y="149" width="0.6651%" height="15" fill="rgb(228,63,44)" fg:x="1969817913" fg:w="17229409"/><text x="76.2918%" y="159.50"></text></g><g><title>[unknown] (17,229,409 samples, 0.67%)</title><rect x="76.0418%" y="133" width="0.6651%" height="15" fill="rgb(228,109,6)" fg:x="1969817913" fg:w="17229409"/><text x="76.2918%" y="143.50"></text></g><g><title>[unknown] (13,783,279 samples, 0.53%)</title><rect x="76.1748%" y="117" width="0.5321%" height="15" fill="rgb(238,117,24)" fg:x="1973264043" fg:w="13783279"/><text x="76.4248%" y="127.50"></text></g><g><title>[unknown] (13,783,279 samples, 0.53%)</title><rect x="76.1748%" y="101" width="0.5321%" height="15" fill="rgb(242,26,26)" fg:x="1973264043" fg:w="13783279"/><text x="76.4248%" y="111.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose (14,447,100 samples, 0.56%)</title><rect x="76.7069%" y="613" width="0.5577%" height="15" fill="rgb(221,92,48)" fg:x="1987047322" fg:w="14447100"/><text x="76.9569%" y="623.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose_to_uninit (14,447,100 samples, 0.56%)</title><rect x="76.7069%" y="597" width="0.5577%" height="15" fill="rgb(209,209,32)" fg:x="1987047322" fg:w="14447100"/><text x="76.9569%" y="607.50"></text></g><g><title>&lt;nalgebra::base::uninit::Uninit as nalgebra::base::uninit::InitStatus&lt;T&gt;&gt;::init (14,447,100 samples, 0.56%)</title><rect x="76.7069%" y="581" width="0.5577%" height="15" fill="rgb(221,70,22)" fg:x="1987047322" fg:w="14447100"/><text x="76.9569%" y="591.50"></text></g><g><title>[unknown] (4,182,543 samples, 0.16%)</title><rect x="77.1031%" y="565" width="0.1615%" height="15" fill="rgb(248,145,5)" fg:x="1997311879" fg:w="4182543"/><text x="77.3531%" y="575.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (3,405,610 samples, 0.13%)</title><rect x="77.2646%" y="613" width="0.1315%" height="15" fill="rgb(226,116,26)" fg:x="2001494422" fg:w="3405610"/><text x="77.5146%" y="623.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (3,405,610 samples, 0.13%)</title><rect x="77.2646%" y="597" width="0.1315%" height="15" fill="rgb(244,5,17)" fg:x="2001494422" fg:w="3405610"/><text x="77.5146%" y="607.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (3,405,610 samples, 0.13%)</title><rect x="77.2646%" y="581" width="0.1315%" height="15" fill="rgb(252,159,33)" fg:x="2001494422" fg:w="3405610"/><text x="77.5146%" y="591.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (3,405,610 samples, 0.13%)</title><rect x="77.2646%" y="565" width="0.1315%" height="15" fill="rgb(206,71,0)" fg:x="2001494422" fg:w="3405610"/><text x="77.5146%" y="575.50"></text></g><g><title>matrixmultiply::gemm::make_packing_buffer (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="565" width="0.1346%" height="15" fill="rgb(233,118,54)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="575.50"></text></g><g><title>matrixmultiply::aligned_alloc::Alloc&lt;T&gt;::new (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="549" width="0.1346%" height="15" fill="rgb(234,83,48)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="559.50"></text></g><g><title>alloc::alloc::alloc (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="533" width="0.1346%" height="15" fill="rgb(228,3,54)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="543.50"></text></g><g><title>__rdl_alloc (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="517" width="0.1346%" height="15" fill="rgb(226,155,13)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="501" width="0.1346%" height="15" fill="rgb(241,28,37)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="511.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="485" width="0.1346%" height="15" fill="rgb(233,93,10)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="495.50"></text></g><g><title>__posix_memalign (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="469" width="0.1346%" height="15" fill="rgb(225,113,19)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="479.50"></text></g><g><title>__posix_memalign (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="453" width="0.1346%" height="15" fill="rgb(241,2,18)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="463.50"></text></g><g><title>_mid_memalign (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="437" width="0.1346%" height="15" fill="rgb(228,207,21)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="447.50"></text></g><g><title>_int_memalign (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="421" width="0.1346%" height="15" fill="rgb(213,211,35)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="431.50"></text></g><g><title>_int_malloc (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="405" width="0.1346%" height="15" fill="rgb(209,83,10)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="415.50"></text></g><g><title>sysmalloc (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="389" width="0.1346%" height="15" fill="rgb(209,164,1)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="399.50"></text></g><g><title>__glibc_morecore (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="373" width="0.1346%" height="15" fill="rgb(213,184,43)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="383.50"></text></g><g><title>__GI___sbrk (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="357" width="0.1346%" height="15" fill="rgb(231,61,34)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="367.50"></text></g><g><title>__brk (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="341" width="0.1346%" height="15" fill="rgb(235,75,3)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="351.50"></text></g><g><title>[unknown] (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="325" width="0.1346%" height="15" fill="rgb(220,106,47)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="335.50"></text></g><g><title>[unknown] (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="309" width="0.1346%" height="15" fill="rgb(210,196,33)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="319.50"></text></g><g><title>[unknown] (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="293" width="0.1346%" height="15" fill="rgb(229,154,42)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="303.50"></text></g><g><title>[unknown] (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="277" width="0.1346%" height="15" fill="rgb(228,114,26)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="287.50"></text></g><g><title>[unknown] (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="261" width="0.1346%" height="15" fill="rgb(208,144,1)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="271.50"></text></g><g><title>[unknown] (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="245" width="0.1346%" height="15" fill="rgb(239,112,37)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="255.50"></text></g><g><title>[unknown] (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="229" width="0.1346%" height="15" fill="rgb(210,96,50)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="239.50"></text></g><g><title>[unknown] (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="213" width="0.1346%" height="15" fill="rgb(222,178,2)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="223.50"></text></g><g><title>[unknown] (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="197" width="0.1346%" height="15" fill="rgb(226,74,18)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="207.50"></text></g><g><title>[unknown] (3,487,878 samples, 0.13%)</title><rect x="77.3961%" y="181" width="0.1346%" height="15" fill="rgb(225,67,54)" fg:x="2004900032" fg:w="3487878"/><text x="77.6461%" y="191.50"></text></g><g><title>matrixmultiply::gemm::pack (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="565" width="0.1330%" height="15" fill="rgb(251,92,32)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="549" width="0.1330%" height="15" fill="rgb(228,149,22)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="559.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="533" width="0.1330%" height="15" fill="rgb(243,54,13)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="543.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="517" width="0.1330%" height="15" fill="rgb(243,180,28)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="527.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="501" width="0.1330%" height="15" fill="rgb(208,167,24)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="511.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="485" width="0.1330%" height="15" fill="rgb(245,73,45)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="495.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="469" width="0.1330%" height="15" fill="rgb(237,203,48)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="479.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="453" width="0.1330%" height="15" fill="rgb(211,197,16)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="463.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="437" width="0.1330%" height="15" fill="rgb(243,99,51)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="447.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="421" width="0.1330%" height="15" fill="rgb(215,123,29)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="431.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="405" width="0.1330%" height="15" fill="rgb(239,186,37)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="415.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="389" width="0.1330%" height="15" fill="rgb(252,136,39)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="399.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="373" width="0.1330%" height="15" fill="rgb(223,213,32)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="383.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="357" width="0.1330%" height="15" fill="rgb(233,115,5)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="367.50"></text></g><g><title>[unknown] (3,445,528 samples, 0.13%)</title><rect x="77.5307%" y="341" width="0.1330%" height="15" fill="rgb(207,226,44)" fg:x="2008387910" fg:w="3445528"/><text x="77.7807%" y="351.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (62,071,231 samples, 2.40%)</title><rect x="78.0594%" y="437" width="2.3962%" height="15" fill="rgb(208,126,0)" fg:x="2022083510" fg:w="62071231"/><text x="78.3094%" y="447.50">&lt;m..</text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (62,071,231 samples, 2.40%)</title><rect x="78.0594%" y="421" width="2.3962%" height="15" fill="rgb(244,66,21)" fg:x="2022083510" fg:w="62071231"/><text x="78.3094%" y="431.50">co..</text></g><g><title>[unknown] (3,440,824 samples, 0.13%)</title><rect x="80.3228%" y="405" width="0.1328%" height="15" fill="rgb(222,97,12)" fg:x="2080713917" fg:w="3440824"/><text x="80.5728%" y="415.50"></text></g><g><title>[unknown] (3,440,824 samples, 0.13%)</title><rect x="80.3228%" y="389" width="0.1328%" height="15" fill="rgb(219,213,19)" fg:x="2080713917" fg:w="3440824"/><text x="80.5728%" y="399.50"></text></g><g><title>[unknown] (3,440,824 samples, 0.13%)</title><rect x="80.3228%" y="373" width="0.1328%" height="15" fill="rgb(252,169,30)" fg:x="2080713917" fg:w="3440824"/><text x="80.5728%" y="383.50"></text></g><g><title>[unknown] (3,440,824 samples, 0.13%)</title><rect x="80.3228%" y="357" width="0.1328%" height="15" fill="rgb(206,32,51)" fg:x="2080713917" fg:w="3440824"/><text x="80.5728%" y="367.50"></text></g><g><title>[unknown] (3,440,824 samples, 0.13%)</title><rect x="80.3228%" y="341" width="0.1328%" height="15" fill="rgb(250,172,42)" fg:x="2080713917" fg:w="3440824"/><text x="80.5728%" y="351.50"></text></g><g><title>[unknown] (3,440,824 samples, 0.13%)</title><rect x="80.3228%" y="325" width="0.1328%" height="15" fill="rgb(209,34,43)" fg:x="2080713917" fg:w="3440824"/><text x="80.5728%" y="335.50"></text></g><g><title>[unknown] (3,440,824 samples, 0.13%)</title><rect x="80.3228%" y="309" width="0.1328%" height="15" fill="rgb(223,11,35)" fg:x="2080713917" fg:w="3440824"/><text x="80.5728%" y="319.50"></text></g><g><title>[unknown] (3,440,824 samples, 0.13%)</title><rect x="80.3228%" y="293" width="0.1328%" height="15" fill="rgb(251,219,26)" fg:x="2080713917" fg:w="3440824"/><text x="80.5728%" y="303.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (24,417,080 samples, 0.94%)</title><rect x="80.4556%" y="437" width="0.9426%" height="15" fill="rgb(231,119,3)" fg:x="2084154741" fg:w="24417080"/><text x="80.7056%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (56,521,448 samples, 2.18%)</title><rect x="81.3982%" y="437" width="2.1819%" height="15" fill="rgb(216,97,11)" fg:x="2108571821" fg:w="56521448"/><text x="81.6482%" y="447.50">c..</text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (10,155,291 samples, 0.39%)</title><rect x="83.5801%" y="437" width="0.3920%" height="15" fill="rgb(223,59,9)" fg:x="2165093269" fg:w="10155291"/><text x="83.8301%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="437" width="0.1359%" height="15" fill="rgb(233,93,31)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="421" width="0.1359%" height="15" fill="rgb(239,81,33)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="431.50"></text></g><g><title>core::ptr::write_unaligned (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="405" width="0.1359%" height="15" fill="rgb(213,120,34)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="389" width="0.1359%" height="15" fill="rgb(243,49,53)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="399.50"></text></g><g><title>[unknown] (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="373" width="0.1359%" height="15" fill="rgb(247,216,33)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="383.50"></text></g><g><title>[unknown] (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="357" width="0.1359%" height="15" fill="rgb(226,26,14)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="367.50"></text></g><g><title>[unknown] (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="341" width="0.1359%" height="15" fill="rgb(215,49,53)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="351.50"></text></g><g><title>[unknown] (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="325" width="0.1359%" height="15" fill="rgb(245,162,40)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="335.50"></text></g><g><title>[unknown] (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="309" width="0.1359%" height="15" fill="rgb(229,68,17)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="319.50"></text></g><g><title>[unknown] (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="293" width="0.1359%" height="15" fill="rgb(213,182,10)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="303.50"></text></g><g><title>[unknown] (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="277" width="0.1359%" height="15" fill="rgb(245,125,30)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="287.50"></text></g><g><title>[unknown] (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="261" width="0.1359%" height="15" fill="rgb(232,202,2)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="271.50"></text></g><g><title>[unknown] (3,519,846 samples, 0.14%)</title><rect x="83.9721%" y="245" width="0.1359%" height="15" fill="rgb(237,140,51)" fg:x="2175248560" fg:w="3519846"/><text x="84.2221%" y="255.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (170,385,206 samples, 6.58%)</title><rect x="77.6637%" y="533" width="6.5775%" height="15" fill="rgb(236,157,25)" fg:x="2011833438" fg:w="170385206"/><text x="77.9137%" y="543.50">matrixmul..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (170,385,206 samples, 6.58%)</title><rect x="77.6637%" y="517" width="6.5775%" height="15" fill="rgb(219,209,0)" fg:x="2011833438" fg:w="170385206"/><text x="77.9137%" y="527.50">matrixmul..</text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (170,385,206 samples, 6.58%)</title><rect x="77.6637%" y="501" width="6.5775%" height="15" fill="rgb(240,116,54)" fg:x="2011833438" fg:w="170385206"/><text x="77.9137%" y="511.50">matrixmul..</text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (170,385,206 samples, 6.58%)</title><rect x="77.6637%" y="485" width="6.5775%" height="15" fill="rgb(216,10,36)" fg:x="2011833438" fg:w="170385206"/><text x="77.9137%" y="495.50">&lt;matrixmu..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (170,385,206 samples, 6.58%)</title><rect x="77.6637%" y="469" width="6.5775%" height="15" fill="rgb(222,72,44)" fg:x="2011833438" fg:w="170385206"/><text x="77.9137%" y="479.50">matrixmul..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (167,018,364 samples, 6.45%)</title><rect x="77.7937%" y="453" width="6.4475%" height="15" fill="rgb(232,159,9)" fg:x="2015200280" fg:w="167018364"/><text x="78.0437%" y="463.50">matrixmu..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,450,238 samples, 0.13%)</title><rect x="84.1080%" y="437" width="0.1332%" height="15" fill="rgb(210,39,32)" fg:x="2178768406" fg:w="3450238"/><text x="84.3580%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,450,238 samples, 0.13%)</title><rect x="84.1080%" y="421" width="0.1332%" height="15" fill="rgb(216,194,45)" fg:x="2178768406" fg:w="3450238"/><text x="84.3580%" y="431.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (180,764,970 samples, 6.98%)</title><rect x="77.3961%" y="613" width="6.9782%" height="15" fill="rgb(218,18,35)" fg:x="2004900032" fg:w="180764970"/><text x="77.6461%" y="623.50">nalgebra:..</text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (180,764,970 samples, 6.98%)</title><rect x="77.3961%" y="597" width="6.9782%" height="15" fill="rgb(207,83,51)" fg:x="2004900032" fg:w="180764970"/><text x="77.6461%" y="607.50">nalgebra:..</text></g><g><title>matrixmultiply::gemm::gemm_loop (180,764,970 samples, 6.98%)</title><rect x="77.3961%" y="581" width="6.9782%" height="15" fill="rgb(225,63,43)" fg:x="2004900032" fg:w="180764970"/><text x="77.6461%" y="591.50">matrixmul..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (173,831,564 samples, 6.71%)</title><rect x="77.6637%" y="565" width="6.7105%" height="15" fill="rgb(207,57,36)" fg:x="2011833438" fg:w="173831564"/><text x="77.9137%" y="575.50">matrixmul..</text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (173,831,564 samples, 6.71%)</title><rect x="77.6637%" y="549" width="6.7105%" height="15" fill="rgb(216,99,33)" fg:x="2011833438" fg:w="173831564"/><text x="77.9137%" y="559.50">matrixmul..</text></g><g><title>matrixmultiply::gemm::pack (3,446,358 samples, 0.13%)</title><rect x="84.2412%" y="533" width="0.1330%" height="15" fill="rgb(225,42,16)" fg:x="2182218644" fg:w="3446358"/><text x="84.4912%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,446,358 samples, 0.13%)</title><rect x="84.2412%" y="517" width="0.1330%" height="15" fill="rgb(220,201,45)" fg:x="2182218644" fg:w="3446358"/><text x="84.4912%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;nalgebra::base::matrix::Matrix&lt;f64,R,C,S&gt;&gt; for f64&gt;::mul (13,913,882 samples, 0.54%)</title><rect x="84.3742%" y="613" width="0.5371%" height="15" fill="rgb(225,33,4)" fg:x="2185665002" fg:w="13913882"/><text x="84.6242%" y="623.50"></text></g><g><title>nalgebra::base::min_max::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::icamax (3,451,814 samples, 0.13%)</title><rect x="84.9113%" y="581" width="0.1333%" height="15" fill="rgb(224,33,50)" fg:x="2199578884" fg:w="3451814"/><text x="85.1613%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (3,451,814 samples, 0.13%)</title><rect x="84.9113%" y="565" width="0.1333%" height="15" fill="rgb(246,198,51)" fg:x="2199578884" fg:w="3451814"/><text x="85.1613%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,480,821 samples, 0.13%)</title><rect x="85.0446%" y="565" width="0.1344%" height="15" fill="rgb(205,22,4)" fg:x="2203030698" fg:w="3480821"/><text x="85.2946%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,480,821 samples, 0.13%)</title><rect x="85.0446%" y="549" width="0.1344%" height="15" fill="rgb(206,3,8)" fg:x="2203030698" fg:w="3480821"/><text x="85.2946%" y="559.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (81,386,114 samples, 3.14%)</title><rect x="86.9008%" y="501" width="3.1418%" height="15" fill="rgb(251,23,15)" fg:x="2251114072" fg:w="81386114"/><text x="87.1508%" y="511.50">&lt;f6..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (52,048,180 samples, 2.01%)</title><rect x="90.0426%" y="501" width="2.0092%" height="15" fill="rgb(252,88,28)" fg:x="2332500186" fg:w="52048180"/><text x="90.2926%" y="511.50">c..</text></g><g><title>[unknown] (266,089 samples, 0.01%)</title><rect x="92.0415%" y="485" width="0.0103%" height="15" fill="rgb(212,127,14)" fg:x="2384282277" fg:w="266089"/><text x="92.2915%" y="495.50"></text></g><g><title>[unknown] (266,089 samples, 0.01%)</title><rect x="92.0415%" y="469" width="0.0103%" height="15" fill="rgb(247,145,37)" fg:x="2384282277" fg:w="266089"/><text x="92.2915%" y="479.50"></text></g><g><title>[unknown] (266,089 samples, 0.01%)</title><rect x="92.0415%" y="453" width="0.0103%" height="15" fill="rgb(209,117,53)" fg:x="2384282277" fg:w="266089"/><text x="92.2915%" y="463.50"></text></g><g><title>[unknown] (266,089 samples, 0.01%)</title><rect x="92.0415%" y="437" width="0.0103%" height="15" fill="rgb(212,90,42)" fg:x="2384282277" fg:w="266089"/><text x="92.2915%" y="447.50"></text></g><g><title>[unknown] (266,089 samples, 0.01%)</title><rect x="92.0415%" y="421" width="0.0103%" height="15" fill="rgb(218,164,37)" fg:x="2384282277" fg:w="266089"/><text x="92.2915%" y="431.50"></text></g><g><title>[unknown] (266,089 samples, 0.01%)</title><rect x="92.0415%" y="405" width="0.0103%" height="15" fill="rgb(246,65,34)" fg:x="2384282277" fg:w="266089"/><text x="92.2915%" y="415.50"></text></g><g><title>[unknown] (266,089 samples, 0.01%)</title><rect x="92.0415%" y="389" width="0.0103%" height="15" fill="rgb(231,100,33)" fg:x="2384282277" fg:w="266089"/><text x="92.2915%" y="399.50"></text></g><g><title>nalgebra::linalg::lu::gauss_step (209,118,337 samples, 8.07%)</title><rect x="85.0446%" y="581" width="8.0727%" height="15" fill="rgb(228,126,14)" fg:x="2203030698" fg:w="209118337"/><text x="85.2946%" y="591.50">nalgebra::l..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (205,637,516 samples, 7.94%)</title><rect x="85.1790%" y="565" width="7.9383%" height="15" fill="rgb(215,173,21)" fg:x="2206511519" fg:w="205637516"/><text x="85.4290%" y="575.50">nalgebra::b..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (205,637,516 samples, 7.94%)</title><rect x="85.1790%" y="549" width="7.9383%" height="15" fill="rgb(210,6,40)" fg:x="2206511519" fg:w="205637516"/><text x="85.4290%" y="559.50">nalgebra::b..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (205,637,516 samples, 7.94%)</title><rect x="85.1790%" y="533" width="7.9383%" height="15" fill="rgb(212,48,18)" fg:x="2206511519" fg:w="205637516"/><text x="85.4290%" y="543.50">nalgebra::b..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (205,637,516 samples, 7.94%)</title><rect x="85.1790%" y="517" width="7.9383%" height="15" fill="rgb(230,214,11)" fg:x="2206511519" fg:w="205637516"/><text x="85.4290%" y="527.50">nalgebra::b..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (27,600,669 samples, 1.07%)</title><rect x="92.0518%" y="501" width="1.0655%" height="15" fill="rgb(254,105,39)" fg:x="2384548366" fg:w="27600669"/><text x="92.3018%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (27,600,669 samples, 1.07%)</title><rect x="92.0518%" y="485" width="1.0655%" height="15" fill="rgb(245,158,5)" fg:x="2384548366" fg:w="27600669"/><text x="92.3018%" y="495.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (27,600,669 samples, 1.07%)</title><rect x="92.0518%" y="469" width="1.0655%" height="15" fill="rgb(249,208,11)" fg:x="2384548366" fg:w="27600669"/><text x="92.3018%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (27,600,669 samples, 1.07%)</title><rect x="92.0518%" y="453" width="1.0655%" height="15" fill="rgb(210,39,28)" fg:x="2384548366" fg:w="27600669"/><text x="92.3018%" y="463.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (13,800,012 samples, 0.53%)</title><rect x="93.1173%" y="565" width="0.5327%" height="15" fill="rgb(211,56,53)" fg:x="2412149035" fg:w="13800012"/><text x="93.3673%" y="575.50"></text></g><g><title>core::mem::swap (10,222,586 samples, 0.39%)</title><rect x="93.6500%" y="565" width="0.3946%" height="15" fill="rgb(226,201,30)" fg:x="2425949047" fg:w="10222586"/><text x="93.9000%" y="575.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (48,275,775 samples, 1.86%)</title><rect x="95.0414%" y="501" width="1.8636%" height="15" fill="rgb(239,101,34)" fg:x="2461991797" fg:w="48275775"/><text x="95.2914%" y="511.50">&lt;..</text></g><g><title>nalgebra::linalg::decomposition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::lu (352,160,143 samples, 13.59%)</title><rect x="84.9113%" y="613" width="13.5946%" height="15" fill="rgb(226,209,5)" fg:x="2199578884" fg:w="352160143"/><text x="85.1613%" y="623.50">nalgebra::linalg::dec..</text></g><g><title>nalgebra::linalg::lu::LU&lt;T,R,C&gt;::new (352,160,143 samples, 13.59%)</title><rect x="84.9113%" y="597" width="13.5946%" height="15" fill="rgb(250,105,47)" fg:x="2199578884" fg:w="352160143"/><text x="85.1613%" y="607.50">nalgebra::linalg::lu:..</text></g><g><title>nalgebra::linalg::lu::gauss_step_swap (139,589,992 samples, 5.39%)</title><rect x="93.1173%" y="581" width="5.3887%" height="15" fill="rgb(230,72,3)" fg:x="2412149035" fg:w="139589992"/><text x="93.3673%" y="591.50">nalgebr..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (115,567,394 samples, 4.46%)</title><rect x="94.0446%" y="565" width="4.4613%" height="15" fill="rgb(232,218,39)" fg:x="2436171633" fg:w="115567394"/><text x="94.2946%" y="575.50">nalge..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (115,567,394 samples, 4.46%)</title><rect x="94.0446%" y="549" width="4.4613%" height="15" fill="rgb(248,166,6)" fg:x="2436171633" fg:w="115567394"/><text x="94.2946%" y="559.50">nalge..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (115,567,394 samples, 4.46%)</title><rect x="94.0446%" y="533" width="4.4613%" height="15" fill="rgb(247,89,20)" fg:x="2436171633" fg:w="115567394"/><text x="94.2946%" y="543.50">nalge..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (115,567,394 samples, 4.46%)</title><rect x="94.0446%" y="517" width="4.4613%" height="15" fill="rgb(248,130,54)" fg:x="2436171633" fg:w="115567394"/><text x="94.2946%" y="527.50">nalge..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (41,471,455 samples, 1.60%)</title><rect x="96.9050%" y="501" width="1.6009%" height="15" fill="rgb(234,196,4)" fg:x="2510267572" fg:w="41471455"/><text x="97.1550%" y="511.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_vec (3,447,558 samples, 0.13%)</title><rect x="98.5059%" y="613" width="0.1331%" height="15" fill="rgb(250,143,31)" fg:x="2551739027" fg:w="3447558"/><text x="98.7559%" y="623.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_vec_impl (3,447,558 samples, 0.13%)</title><rect x="98.5059%" y="597" width="0.1331%" height="15" fill="rgb(211,110,34)" fg:x="2551739027" fg:w="3447558"/><text x="98.7559%" y="607.50"></text></g><g><title>ndarray::dimension::can_index_slice_with_strides (3,447,558 samples, 0.13%)</title><rect x="98.5059%" y="581" width="0.1331%" height="15" fill="rgb(215,124,48)" fg:x="2551739027" fg:w="3447558"/><text x="98.7559%" y="591.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Sub&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for &amp;ndarray::ArrayBase&lt;S,D&gt;&gt;::sub (3,359,580 samples, 0.13%)</title><rect x="98.6390%" y="613" width="0.1297%" height="15" fill="rgb(216,46,13)" fg:x="2555186585" fg:w="3359580"/><text x="98.8890%" y="623.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::map_collect (3,359,580 samples, 0.13%)</title><rect x="98.6390%" y="597" width="0.1297%" height="15" fill="rgb(205,184,25)" fg:x="2555186585" fg:w="3359580"/><text x="98.8890%" y="607.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::map_collect_owned (3,359,580 samples, 0.13%)</title><rect x="98.6390%" y="581" width="0.1297%" height="15" fill="rgb(228,1,10)" fg:x="2555186585" fg:w="3359580"/><text x="98.8890%" y="591.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::build_uninit (3,359,580 samples, 0.13%)</title><rect x="98.6390%" y="565" width="0.1297%" height="15" fill="rgb(213,116,27)" fg:x="2555186585" fg:w="3359580"/><text x="98.8890%" y="575.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::uninit (3,359,580 samples, 0.13%)</title><rect x="98.6390%" y="549" width="0.1297%" height="15" fill="rgb(241,95,50)" fg:x="2555186585" fg:w="3359580"/><text x="98.8890%" y="559.50"></text></g><g><title>ndarray::numeric::impl_numeric::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::sum (3,406,829 samples, 0.13%)</title><rect x="98.7687%" y="613" width="0.1315%" height="15" fill="rgb(238,48,32)" fg:x="2558546165" fg:w="3406829"/><text x="99.0187%" y="623.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::as_slice_memory_order (3,406,829 samples, 0.13%)</title><rect x="98.7687%" y="597" width="0.1315%" height="15" fill="rgb(235,113,49)" fg:x="2558546165" fg:w="3406829"/><text x="99.0187%" y="607.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::is_contiguous (3,406,829 samples, 0.13%)</title><rect x="98.7687%" y="581" width="0.1315%" height="15" fill="rgb(205,127,43)" fg:x="2558546165" fg:w="3406829"/><text x="99.0187%" y="591.50"></text></g><g><title>ndarray::dimension::dimension_trait::Dimension::is_contiguous (3,406,829 samples, 0.13%)</title><rect x="98.7687%" y="565" width="0.1315%" height="15" fill="rgb(250,162,2)" fg:x="2558546165" fg:w="3406829"/><text x="99.0187%" y="575.50"></text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::update_weights (712,828,925 samples, 27.52%)</title><rect x="71.5193%" y="629" width="27.5177%" height="15" fill="rgb(220,13,41)" fg:x="1852666064" fg:w="712828925"/><text x="71.7693%" y="639.50">rkl::core::optimizers::MarquardtOptimizer::u..</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="613" width="0.1367%" height="15" fill="rgb(249,221,25)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="623.50"></text></g><g><title>rkl::core::layers::Dense::forward (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="597" width="0.1367%" height="15" fill="rgb(215,208,19)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="607.50"></text></g><g><title>rkl::core::activations::Activation::forward (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="581" width="0.1367%" height="15" fill="rgb(236,175,2)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="591.50"></text></g><g><title>rkl::core::activations::tanh_forward (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="565" width="0.1367%" height="15" fill="rgb(241,52,2)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="575.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="549" width="0.1367%" height="15" fill="rgb(248,140,14)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="559.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="533" width="0.1367%" height="15" fill="rgb(253,22,42)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="543.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="517" width="0.1367%" height="15" fill="rgb(234,61,47)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="527.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="501" width="0.1367%" height="15" fill="rgb(208,226,15)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="485" width="0.1367%" height="15" fill="rgb(217,221,4)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="495.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="469" width="0.1367%" height="15" fill="rgb(212,174,34)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="479.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="453" width="0.1367%" height="15" fill="rgb(253,83,4)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="463.50"></text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="437" width="0.1367%" height="15" fill="rgb(250,195,49)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="447.50"></text></g><g><title>fastapprox::fast::tanh (3,541,995 samples, 0.14%)</title><rect x="98.9002%" y="421" width="0.1367%" height="15" fill="rgb(241,192,25)" fg:x="2561952994" fg:w="3541995"/><text x="99.1502%" y="431.50"></text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit (2,476,589,251 samples, 95.60%)</title><rect x="3.6968%" y="645" width="95.6049%" height="15" fill="rgb(208,124,10)" fg:x="95763181" fg:w="2476589251"/><text x="3.9468%" y="655.50">rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit</text></g><g><title>std::io::stdio::_print (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="629" width="0.2647%" height="15" fill="rgb(222,33,0)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="639.50"></text></g><g><title>std::io::stdio::print_to (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="613" width="0.2647%" height="15" fill="rgb(234,209,28)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="623.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="597" width="0.2647%" height="15" fill="rgb(224,11,23)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="607.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="581" width="0.2647%" height="15" fill="rgb(232,99,1)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="565" width="0.2647%" height="15" fill="rgb(237,95,45)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="575.50"></text></g><g><title>core::fmt::write (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="549" width="0.2647%" height="15" fill="rgb(208,109,11)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="559.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="533" width="0.2647%" height="15" fill="rgb(216,190,48)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="543.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="517" width="0.2647%" height="15" fill="rgb(251,171,36)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="527.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="501" width="0.2647%" height="15" fill="rgb(230,62,22)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="511.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="485" width="0.2647%" height="15" fill="rgb(225,114,35)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="495.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="469" width="0.2647%" height="15" fill="rgb(215,118,42)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="479.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="453" width="0.2647%" height="15" fill="rgb(243,119,21)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="463.50"></text></g><g><title>&lt;std::sys::pal::unix::stdio::Stdout as std::io::Write&gt;::write (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="437" width="0.2647%" height="15" fill="rgb(252,177,53)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="447.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="421" width="0.2647%" height="15" fill="rgb(237,209,29)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="431.50"></text></g><g><title>__GI___libc_write (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="405" width="0.2647%" height="15" fill="rgb(212,65,23)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="415.50"></text></g><g><title>[unknown] (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="389" width="0.2647%" height="15" fill="rgb(230,222,46)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="399.50"></text></g><g><title>[unknown] (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="373" width="0.2647%" height="15" fill="rgb(215,135,32)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="383.50"></text></g><g><title>[unknown] (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="357" width="0.2647%" height="15" fill="rgb(246,101,22)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="367.50"></text></g><g><title>[unknown] (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="341" width="0.2647%" height="15" fill="rgb(206,107,13)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="351.50"></text></g><g><title>[unknown] (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="325" width="0.2647%" height="15" fill="rgb(250,100,44)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="335.50"></text></g><g><title>[unknown] (6,857,443 samples, 0.26%)</title><rect x="99.0370%" y="309" width="0.2647%" height="15" fill="rgb(231,147,38)" fg:x="2565494989" fg:w="6857443"/><text x="99.2870%" y="319.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="293" width="0.1332%" height="15" fill="rgb(229,8,40)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="303.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="277" width="0.1332%" height="15" fill="rgb(221,135,30)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="287.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="261" width="0.1332%" height="15" fill="rgb(249,193,18)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="271.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="245" width="0.1332%" height="15" fill="rgb(209,133,39)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="255.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="229" width="0.1332%" height="15" fill="rgb(232,100,14)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="239.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="213" width="0.1332%" height="15" fill="rgb(224,185,1)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="223.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="197" width="0.1332%" height="15" fill="rgb(223,139,8)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="207.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="181" width="0.1332%" height="15" fill="rgb(232,213,38)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="191.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="165" width="0.1332%" height="15" fill="rgb(207,94,22)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="175.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="149" width="0.1332%" height="15" fill="rgb(219,183,54)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="159.50"></text></g><g><title>[unknown] (3,450,602 samples, 0.13%)</title><rect x="99.1685%" y="133" width="0.1332%" height="15" fill="rgb(216,185,54)" fg:x="2568901830" fg:w="3450602"/><text x="99.4185%" y="143.50"></text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::save (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="645" width="0.1341%" height="15" fill="rgb(254,217,39)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="655.50"></text></g><g><title>std::fs::File::create (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="629" width="0.1341%" height="15" fill="rgb(240,178,23)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="639.50"></text></g><g><title>std::fs::OpenOptions::open (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="613" width="0.1341%" height="15" fill="rgb(218,11,47)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="623.50"></text></g><g><title>std::fs::OpenOptions::_open (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="597" width="0.1341%" height="15" fill="rgb(218,51,51)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="607.50"></text></g><g><title>std::sys::pal::unix::fs::File::open (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="581" width="0.1341%" height="15" fill="rgb(238,126,27)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="591.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="565" width="0.1341%" height="15" fill="rgb(249,202,22)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="575.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="549" width="0.1341%" height="15" fill="rgb(254,195,49)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="559.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="533" width="0.1341%" height="15" fill="rgb(208,123,14)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="543.50"></text></g><g><title>std::sys::pal::unix::fs::File::open::_{{closure}} (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="517" width="0.1341%" height="15" fill="rgb(224,200,8)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="527.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="501" width="0.1341%" height="15" fill="rgb(217,61,36)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="511.50"></text></g><g><title>std::sys::pal::unix::cvt_r (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="485" width="0.1341%" height="15" fill="rgb(206,35,45)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="495.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c::_{{closure}} (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="469" width="0.1341%" height="15" fill="rgb(217,65,33)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="479.50"></text></g><g><title>__libc_open64 (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="453" width="0.1341%" height="15" fill="rgb(222,158,48)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="463.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="437" width="0.1341%" height="15" fill="rgb(254,2,54)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="447.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="421" width="0.1341%" height="15" fill="rgb(250,143,38)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="431.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="405" width="0.1341%" height="15" fill="rgb(248,25,0)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="415.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="389" width="0.1341%" height="15" fill="rgb(206,152,27)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="399.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="373" width="0.1341%" height="15" fill="rgb(240,77,30)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="383.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="357" width="0.1341%" height="15" fill="rgb(231,5,3)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="367.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="341" width="0.1341%" height="15" fill="rgb(207,226,32)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="351.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="325" width="0.1341%" height="15" fill="rgb(222,207,47)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="335.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="309" width="0.1341%" height="15" fill="rgb(229,115,45)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="319.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="293" width="0.1341%" height="15" fill="rgb(224,191,6)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="303.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="277" width="0.1341%" height="15" fill="rgb(230,227,24)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="287.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="261" width="0.1341%" height="15" fill="rgb(228,80,19)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="271.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="245" width="0.1341%" height="15" fill="rgb(247,229,0)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="255.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="229" width="0.1341%" height="15" fill="rgb(237,194,15)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="239.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="213" width="0.1341%" height="15" fill="rgb(219,203,20)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="223.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="197" width="0.1341%" height="15" fill="rgb(234,128,8)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="207.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="181" width="0.1341%" height="15" fill="rgb(248,202,8)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="191.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="165" width="0.1341%" height="15" fill="rgb(206,104,37)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="175.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="149" width="0.1341%" height="15" fill="rgb(223,8,27)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="159.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="133" width="0.1341%" height="15" fill="rgb(216,217,28)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="143.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="117" width="0.1341%" height="15" fill="rgb(249,199,1)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="127.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="101" width="0.1341%" height="15" fill="rgb(240,85,17)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="111.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="85" width="0.1341%" height="15" fill="rgb(206,108,45)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="95.50"></text></g><g><title>[unknown] (3,473,806 samples, 0.13%)</title><rect x="99.3017%" y="69" width="0.1341%" height="15" fill="rgb(245,210,41)" fg:x="2572352432" fg:w="3473806"/><text x="99.5517%" y="79.50"></text></g><g><title>__libc_start_main_impl (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="901" width="95.8713%" height="15" fill="rgb(206,13,37)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="911.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="885" width="95.8713%" height="15" fill="rgb(250,61,18)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="895.50">__libc_start_call_main</text></g><g><title>main (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="869" width="95.8713%" height="15" fill="rgb(235,172,48)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="853" width="95.8713%" height="15" fill="rgb(249,201,17)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="837" width="95.8713%" height="15" fill="rgb(219,208,6)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="821" width="95.8713%" height="15" fill="rgb(248,31,23)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="805" width="95.8713%" height="15" fill="rgb(245,15,42)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="789" width="95.8713%" height="15" fill="rgb(222,217,39)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="799.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="773" width="95.8713%" height="15" fill="rgb(210,219,27)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="757" width="95.8713%" height="15" fill="rgb(252,166,36)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="741" width="95.8713%" height="15" fill="rgb(245,132,34)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="725" width="95.8713%" height="15" fill="rgb(236,54,3)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="709" width="95.8713%" height="15" fill="rgb(241,173,43)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="719.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="693" width="95.8713%" height="15" fill="rgb(215,190,9)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="703.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="677" width="95.8713%" height="15" fill="rgb(242,101,16)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="687.50">core::ops::function::FnOnce::call_once</text></g><g><title>main_benchmark::main (2,483,490,659 samples, 95.87%)</title><rect x="3.6968%" y="661" width="95.8713%" height="15" fill="rgb(223,190,21)" fg:x="95763181" fg:w="2483490659"/><text x="3.9468%" y="671.50">main_benchmark::main</text></g><g><title>rkl::plot::plot_comparision::plot_comparison (3,427,602 samples, 0.13%)</title><rect x="99.4358%" y="645" width="0.1323%" height="15" fill="rgb(215,228,25)" fg:x="2575826238" fg:w="3427602"/><text x="99.6858%" y="655.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::fill (3,427,602 samples, 0.13%)</title><rect x="99.4358%" y="629" width="0.1323%" height="15" fill="rgb(225,36,22)" fg:x="2575826238" fg:w="3427602"/><text x="99.6858%" y="639.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (3,427,602 samples, 0.13%)</title><rect x="99.4358%" y="613" width="0.1323%" height="15" fill="rgb(251,106,46)" fg:x="2575826238" fg:w="3427602"/><text x="99.6858%" y="623.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::fill::_{{closure}} (3,427,602 samples, 0.13%)</title><rect x="99.4358%" y="597" width="0.1323%" height="15" fill="rgb(208,90,1)" fg:x="2575826238" fg:w="3427602"/><text x="99.6858%" y="607.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::draw_rect (3,427,602 samples, 0.13%)</title><rect x="99.4358%" y="581" width="0.1323%" height="15" fill="rgb(243,10,4)" fg:x="2575826238" fg:w="3427602"/><text x="99.6858%" y="591.50"></text></g><g><title>__memset_avx2_unaligned_erms (3,427,602 samples, 0.13%)</title><rect x="99.4358%" y="565" width="0.1323%" height="15" fill="rgb(212,137,27)" fg:x="2575826238" fg:w="3427602"/><text x="99.6858%" y="575.50"></text></g><g><title>[unknown] (3,427,602 samples, 0.13%)</title><rect x="99.4358%" y="549" width="0.1323%" height="15" fill="rgb(231,220,49)" fg:x="2575826238" fg:w="3427602"/><text x="99.6858%" y="559.50"></text></g><g><title>main_benchmark (2,590,327,178 samples, 100.00%)</title><rect x="0.0000%" y="933" width="99.9956%" height="15" fill="rgb(237,96,20)" fg:x="0" fg:w="2590327178"/><text x="0.2500%" y="943.50">main_benchmark</text></g><g><title>_start (2,494,563,997 samples, 96.30%)</title><rect x="3.6968%" y="917" width="96.2988%" height="15" fill="rgb(239,229,30)" fg:x="95763181" fg:w="2494563997"/><text x="3.9468%" y="927.50">_start</text></g><g><title>_dl_start (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="901" width="0.4275%" height="15" fill="rgb(219,65,33)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="911.50"></text></g><g><title>_dl_start_final (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="885" width="0.4275%" height="15" fill="rgb(243,134,7)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="895.50"></text></g><g><title>_dl_sysdep_start (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="869" width="0.4275%" height="15" fill="rgb(216,177,54)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="879.50"></text></g><g><title>dl_main (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="853" width="0.4275%" height="15" fill="rgb(211,160,20)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="863.50"></text></g><g><title>_dl_map_object_deps (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="837" width="0.4275%" height="15" fill="rgb(239,85,39)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="847.50"></text></g><g><title>__GI__dl_catch_exception (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="821" width="0.4275%" height="15" fill="rgb(232,125,22)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="831.50"></text></g><g><title>openaux (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="805" width="0.4275%" height="15" fill="rgb(244,57,34)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="815.50"></text></g><g><title>_dl_map_object (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="789" width="0.4275%" height="15" fill="rgb(214,203,32)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="799.50"></text></g><g><title>_dl_map_object_from_fd (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="773" width="0.4275%" height="15" fill="rgb(207,58,43)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="783.50"></text></g><g><title>_dl_map_segments (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="757" width="0.4275%" height="15" fill="rgb(215,193,15)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="767.50"></text></g><g><title>__mmap64 (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="741" width="0.4275%" height="15" fill="rgb(232,15,44)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="751.50"></text></g><g><title>__mmap64 (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="725" width="0.4275%" height="15" fill="rgb(212,3,48)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="735.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="709" width="0.4275%" height="15" fill="rgb(218,128,7)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="719.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="693" width="0.4275%" height="15" fill="rgb(226,216,39)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="703.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="677" width="0.4275%" height="15" fill="rgb(243,47,51)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="687.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="661" width="0.4275%" height="15" fill="rgb(241,183,40)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="671.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="645" width="0.4275%" height="15" fill="rgb(231,217,32)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="655.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="629" width="0.4275%" height="15" fill="rgb(229,61,38)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="639.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="613" width="0.4275%" height="15" fill="rgb(225,210,5)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="623.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="597" width="0.4275%" height="15" fill="rgb(231,79,45)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="607.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="581" width="0.4275%" height="15" fill="rgb(224,100,7)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="591.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="565" width="0.4275%" height="15" fill="rgb(241,198,18)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="575.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="549" width="0.4275%" height="15" fill="rgb(252,97,53)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="559.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="533" width="0.4275%" height="15" fill="rgb(220,88,7)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="543.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="517" width="0.4275%" height="15" fill="rgb(213,176,14)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="527.50"></text></g><g><title>[unknown] (11,073,338 samples, 0.43%)</title><rect x="99.5681%" y="501" width="0.4275%" height="15" fill="rgb(246,73,7)" fg:x="2579253840" fg:w="11073338"/><text x="99.8181%" y="511.50"></text></g><g><title>all (2,590,441,577 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(245,64,36)" fg:x="0" fg:w="2590441577"/><text x="0.2500%" y="959.50"></text></g></svg></svg>