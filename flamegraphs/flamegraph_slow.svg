<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1013.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="3845599434"><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::new (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="933" width="0.0888%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="943.50"></text></g><g><title>plotters::style::font::ttf::load_font_data (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="917" width="0.0888%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="901" width="0.0888%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="885" width="0.0888%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="895.50"></text></g><g><title>plotters::style::font::ttf::load_font_data::_{{closure}} (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="869" width="0.0888%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="879.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_best_match (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="853" width="0.0888%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="863.50"></text></g><g><title>font_kit::source::Source::select_best_match (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="837" width="0.0888%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="847.50"></text></g><g><title>font_kit::source::Source::select_family_by_generic_name (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="821" width="0.0888%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="831.50"></text></g><g><title>&lt;font_kit::sources::fontconfig::FontconfigSource as font_kit::source::Source&gt;::select_family_by_name (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="805" width="0.0888%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="815.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_family_by_name (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="789" width="0.0888%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="799.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_generic_font (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="773" width="0.0888%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="783.50"></text></g><g><title>font_kit::sources::fontconfig::fc::Pattern::config_substitute (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="757" width="0.0888%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="767.50"></text></g><g><title>FcConfigSubstituteWithPat (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="741" width="0.0888%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="751.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="725" width="0.0888%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="735.50"></text></g><g><title>FcConfigBuildFonts (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="709" width="0.0888%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="719.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="693" width="0.0888%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="703.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="677" width="0.0888%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="687.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="661" width="0.0888%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="671.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="645" width="0.0888%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="655.50"></text></g><g><title>__libc_open64 (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="629" width="0.0888%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="639.50"></text></g><g><title>[unknown] (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="613" width="0.0888%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="623.50"></text></g><g><title>[unknown] (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="597" width="0.0888%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="607.50"></text></g><g><title>[unknown] (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="581" width="0.0888%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="591.50"></text></g><g><title>[unknown] (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="565" width="0.0888%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="575.50"></text></g><g><title>[unknown] (3,414,642 samples, 0.09%)</title><rect x="0.0000%" y="549" width="0.0888%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="3414642"/><text x="0.2500%" y="559.50"></text></g><g><title>FcConfigGetFilename (6,824,690 samples, 0.18%)</title><rect x="0.0888%" y="917" width="0.1775%" height="15" fill="rgb(249,31,29)" fg:x="3414642" fg:w="6824690"/><text x="0.3388%" y="927.50"></text></g><g><title>[libfontconfig.so.1.12.1] (6,824,690 samples, 0.18%)</title><rect x="0.0888%" y="901" width="0.1775%" height="15" fill="rgb(225,111,53)" fg:x="3414642" fg:w="6824690"/><text x="0.3388%" y="911.50"></text></g><g><title>__GI___access (6,824,690 samples, 0.18%)</title><rect x="0.0888%" y="885" width="0.1775%" height="15" fill="rgb(238,160,17)" fg:x="3414642" fg:w="6824690"/><text x="0.3388%" y="895.50"></text></g><g><title>[unknown] (6,824,690 samples, 0.18%)</title><rect x="0.0888%" y="869" width="0.1775%" height="15" fill="rgb(214,148,48)" fg:x="3414642" fg:w="6824690"/><text x="0.3388%" y="879.50"></text></g><g><title>[unknown] (6,824,690 samples, 0.18%)</title><rect x="0.0888%" y="853" width="0.1775%" height="15" fill="rgb(232,36,49)" fg:x="3414642" fg:w="6824690"/><text x="0.3388%" y="863.50"></text></g><g><title>[unknown] (6,824,690 samples, 0.18%)</title><rect x="0.0888%" y="837" width="0.1775%" height="15" fill="rgb(209,103,24)" fg:x="3414642" fg:w="6824690"/><text x="0.3388%" y="847.50"></text></g><g><title>[unknown] (6,824,690 samples, 0.18%)</title><rect x="0.0888%" y="821" width="0.1775%" height="15" fill="rgb(229,88,8)" fg:x="3414642" fg:w="6824690"/><text x="0.3388%" y="831.50"></text></g><g><title>[unknown] (6,824,690 samples, 0.18%)</title><rect x="0.0888%" y="805" width="0.1775%" height="15" fill="rgb(213,181,19)" fg:x="3414642" fg:w="6824690"/><text x="0.3388%" y="815.50"></text></g><g><title>[unknown] (6,824,690 samples, 0.18%)</title><rect x="0.0888%" y="789" width="0.1775%" height="15" fill="rgb(254,191,54)" fg:x="3414642" fg:w="6824690"/><text x="0.3388%" y="799.50"></text></g><g><title>[unknown] (3,410,038 samples, 0.09%)</title><rect x="0.1776%" y="773" width="0.0887%" height="15" fill="rgb(241,83,37)" fg:x="6829294" fg:w="3410038"/><text x="0.4276%" y="783.50"></text></g><g><title>[unknown] (3,410,038 samples, 0.09%)</title><rect x="0.1776%" y="757" width="0.0887%" height="15" fill="rgb(233,36,39)" fg:x="6829294" fg:w="3410038"/><text x="0.4276%" y="767.50"></text></g><g><title>[unknown] (3,410,038 samples, 0.09%)</title><rect x="0.1776%" y="741" width="0.0887%" height="15" fill="rgb(226,3,54)" fg:x="6829294" fg:w="3410038"/><text x="0.4276%" y="751.50"></text></g><g><title>FcStrSetMember (3,411,870 samples, 0.09%)</title><rect x="0.2663%" y="917" width="0.0887%" height="15" fill="rgb(245,192,40)" fg:x="10239332" fg:w="3411870"/><text x="0.5163%" y="927.50"></text></g><g><title>[libexpat.so.1.9.1] (17,077,386 samples, 0.44%)</title><rect x="0.7095%" y="821" width="0.4441%" height="15" fill="rgb(238,167,29)" fg:x="27285589" fg:w="17077386"/><text x="0.9595%" y="831.50"></text></g><g><title>[libexpat.so.1.9.1] (3,409,772 samples, 0.09%)</title><rect x="1.0649%" y="805" width="0.0887%" height="15" fill="rgb(232,182,51)" fg:x="40953203" fg:w="3409772"/><text x="1.3149%" y="815.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,415,829 samples, 0.09%)</title><rect x="1.1536%" y="805" width="0.0888%" height="15" fill="rgb(231,60,39)" fg:x="44362975" fg:w="3415829"/><text x="1.4036%" y="815.50"></text></g><g><title>[libexpat.so.1.9.1] (37,536,333 samples, 0.98%)</title><rect x="0.3550%" y="837" width="0.9761%" height="15" fill="rgb(208,69,12)" fg:x="13651202" fg:w="37536333"/><text x="0.6050%" y="847.50"></text></g><g><title>[libfontconfig.so.1.12.1] (6,824,560 samples, 0.18%)</title><rect x="1.1536%" y="821" width="0.1775%" height="15" fill="rgb(235,93,37)" fg:x="44362975" fg:w="6824560"/><text x="1.4036%" y="831.50"></text></g><g><title>__strcpy_avx2 (3,408,731 samples, 0.09%)</title><rect x="1.2424%" y="805" width="0.0886%" height="15" fill="rgb(213,116,39)" fg:x="47778804" fg:w="3408731"/><text x="1.4924%" y="815.50"></text></g><g><title>[libexpat.so.1.9.1] (40,952,334 samples, 1.06%)</title><rect x="0.3550%" y="869" width="1.0649%" height="15" fill="rgb(222,207,29)" fg:x="13651202" fg:w="40952334"/><text x="0.6050%" y="879.50"></text></g><g><title>[libexpat.so.1.9.1] (40,952,334 samples, 1.06%)</title><rect x="0.3550%" y="853" width="1.0649%" height="15" fill="rgb(206,96,30)" fg:x="13651202" fg:w="40952334"/><text x="0.6050%" y="863.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,416,001 samples, 0.09%)</title><rect x="1.3311%" y="837" width="0.0888%" height="15" fill="rgb(218,138,4)" fg:x="51187535" fg:w="3416001"/><text x="1.5811%" y="847.50"></text></g><g><title>__GI___libc_malloc (3,416,001 samples, 0.09%)</title><rect x="1.3311%" y="821" width="0.0888%" height="15" fill="rgb(250,191,14)" fg:x="51187535" fg:w="3416001"/><text x="1.5811%" y="831.50"></text></g><g><title>_int_malloc (3,416,001 samples, 0.09%)</title><rect x="1.3311%" y="805" width="0.0888%" height="15" fill="rgb(239,60,40)" fg:x="51187535" fg:w="3416001"/><text x="1.5811%" y="815.50"></text></g><g><title>[libfontconfig.so.1.12.1] (44,385,253 samples, 1.15%)</title><rect x="0.3550%" y="917" width="1.1542%" height="15" fill="rgb(206,27,48)" fg:x="13651202" fg:w="44385253"/><text x="0.6050%" y="927.50"></text></g><g><title>XML_ParseBuffer (44,385,253 samples, 1.15%)</title><rect x="0.3550%" y="901" width="1.1542%" height="15" fill="rgb(225,35,8)" fg:x="13651202" fg:w="44385253"/><text x="0.6050%" y="911.50"></text></g><g><title>[libexpat.so.1.9.1] (44,385,253 samples, 1.15%)</title><rect x="0.3550%" y="885" width="1.1542%" height="15" fill="rgb(250,213,24)" fg:x="13651202" fg:w="44385253"/><text x="0.6050%" y="895.50"></text></g><g><title>__GI___arc4random_buf (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="869" width="0.0893%" height="15" fill="rgb(247,123,22)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="879.50"></text></g><g><title>__GI___arc4random_buf (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="853" width="0.0893%" height="15" fill="rgb(231,138,38)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="863.50"></text></g><g><title>__getrandom_nocancel (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="837" width="0.0893%" height="15" fill="rgb(231,145,46)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="847.50"></text></g><g><title>[unknown] (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="821" width="0.0893%" height="15" fill="rgb(251,118,11)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="831.50"></text></g><g><title>[unknown] (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="805" width="0.0893%" height="15" fill="rgb(217,147,25)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="815.50"></text></g><g><title>[unknown] (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="789" width="0.0893%" height="15" fill="rgb(247,81,37)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="799.50"></text></g><g><title>[unknown] (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="773" width="0.0893%" height="15" fill="rgb(209,12,38)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="783.50"></text></g><g><title>[unknown] (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="757" width="0.0893%" height="15" fill="rgb(227,1,9)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="767.50"></text></g><g><title>[unknown] (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="741" width="0.0893%" height="15" fill="rgb(248,47,43)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="751.50"></text></g><g><title>[unknown] (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="725" width="0.0893%" height="15" fill="rgb(221,10,30)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="735.50"></text></g><g><title>[unknown] (3,432,919 samples, 0.09%)</title><rect x="1.4199%" y="709" width="0.0893%" height="15" fill="rgb(210,229,1)" fg:x="54603536" fg:w="3432919"/><text x="1.6699%" y="719.50"></text></g><g><title>__GI___fstatat64 (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="917" width="0.0889%" height="15" fill="rgb(222,148,37)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="927.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="901" width="0.0889%" height="15" fill="rgb(234,67,33)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="911.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="885" width="0.0889%" height="15" fill="rgb(247,98,35)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="895.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="869" width="0.0889%" height="15" fill="rgb(247,138,52)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="879.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="853" width="0.0889%" height="15" fill="rgb(213,79,30)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="863.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="837" width="0.0889%" height="15" fill="rgb(246,177,23)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="847.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="821" width="0.0889%" height="15" fill="rgb(230,62,27)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="831.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="805" width="0.0889%" height="15" fill="rgb(216,154,8)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="815.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="789" width="0.0889%" height="15" fill="rgb(244,35,45)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="799.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="773" width="0.0889%" height="15" fill="rgb(251,115,12)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="783.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="757" width="0.0889%" height="15" fill="rgb(240,54,50)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="767.50"></text></g><g><title>[unknown] (3,418,378 samples, 0.09%)</title><rect x="1.5092%" y="741" width="0.0889%" height="15" fill="rgb(233,84,52)" fg:x="58036455" fg:w="3418378"/><text x="1.7592%" y="751.50"></text></g><g><title>[libfontconfig.so.1.12.1] (61,448,545 samples, 1.60%)</title><rect x="0.0888%" y="933" width="1.5979%" height="15" fill="rgb(207,117,47)" fg:x="3414642" fg:w="61448545"/><text x="0.3388%" y="943.50"></text></g><g><title>__readlink (3,408,354 samples, 0.09%)</title><rect x="1.5981%" y="917" width="0.0886%" height="15" fill="rgb(249,43,39)" fg:x="61454833" fg:w="3408354"/><text x="1.8481%" y="927.50"></text></g><g><title>[unknown] (3,408,354 samples, 0.09%)</title><rect x="1.5981%" y="901" width="0.0886%" height="15" fill="rgb(209,38,44)" fg:x="61454833" fg:w="3408354"/><text x="1.8481%" y="911.50"></text></g><g><title>[unknown] (3,408,354 samples, 0.09%)</title><rect x="1.5981%" y="885" width="0.0886%" height="15" fill="rgb(236,212,23)" fg:x="61454833" fg:w="3408354"/><text x="1.8481%" y="895.50"></text></g><g><title>[unknown] (3,408,354 samples, 0.09%)</title><rect x="1.5981%" y="869" width="0.0886%" height="15" fill="rgb(242,79,21)" fg:x="61454833" fg:w="3408354"/><text x="1.8481%" y="879.50"></text></g><g><title>[unknown] (3,408,354 samples, 0.09%)</title><rect x="1.5981%" y="853" width="0.0886%" height="15" fill="rgb(211,96,35)" fg:x="61454833" fg:w="3408354"/><text x="1.8481%" y="863.50"></text></g><g><title>[unknown] (3,408,354 samples, 0.09%)</title><rect x="1.5981%" y="837" width="0.0886%" height="15" fill="rgb(253,215,40)" fg:x="61454833" fg:w="3408354"/><text x="1.8481%" y="847.50"></text></g><g><title>[unknown] (3,408,354 samples, 0.09%)</title><rect x="1.5981%" y="821" width="0.0886%" height="15" fill="rgb(211,81,21)" fg:x="61454833" fg:w="3408354"/><text x="1.8481%" y="831.50"></text></g><g><title>[libfreetype.so.6.20.1] (3,444,507 samples, 0.09%)</title><rect x="1.6867%" y="933" width="0.0896%" height="15" fill="rgb(208,190,38)" fg:x="64863187" fg:w="3444507"/><text x="1.9367%" y="943.50"></text></g><g><title>[libfreetype.so.6.20.1] (3,444,507 samples, 0.09%)</title><rect x="1.6867%" y="917" width="0.0896%" height="15" fill="rgb(235,213,38)" fg:x="64863187" fg:w="3444507"/><text x="1.9367%" y="927.50"></text></g><g><title>FT_Outline_Decompose (3,444,507 samples, 0.09%)</title><rect x="1.6867%" y="901" width="0.0896%" height="15" fill="rgb(237,122,38)" fg:x="64863187" fg:w="3444507"/><text x="1.9367%" y="911.50"></text></g><g><title>[libfreetype.so.6.20.1] (3,444,507 samples, 0.09%)</title><rect x="1.6867%" y="885" width="0.0896%" height="15" fill="rgb(244,218,35)" fg:x="64863187" fg:w="3444507"/><text x="1.9367%" y="895.50"></text></g><g><title>[libfreetype.so.6.20.1] (3,444,507 samples, 0.09%)</title><rect x="1.6867%" y="869" width="0.0896%" height="15" fill="rgb(240,68,47)" fg:x="64863187" fg:w="3444507"/><text x="1.9367%" y="879.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="933" width="0.1003%" height="15" fill="rgb(210,16,53)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="943.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="917" width="0.1003%" height="15" fill="rgb(235,124,12)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="927.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="901" width="0.1003%" height="15" fill="rgb(224,169,11)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="911.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="885" width="0.1003%" height="15" fill="rgb(250,166,2)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="895.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="869" width="0.1003%" height="15" fill="rgb(242,216,29)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="879.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="853" width="0.1003%" height="15" fill="rgb(230,116,27)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="863.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="837" width="0.1003%" height="15" fill="rgb(228,99,48)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="847.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="821" width="0.1003%" height="15" fill="rgb(253,11,6)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="831.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="805" width="0.1003%" height="15" fill="rgb(247,143,39)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="815.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="789" width="0.1003%" height="15" fill="rgb(236,97,10)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="799.50"></text></g><g><title>[unknown] (3,856,660 samples, 0.10%)</title><rect x="1.7763%" y="773" width="0.1003%" height="15" fill="rgb(233,208,19)" fg:x="68307694" fg:w="3856660"/><text x="2.0263%" y="783.50"></text></g><g><title>[unknown] (3,424,830 samples, 0.09%)</title><rect x="1.7875%" y="757" width="0.0891%" height="15" fill="rgb(216,164,2)" fg:x="68739524" fg:w="3424830"/><text x="2.0375%" y="767.50"></text></g><g><title>[unknown] (3,424,830 samples, 0.09%)</title><rect x="1.7875%" y="741" width="0.0891%" height="15" fill="rgb(220,129,5)" fg:x="68739524" fg:w="3424830"/><text x="2.0375%" y="751.50"></text></g><g><title>[unknown] (3,424,830 samples, 0.09%)</title><rect x="1.7875%" y="725" width="0.0891%" height="15" fill="rgb(242,17,10)" fg:x="68739524" fg:w="3424830"/><text x="2.0375%" y="735.50"></text></g><g><title>main_benchmark::main (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="933" width="0.0890%" height="15" fill="rgb(242,107,0)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="943.50"></text></g><g><title>rkl::plot::plot_comparision::plot_comparison (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="917" width="0.0890%" height="15" fill="rgb(251,28,31)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="927.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="901" width="0.0890%" height="15" fill="rgb(233,223,10)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="911.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="885" width="0.0890%" height="15" fill="rgb(215,21,27)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="895.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present::_{{closure}} (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="869" width="0.0890%" height="15" fill="rgb(232,23,21)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="879.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::present (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="853" width="0.0890%" height="15" fill="rgb(244,5,23)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="863.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="837" width="0.0890%" height="15" fill="rgb(226,81,46)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="847.50"></text></g><g><title>image::dynimage::save_buffer (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="821" width="0.0890%" height="15" fill="rgb(247,70,30)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="831.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="805" width="0.0890%" height="15" fill="rgb(212,68,19)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="815.50"></text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="789" width="0.0890%" height="15" fill="rgb(240,187,13)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;&gt; (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="773" width="0.0890%" height="15" fill="rgb(223,113,26)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="783.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as core::ops::drop::Drop&gt;::drop (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="757" width="0.0890%" height="15" fill="rgb(206,192,2)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="767.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="741" width="0.0890%" height="15" fill="rgb(241,108,4)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="751.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="725" width="0.0890%" height="15" fill="rgb(247,173,49)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="735.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="709" width="0.0890%" height="15" fill="rgb(224,114,35)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="719.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="693" width="0.0890%" height="15" fill="rgb(245,159,27)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="703.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="677" width="0.0890%" height="15" fill="rgb(245,172,44)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="687.50"></text></g><g><title>__GI___libc_write (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="661" width="0.0890%" height="15" fill="rgb(236,23,11)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="671.50"></text></g><g><title>[unknown] (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="645" width="0.0890%" height="15" fill="rgb(205,117,38)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="655.50"></text></g><g><title>[unknown] (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="629" width="0.0890%" height="15" fill="rgb(237,72,25)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="639.50"></text></g><g><title>[unknown] (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="613" width="0.0890%" height="15" fill="rgb(244,70,9)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="623.50"></text></g><g><title>[unknown] (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="597" width="0.0890%" height="15" fill="rgb(217,125,39)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="607.50"></text></g><g><title>[unknown] (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="581" width="0.0890%" height="15" fill="rgb(235,36,10)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="591.50"></text></g><g><title>[unknown] (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="565" width="0.0890%" height="15" fill="rgb(251,123,47)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="575.50"></text></g><g><title>[unknown] (3,422,574 samples, 0.09%)</title><rect x="1.8765%" y="549" width="0.0890%" height="15" fill="rgb(221,13,13)" fg:x="72164354" fg:w="3422574"/><text x="2.1265%" y="559.50"></text></g><g><title>plotters::chart::mesh::MeshStyle&lt;X,Y,DB&gt;::draw (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="933" width="0.0893%" height="15" fill="rgb(238,131,9)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="943.50"></text></g><g><title>plotters::chart::context::cartesian2d::draw_impl::&lt;impl plotters::chart::context::ChartContext&lt;DB,plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;&gt;&gt;::draw_mesh (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="917" width="0.0893%" height="15" fill="rgb(211,50,8)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="927.50"></text></g><g><title>plotters::chart::context::cartesian2d::draw_impl::&lt;impl plotters::chart::context::ChartContext&lt;DB,plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;&gt;&gt;::draw_axis_and_labels (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="901" width="0.0893%" height="15" fill="rgb(245,182,24)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="911.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,plotters::coord::Shift&gt;::draw_text (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="885" width="0.0893%" height="15" fill="rgb(242,14,37)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="895.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="869" width="0.0893%" height="15" fill="rgb(246,228,12)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="879.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,plotters::coord::Shift&gt;::draw_text::_{{closure}} (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="853" width="0.0893%" height="15" fill="rgb(213,55,15)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="863.50"></text></g><g><title>plotters_backend::DrawingBackend::draw_text (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="837" width="0.0893%" height="15" fill="rgb(209,9,3)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="847.50"></text></g><g><title>&lt;plotters::style::text::TextStyle as plotters_backend::text::BackendTextStyle&gt;::layout_box (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="821" width="0.0893%" height="15" fill="rgb(230,59,30)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="831.50"></text></g><g><title>plotters::style::font::font_desc::FontDesc::layout_box (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="805" width="0.0893%" height="15" fill="rgb(209,121,21)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="815.50"></text></g><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::estimate_layout (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="789" width="0.0893%" height="15" fill="rgb(220,109,13)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="799.50"></text></g><g><title>font_kit::loaders::freetype::Font::advance (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="773" width="0.0893%" height="15" fill="rgb(232,18,1)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="783.50"></text></g><g><title>FT_Load_Glyph (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="757" width="0.0893%" height="15" fill="rgb(215,41,42)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="767.50"></text></g><g><title>[libfreetype.so.6.20.1] (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="741" width="0.0893%" height="15" fill="rgb(224,123,36)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="751.50"></text></g><g><title>[libfreetype.so.6.20.1] (3,434,417 samples, 0.09%)</title><rect x="1.9655%" y="725" width="0.0893%" height="15" fill="rgb(240,125,3)" fg:x="75586928" fg:w="3434417"/><text x="2.2155%" y="735.50"></text></g><g><title>plotters::style::font::font_desc::FontDesc::new (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="933" width="0.0887%" height="15" fill="rgb(205,98,50)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="943.50"></text></g><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::new (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="917" width="0.0887%" height="15" fill="rgb(205,185,37)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="927.50"></text></g><g><title>plotters::style::font::ttf::load_font_data (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="901" width="0.0887%" height="15" fill="rgb(238,207,15)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="885" width="0.0887%" height="15" fill="rgb(213,199,42)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="869" width="0.0887%" height="15" fill="rgb(235,201,11)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="853" width="0.0887%" height="15" fill="rgb(207,46,11)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="863.50"></text></g><g><title>plotters::style::font::ttf::FONT_SOURCE::_{{constant}}::_{{closure}} (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="837" width="0.0887%" height="15" fill="rgb(241,35,35)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="847.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="821" width="0.0887%" height="15" fill="rgb(243,32,47)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="831.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::initialize (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="805" width="0.0887%" height="15" fill="rgb(247,202,23)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="789" width="0.0887%" height="15" fill="rgb(219,102,11)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="773" width="0.0887%" height="15" fill="rgb(243,110,44)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="783.50"></text></g><g><title>plotters::style::font::ttf::FONT_SOURCE::__init (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="757" width="0.0887%" height="15" fill="rgb(222,74,54)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="767.50"></text></g><g><title>FcInitLoadConfigAndFonts (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="741" width="0.0887%" height="15" fill="rgb(216,99,12)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="751.50"></text></g><g><title>FcConfigBuildFonts (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="725" width="0.0887%" height="15" fill="rgb(226,22,26)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="735.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="709" width="0.0887%" height="15" fill="rgb(217,163,10)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="719.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="693" width="0.0887%" height="15" fill="rgb(213,25,53)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="703.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="677" width="0.0887%" height="15" fill="rgb(252,105,26)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="687.50"></text></g><g><title>__libc_open64 (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="661" width="0.0887%" height="15" fill="rgb(220,39,43)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="671.50"></text></g><g><title>[unknown] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="645" width="0.0887%" height="15" fill="rgb(229,68,48)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="655.50"></text></g><g><title>[unknown] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="629" width="0.0887%" height="15" fill="rgb(252,8,32)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="639.50"></text></g><g><title>[unknown] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="613" width="0.0887%" height="15" fill="rgb(223,20,43)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="623.50"></text></g><g><title>[unknown] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="597" width="0.0887%" height="15" fill="rgb(229,81,49)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="607.50"></text></g><g><title>[unknown] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="581" width="0.0887%" height="15" fill="rgb(236,28,36)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="591.50"></text></g><g><title>[unknown] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="565" width="0.0887%" height="15" fill="rgb(249,185,26)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="575.50"></text></g><g><title>[unknown] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="549" width="0.0887%" height="15" fill="rgb(249,174,33)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="559.50"></text></g><g><title>[unknown] (3,411,257 samples, 0.09%)</title><rect x="2.0549%" y="533" width="0.0887%" height="15" fill="rgb(233,201,37)" fg:x="79021345" fg:w="3411257"/><text x="2.3049%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="789" width="0.0889%" height="15" fill="rgb(221,78,26)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="799.50"></text></g><g><title>plotters::style::font::ttf::FONT_SOURCE::_{{constant}}::_{{closure}} (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="773" width="0.0889%" height="15" fill="rgb(250,127,30)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="783.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="757" width="0.0889%" height="15" fill="rgb(230,49,44)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="767.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::initialize (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="741" width="0.0889%" height="15" fill="rgb(229,67,23)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="725" width="0.0889%" height="15" fill="rgb(249,83,47)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="709" width="0.0889%" height="15" fill="rgb(215,43,3)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="719.50"></text></g><g><title>plotters::style::font::ttf::FONT_SOURCE::__init (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="693" width="0.0889%" height="15" fill="rgb(238,154,13)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="703.50"></text></g><g><title>FcInitLoadConfigAndFonts (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="677" width="0.0889%" height="15" fill="rgb(219,56,2)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="687.50"></text></g><g><title>FcConfigBuildFonts (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="661" width="0.0889%" height="15" fill="rgb(233,0,4)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="671.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="645" width="0.0889%" height="15" fill="rgb(235,30,7)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="655.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="629" width="0.0889%" height="15" fill="rgb(250,79,13)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="639.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="613" width="0.0889%" height="15" fill="rgb(211,146,34)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="623.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,420,417 samples, 0.09%)</title><rect x="2.1436%" y="597" width="0.0889%" height="15" fill="rgb(228,22,38)" fg:x="82432602" fg:w="3420417"/><text x="2.3936%" y="607.50"></text></g><g><title>font_kit::source::Source::select_descriptions_in_family (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="741" width="0.0895%" height="15" fill="rgb(235,168,5)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="751.50"></text></g><g><title>font_kit::loaders::freetype::Font::from_handle (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="725" width="0.0895%" height="15" fill="rgb(221,155,16)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="735.50"></text></g><g><title>font_kit::loader::Loader::from_handle (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="709" width="0.0895%" height="15" fill="rgb(215,215,53)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="719.50"></text></g><g><title>font_kit::loader::Loader::from_path (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="693" width="0.0895%" height="15" fill="rgb(223,4,10)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="703.50"></text></g><g><title>&lt;font_kit::loaders::freetype::Font as font_kit::loader::Loader&gt;::from_file (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="677" width="0.0895%" height="15" fill="rgb(234,103,6)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="687.50"></text></g><g><title>font_kit::loaders::freetype::Font::from_file (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="661" width="0.0895%" height="15" fill="rgb(227,97,0)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="671.50"></text></g><g><title>font_kit::utils::slurp_file (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="645" width="0.0895%" height="15" fill="rgb(234,150,53)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="655.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_end (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="629" width="0.0895%" height="15" fill="rgb(228,201,54)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="639.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_to_end (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="613" width="0.0895%" height="15" fill="rgb(222,22,37)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="623.50"></text></g><g><title>std::io::default_read_to_end (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="597" width="0.0895%" height="15" fill="rgb(237,53,32)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="607.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="581" width="0.0895%" height="15" fill="rgb(233,25,53)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="591.50"></text></g><g><title>std::sys::pal::unix::fs::File::read_buf (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="565" width="0.0895%" height="15" fill="rgb(210,40,34)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="575.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="549" width="0.0895%" height="15" fill="rgb(241,220,44)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="559.50"></text></g><g><title>__GI___libc_read (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="533" width="0.0895%" height="15" fill="rgb(235,28,35)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="543.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="517" width="0.0895%" height="15" fill="rgb(210,56,17)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="527.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="501" width="0.0895%" height="15" fill="rgb(224,130,29)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="511.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="485" width="0.0895%" height="15" fill="rgb(235,212,8)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="495.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="469" width="0.0895%" height="15" fill="rgb(223,33,50)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="479.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="453" width="0.0895%" height="15" fill="rgb(219,149,13)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="463.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="437" width="0.0895%" height="15" fill="rgb(250,156,29)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="447.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="421" width="0.0895%" height="15" fill="rgb(216,193,19)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="431.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="405" width="0.0895%" height="15" fill="rgb(216,135,14)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="415.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="389" width="0.0895%" height="15" fill="rgb(241,47,5)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="399.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="373" width="0.0895%" height="15" fill="rgb(233,42,35)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="383.50"></text></g><g><title>[unknown] (3,440,846 samples, 0.09%)</title><rect x="2.2325%" y="357" width="0.0895%" height="15" fill="rgb(231,13,6)" fg:x="85853019" fg:w="3440846"/><text x="2.4825%" y="367.50"></text></g><g><title>font_kit::sources::fontconfig::fc::Pattern::config_substitute (3,414,393 samples, 0.09%)</title><rect x="2.3220%" y="677" width="0.0888%" height="15" fill="rgb(207,181,40)" fg:x="89293865" fg:w="3414393"/><text x="2.5720%" y="687.50"></text></g><g><title>FcConfigSubstituteWithPat (3,414,393 samples, 0.09%)</title><rect x="2.3220%" y="661" width="0.0888%" height="15" fill="rgb(254,173,49)" fg:x="89293865" fg:w="3414393"/><text x="2.5720%" y="671.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,414,393 samples, 0.09%)</title><rect x="2.3220%" y="645" width="0.0888%" height="15" fill="rgb(221,1,38)" fg:x="89293865" fg:w="3414393"/><text x="2.5720%" y="655.50"></text></g><g><title>FcConfigBuildFonts (3,414,393 samples, 0.09%)</title><rect x="2.3220%" y="629" width="0.0888%" height="15" fill="rgb(206,124,46)" fg:x="89293865" fg:w="3414393"/><text x="2.5720%" y="639.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,414,393 samples, 0.09%)</title><rect x="2.3220%" y="613" width="0.0888%" height="15" fill="rgb(249,21,11)" fg:x="89293865" fg:w="3414393"/><text x="2.5720%" y="623.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,414,393 samples, 0.09%)</title><rect x="2.3220%" y="597" width="0.0888%" height="15" fill="rgb(222,201,40)" fg:x="89293865" fg:w="3414393"/><text x="2.5720%" y="607.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,414,393 samples, 0.09%)</title><rect x="2.3220%" y="581" width="0.0888%" height="15" fill="rgb(235,61,29)" fg:x="89293865" fg:w="3414393"/><text x="2.5720%" y="591.50"></text></g><g><title>&lt;T as plotters::style::font::font_desc::IntoFont&gt;::into_font (13,697,812 samples, 0.36%)</title><rect x="2.1436%" y="917" width="0.3562%" height="15" fill="rgb(219,207,3)" fg:x="82432602" fg:w="13697812"/><text x="2.3936%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13,697,812 samples, 0.36%)</title><rect x="2.1436%" y="901" width="0.3562%" height="15" fill="rgb(222,56,46)" fg:x="82432602" fg:w="13697812"/><text x="2.3936%" y="911.50"></text></g><g><title>&lt;plotters::style::font::font_desc::FontDesc as core::convert::From&lt;(&amp;str,T)&gt;&gt;::from (13,697,812 samples, 0.36%)</title><rect x="2.1436%" y="885" width="0.3562%" height="15" fill="rgb(239,76,54)" fg:x="82432602" fg:w="13697812"/><text x="2.3936%" y="895.50"></text></g><g><title>plotters::style::font::font_desc::FontDesc::new (13,697,812 samples, 0.36%)</title><rect x="2.1436%" y="869" width="0.3562%" height="15" fill="rgb(231,124,27)" fg:x="82432602" fg:w="13697812"/><text x="2.3936%" y="879.50"></text></g><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::new (13,697,812 samples, 0.36%)</title><rect x="2.1436%" y="853" width="0.3562%" height="15" fill="rgb(249,195,6)" fg:x="82432602" fg:w="13697812"/><text x="2.3936%" y="863.50"></text></g><g><title>plotters::style::font::ttf::load_font_data (13,697,812 samples, 0.36%)</title><rect x="2.1436%" y="837" width="0.3562%" height="15" fill="rgb(237,174,47)" fg:x="82432602" fg:w="13697812"/><text x="2.3936%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,697,812 samples, 0.36%)</title><rect x="2.1436%" y="821" width="0.3562%" height="15" fill="rgb(206,201,31)" fg:x="82432602" fg:w="13697812"/><text x="2.3936%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,697,812 samples, 0.36%)</title><rect x="2.1436%" y="805" width="0.3562%" height="15" fill="rgb(231,57,52)" fg:x="82432602" fg:w="13697812"/><text x="2.3936%" y="815.50"></text></g><g><title>plotters::style::font::ttf::load_font_data::_{{closure}} (10,277,395 samples, 0.27%)</title><rect x="2.2325%" y="789" width="0.2673%" height="15" fill="rgb(248,177,22)" fg:x="85853019" fg:w="10277395"/><text x="2.4825%" y="799.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_best_match (10,277,395 samples, 0.27%)</title><rect x="2.2325%" y="773" width="0.2673%" height="15" fill="rgb(215,211,37)" fg:x="85853019" fg:w="10277395"/><text x="2.4825%" y="783.50"></text></g><g><title>font_kit::source::Source::select_best_match (10,277,395 samples, 0.27%)</title><rect x="2.2325%" y="757" width="0.2673%" height="15" fill="rgb(241,128,51)" fg:x="85853019" fg:w="10277395"/><text x="2.4825%" y="767.50"></text></g><g><title>font_kit::source::Source::select_family_by_generic_name (6,836,549 samples, 0.18%)</title><rect x="2.3220%" y="741" width="0.1778%" height="15" fill="rgb(227,165,31)" fg:x="89293865" fg:w="6836549"/><text x="2.5720%" y="751.50"></text></g><g><title>&lt;font_kit::sources::fontconfig::FontconfigSource as font_kit::source::Source&gt;::select_family_by_name (6,836,549 samples, 0.18%)</title><rect x="2.3220%" y="725" width="0.1778%" height="15" fill="rgb(228,167,24)" fg:x="89293865" fg:w="6836549"/><text x="2.5720%" y="735.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_family_by_name (6,836,549 samples, 0.18%)</title><rect x="2.3220%" y="709" width="0.1778%" height="15" fill="rgb(228,143,12)" fg:x="89293865" fg:w="6836549"/><text x="2.5720%" y="719.50"></text></g><g><title>font_kit::sources::fontconfig::FontconfigSource::select_generic_font (6,836,549 samples, 0.18%)</title><rect x="2.3220%" y="693" width="0.1778%" height="15" fill="rgb(249,149,8)" fg:x="89293865" fg:w="6836549"/><text x="2.5720%" y="703.50"></text></g><g><title>font_kit::sources::fontconfig::fc::Pattern::sorted (3,422,156 samples, 0.09%)</title><rect x="2.4108%" y="677" width="0.0890%" height="15" fill="rgb(243,35,44)" fg:x="92708258" fg:w="3422156"/><text x="2.6608%" y="687.50"></text></g><g><title>FcFontSort (3,422,156 samples, 0.09%)</title><rect x="2.4108%" y="661" width="0.0890%" height="15" fill="rgb(246,89,9)" fg:x="92708258" fg:w="3422156"/><text x="2.6608%" y="671.50"></text></g><g><title>FcFontSetSort (3,422,156 samples, 0.09%)</title><rect x="2.4108%" y="645" width="0.0890%" height="15" fill="rgb(233,213,13)" fg:x="92708258" fg:w="3422156"/><text x="2.6608%" y="655.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,422,156 samples, 0.09%)</title><rect x="2.4108%" y="629" width="0.0890%" height="15" fill="rgb(233,141,41)" fg:x="92708258" fg:w="3422156"/><text x="2.6608%" y="639.50"></text></g><g><title>[libfontconfig.so.1.12.1] (3,422,156 samples, 0.09%)</title><rect x="2.4108%" y="613" width="0.0890%" height="15" fill="rgb(239,167,4)" fg:x="92708258" fg:w="3422156"/><text x="2.6608%" y="623.50"></text></g><g><title>[unknown] (102,978,733 samples, 2.68%)</title><rect x="0.0000%" y="949" width="2.6778%" height="15" fill="rgb(209,217,16)" fg:x="0" fg:w="102978733"/><text x="0.2500%" y="959.50">[u..</text></g><g><title>rkl::plot::plot_comparision::plot_comparison (20,546,131 samples, 0.53%)</title><rect x="2.1436%" y="933" width="0.5343%" height="15" fill="rgb(219,88,35)" fg:x="82432602" fg:w="20546131"/><text x="2.3936%" y="943.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="917" width="0.1781%" height="15" fill="rgb(220,193,23)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="927.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="901" width="0.1781%" height="15" fill="rgb(230,90,52)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="911.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present::_{{closure}} (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="885" width="0.1781%" height="15" fill="rgb(252,106,19)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="895.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::present (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="869" width="0.1781%" height="15" fill="rgb(206,74,20)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="879.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="853" width="0.1781%" height="15" fill="rgb(230,138,44)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="863.50"></text></g><g><title>image::dynimage::save_buffer (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="837" width="0.1781%" height="15" fill="rgb(235,182,43)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="847.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="821" width="0.1781%" height="15" fill="rgb(242,16,51)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="831.50"></text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="805" width="0.1781%" height="15" fill="rgb(248,9,4)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="815.50"></text></g><g><title>image::io::free_functions::write_buffer_impl (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="789" width="0.1781%" height="15" fill="rgb(210,31,22)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="799.50"></text></g><g><title>&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="773" width="0.1781%" height="15" fill="rgb(239,54,39)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="783.50"></text></g><g><title>image::codecs::png::PngEncoder&lt;W&gt;::encode_inner (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="757" width="0.1781%" height="15" fill="rgb(230,99,41)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="767.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_image_data (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="741" width="0.1781%" height="15" fill="rgb(253,106,12)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="751.50"></text></g><g><title>fdeflate::compress::Compressor&lt;W&gt;::write_data (6,848,319 samples, 0.18%)</title><rect x="2.4998%" y="725" width="0.1781%" height="15" fill="rgb(213,46,41)" fg:x="96130414" fg:w="6848319"/><text x="2.7498%" y="735.50"></text></g><g><title>fdeflate::compress::Compressor&lt;W&gt;::write_run (3,426,025 samples, 0.09%)</title><rect x="2.5887%" y="709" width="0.0891%" height="15" fill="rgb(215,133,35)" fg:x="99552708" fg:w="3426025"/><text x="2.8387%" y="719.50"></text></g><g><title>fdeflate::compress::Compressor&lt;W&gt;::write_bits (3,426,025 samples, 0.09%)</title><rect x="2.5887%" y="693" width="0.0891%" height="15" fill="rgb(213,28,5)" fg:x="99552708" fg:w="3426025"/><text x="2.8387%" y="703.50"></text></g><g><title>__GI___libc_free (3,404,399 samples, 0.09%)</title><rect x="2.6778%" y="949" width="0.0885%" height="15" fill="rgb(215,77,49)" fg:x="102978733" fg:w="3404399"/><text x="2.9278%" y="959.50"></text></g><g><title>_int_free (3,404,399 samples, 0.09%)</title><rect x="2.6778%" y="933" width="0.0885%" height="15" fill="rgb(248,100,22)" fg:x="102978733" fg:w="3404399"/><text x="2.9278%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,248,201 samples, 0.27%)</title><rect x="2.7664%" y="469" width="0.2665%" height="15" fill="rgb(208,67,9)" fg:x="106383132" fg:w="10248201"/><text x="3.0164%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,248,201 samples, 0.27%)</title><rect x="2.7664%" y="453" width="0.2665%" height="15" fill="rgb(219,133,21)" fg:x="106383132" fg:w="10248201"/><text x="3.0164%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (10,248,201 samples, 0.27%)</title><rect x="2.7664%" y="437" width="0.2665%" height="15" fill="rgb(246,46,29)" fg:x="106383132" fg:w="10248201"/><text x="3.0164%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,248,201 samples, 0.27%)</title><rect x="2.7664%" y="421" width="0.2665%" height="15" fill="rgb(246,185,52)" fg:x="106383132" fg:w="10248201"/><text x="3.0164%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (10,248,201 samples, 0.27%)</title><rect x="2.7664%" y="405" width="0.2665%" height="15" fill="rgb(252,136,11)" fg:x="106383132" fg:w="10248201"/><text x="3.0164%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10,248,201 samples, 0.27%)</title><rect x="2.7664%" y="389" width="0.2665%" height="15" fill="rgb(219,138,53)" fg:x="106383132" fg:w="10248201"/><text x="3.0164%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (10,248,201 samples, 0.27%)</title><rect x="2.7664%" y="373" width="0.2665%" height="15" fill="rgb(211,51,23)" fg:x="106383132" fg:w="10248201"/><text x="3.0164%" y="383.50"></text></g><g><title>&lt;rkl::models::Sequential&lt;T&gt; as core::clone::Clone&gt;::clone (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="469" width="0.1783%" height="15" fill="rgb(247,221,28)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="453" width="0.1783%" height="15" fill="rgb(251,222,45)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="437" width="0.1783%" height="15" fill="rgb(217,162,53)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="421" width="0.1783%" height="15" fill="rgb(229,93,14)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="405" width="0.1783%" height="15" fill="rgb(209,67,49)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="415.50"></text></g><g><title>&lt;rkl::core::layers::Dense as core::clone::Clone&gt;::clone (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="389" width="0.1783%" height="15" fill="rgb(213,87,29)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="399.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="373" width="0.1783%" height="15" fill="rgb(205,151,52)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="383.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="357" width="0.1783%" height="15" fill="rgb(253,215,39)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="367.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="341" width="0.1783%" height="15" fill="rgb(221,220,41)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="325" width="0.1783%" height="15" fill="rgb(218,133,21)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="309" width="0.1783%" height="15" fill="rgb(221,193,43)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="293" width="0.1783%" height="15" fill="rgb(240,128,52)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="277" width="0.1783%" height="15" fill="rgb(253,114,12)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="261" width="0.1783%" height="15" fill="rgb(215,223,47)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="245" width="0.1783%" height="15" fill="rgb(248,225,23)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="229" width="0.1783%" height="15" fill="rgb(250,108,0)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6,857,868 samples, 0.18%)</title><rect x="3.0329%" y="213" width="0.1783%" height="15" fill="rgb(228,208,7)" fg:x="116631333" fg:w="6857868"/><text x="3.2829%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="469" width="0.5332%" height="15" fill="rgb(244,45,10)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="453" width="0.5332%" height="15" fill="rgb(207,125,25)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="437" width="0.5332%" height="15" fill="rgb(210,195,18)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="421" width="0.5332%" height="15" fill="rgb(249,80,12)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="405" width="0.5332%" height="15" fill="rgb(221,65,9)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="389" width="0.5332%" height="15" fill="rgb(235,49,36)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="373" width="0.5332%" height="15" fill="rgb(225,32,20)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="357" width="0.5332%" height="15" fill="rgb(215,141,46)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="341" width="0.5332%" height="15" fill="rgb(250,160,47)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="325" width="0.5332%" height="15" fill="rgb(216,222,40)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="335.50"></text></g><g><title>alloc::alloc::alloc (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="309" width="0.5332%" height="15" fill="rgb(234,217,39)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="319.50"></text></g><g><title>__GI___libc_malloc (20,505,264 samples, 0.53%)</title><rect x="3.2112%" y="293" width="0.5332%" height="15" fill="rgb(207,178,40)" fg:x="123489201" fg:w="20505264"/><text x="3.4612%" y="303.50"></text></g><g><title>_int_malloc (3,405,621 samples, 0.09%)</title><rect x="3.6558%" y="277" width="0.0886%" height="15" fill="rgb(221,136,13)" fg:x="140588844" fg:w="3405621"/><text x="3.9058%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;&gt; (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="469" width="0.0886%" height="15" fill="rgb(249,199,10)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rkl::core::layers::Dense&gt;&gt; (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="453" width="0.0886%" height="15" fill="rgb(249,222,13)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="437" width="0.0886%" height="15" fill="rgb(244,185,38)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rkl::core::layers::Dense]&gt; (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="421" width="0.0886%" height="15" fill="rgb(236,202,9)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rkl::core::layers::Dense&gt; (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="405" width="0.0886%" height="15" fill="rgb(250,229,37)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="389" width="0.0886%" height="15" fill="rgb(206,174,23)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="373" width="0.0886%" height="15" fill="rgb(211,33,43)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="383.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="357" width="0.0886%" height="15" fill="rgb(245,58,50)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="341" width="0.0886%" height="15" fill="rgb(244,68,36)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="325" width="0.0886%" height="15" fill="rgb(232,229,15)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="309" width="0.0886%" height="15" fill="rgb(254,30,23)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="293" width="0.0886%" height="15" fill="rgb(235,160,14)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="277" width="0.0886%" height="15" fill="rgb(212,155,44)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (3,407,106 samples, 0.09%)</title><rect x="3.7444%" y="261" width="0.0886%" height="15" fill="rgb(226,2,50)" fg:x="143994465" fg:w="3407106"/><text x="3.9944%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (5,430,491 samples, 0.14%)</title><rect x="3.8330%" y="469" width="0.1412%" height="15" fill="rgb(234,177,6)" fg:x="147401571" fg:w="5430491"/><text x="4.0830%" y="479.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="469" width="0.2645%" height="15" fill="rgb(217,24,9)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="479.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="453" width="0.2645%" height="15" fill="rgb(220,13,46)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="463.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="437" width="0.2645%" height="15" fill="rgb(239,221,27)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="421" width="0.2645%" height="15" fill="rgb(222,198,25)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="405" width="0.2645%" height="15" fill="rgb(211,99,13)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="389" width="0.2645%" height="15" fill="rgb(232,111,31)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="373" width="0.2645%" height="15" fill="rgb(245,82,37)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="357" width="0.2645%" height="15" fill="rgb(227,149,46)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="341" width="0.2645%" height="15" fill="rgb(218,36,50)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="325" width="0.2645%" height="15" fill="rgb(226,80,48)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="335.50"></text></g><g><title>__memcpy_avx_unaligned_erms (10,169,895 samples, 0.26%)</title><rect x="3.9742%" y="309" width="0.2645%" height="15" fill="rgb(238,224,15)" fg:x="152832062" fg:w="10169895"/><text x="4.2242%" y="319.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_vec (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="469" width="0.0891%" height="15" fill="rgb(241,136,10)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="479.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_vec_impl (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="453" width="0.0891%" height="15" fill="rgb(208,32,45)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="463.50"></text></g><g><title>ndarray::dimension::can_index_slice_with_strides (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="437" width="0.0891%" height="15" fill="rgb(207,135,9)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="447.50"></text></g><g><title>ndarray::dimension::can_index_slice_not_custom (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="421" width="0.0891%" height="15" fill="rgb(206,86,44)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="431.50"></text></g><g><title>ndarray::dimension::size_of_shape_checked (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="405" width="0.0891%" height="15" fill="rgb(245,177,15)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="389" width="0.0891%" height="15" fill="rgb(206,64,50)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="373" width="0.0891%" height="15" fill="rgb(234,36,40)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="383.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="357" width="0.0891%" height="15" fill="rgb(213,64,8)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="367.50"></text></g><g><title>ndarray::dimension::size_of_shape_checked::_{{closure}} (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="341" width="0.0891%" height="15" fill="rgb(210,75,36)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="325" width="0.0891%" height="15" fill="rgb(229,88,21)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (3,426,167 samples, 0.09%)</title><rect x="4.2387%" y="309" width="0.0891%" height="15" fill="rgb(252,204,47)" fg:x="163001957" fg:w="3426167"/><text x="4.4887%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,949,560 samples, 0.18%)</title><rect x="4.3278%" y="437" width="0.1807%" height="15" fill="rgb(208,77,27)" fg:x="166428124" fg:w="6949560"/><text x="4.5778%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (6,949,560 samples, 0.18%)</title><rect x="4.3278%" y="421" width="0.1807%" height="15" fill="rgb(221,76,26)" fg:x="166428124" fg:w="6949560"/><text x="4.5778%" y="431.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign (10,364,985 samples, 0.27%)</title><rect x="4.3278%" y="469" width="0.2695%" height="15" fill="rgb(225,139,18)" fg:x="166428124" fg:w="10364985"/><text x="4.5778%" y="479.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (10,364,985 samples, 0.27%)</title><rect x="4.3278%" y="453" width="0.2695%" height="15" fill="rgb(230,137,11)" fg:x="166428124" fg:w="10364985"/><text x="4.5778%" y="463.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign::_{{closure}} (3,415,425 samples, 0.09%)</title><rect x="4.5085%" y="437" width="0.0888%" height="15" fill="rgb(212,28,1)" fg:x="173377684" fg:w="3415425"/><text x="4.7585%" y="447.50"></text></g><g><title>core::clone::Clone::clone_from (3,415,425 samples, 0.09%)</title><rect x="4.5085%" y="421" width="0.0888%" height="15" fill="rgb(248,164,17)" fg:x="173377684" fg:w="3415425"/><text x="4.7585%" y="431.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::len (3,426,703 samples, 0.09%)</title><rect x="4.5973%" y="469" width="0.0891%" height="15" fill="rgb(222,171,42)" fg:x="176793109" fg:w="3426703"/><text x="4.8473%" y="479.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::size (3,426,703 samples, 0.09%)</title><rect x="4.5973%" y="453" width="0.0891%" height="15" fill="rgb(243,84,45)" fg:x="176793109" fg:w="3426703"/><text x="4.8473%" y="463.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Div&lt;B&gt; for &amp;ndarray::ArrayBase&lt;S,D&gt;&gt;::div (6,844,505 samples, 0.18%)</title><rect x="4.6864%" y="469" width="0.1780%" height="15" fill="rgb(252,49,23)" fg:x="180219812" fg:w="6844505"/><text x="4.9364%" y="479.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (6,844,505 samples, 0.18%)</title><rect x="4.6864%" y="453" width="0.1780%" height="15" fill="rgb(215,19,7)" fg:x="180219812" fg:w="6844505"/><text x="4.9364%" y="463.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (6,844,505 samples, 0.18%)</title><rect x="4.6864%" y="437" width="0.1780%" height="15" fill="rgb(238,81,41)" fg:x="180219812" fg:w="6844505"/><text x="4.9364%" y="447.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (6,844,505 samples, 0.18%)</title><rect x="4.6864%" y="421" width="0.1780%" height="15" fill="rgb(210,199,37)" fg:x="180219812" fg:w="6844505"/><text x="4.9364%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,844,505 samples, 0.18%)</title><rect x="4.6864%" y="405" width="0.1780%" height="15" fill="rgb(244,192,49)" fg:x="180219812" fg:w="6844505"/><text x="4.9364%" y="415.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (6,844,505 samples, 0.18%)</title><rect x="4.6864%" y="389" width="0.1780%" height="15" fill="rgb(226,211,11)" fg:x="180219812" fg:w="6844505"/><text x="4.9364%" y="399.50"></text></g><g><title>core::ptr::write (6,844,505 samples, 0.18%)</title><rect x="4.6864%" y="373" width="0.1780%" height="15" fill="rgb(236,162,54)" fg:x="180219812" fg:w="6844505"/><text x="4.9364%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="453" width="0.1439%" height="15" fill="rgb(220,229,9)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="437" width="0.1439%" height="15" fill="rgb(250,87,22)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="447.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="421" width="0.1439%" height="15" fill="rgb(239,43,17)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="405" width="0.1439%" height="15" fill="rgb(231,177,25)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="389" width="0.1439%" height="15" fill="rgb(219,179,1)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="373" width="0.1439%" height="15" fill="rgb(238,219,53)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="357" width="0.1439%" height="15" fill="rgb(232,167,36)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="341" width="0.1439%" height="15" fill="rgb(244,19,51)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="325" width="0.1439%" height="15" fill="rgb(224,6,22)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="335.50"></text></g><g><title>__GI___libc_free (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="309" width="0.1439%" height="15" fill="rgb(224,145,5)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="319.50"></text></g><g><title>_int_free_merge_chunk (5,533,711 samples, 0.14%)</title><rect x="4.8644%" y="293" width="0.1439%" height="15" fill="rgb(234,130,49)" fg:x="187064317" fg:w="5533711"/><text x="5.1144%" y="303.50"></text></g><g><title>_int_free_create_chunk (3,418,522 samples, 0.09%)</title><rect x="4.9194%" y="277" width="0.0889%" height="15" fill="rgb(254,6,2)" fg:x="189179506" fg:w="3418522"/><text x="5.1694%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="437" width="0.0875%" height="15" fill="rgb(208,96,46)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="421" width="0.0875%" height="15" fill="rgb(239,3,39)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="431.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="405" width="0.0875%" height="15" fill="rgb(233,210,1)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="389" width="0.0875%" height="15" fill="rgb(244,137,37)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="373" width="0.0875%" height="15" fill="rgb(240,136,2)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="357" width="0.0875%" height="15" fill="rgb(239,18,37)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="341" width="0.0875%" height="15" fill="rgb(218,185,22)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="325" width="0.0875%" height="15" fill="rgb(225,218,4)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="309" width="0.0875%" height="15" fill="rgb(230,182,32)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="319.50"></text></g><g><title>__GI___libc_free (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="293" width="0.0875%" height="15" fill="rgb(242,56,43)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="303.50"></text></g><g><title>_int_free_merge_chunk (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="277" width="0.0875%" height="15" fill="rgb(233,99,24)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="287.50"></text></g><g><title>unlink_chunk (3,364,940 samples, 0.09%)</title><rect x="5.1874%" y="261" width="0.0875%" height="15" fill="rgb(234,209,42)" fg:x="199485206" fg:w="3364940"/><text x="5.4374%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,827,139 samples, 0.18%)</title><rect x="5.2749%" y="309" width="0.1775%" height="15" fill="rgb(227,7,12)" fg:x="202850146" fg:w="6827139"/><text x="5.5249%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,827,139 samples, 0.18%)</title><rect x="5.2749%" y="293" width="0.1775%" height="15" fill="rgb(245,203,43)" fg:x="202850146" fg:w="6827139"/><text x="5.5249%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,827,139 samples, 0.18%)</title><rect x="5.2749%" y="277" width="0.1775%" height="15" fill="rgb(238,205,33)" fg:x="202850146" fg:w="6827139"/><text x="5.5249%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,827,139 samples, 0.18%)</title><rect x="5.2749%" y="261" width="0.1775%" height="15" fill="rgb(231,56,7)" fg:x="202850146" fg:w="6827139"/><text x="5.5249%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,827,139 samples, 0.18%)</title><rect x="5.2749%" y="245" width="0.1775%" height="15" fill="rgb(244,186,29)" fg:x="202850146" fg:w="6827139"/><text x="5.5249%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,827,139 samples, 0.18%)</title><rect x="5.2749%" y="229" width="0.1775%" height="15" fill="rgb(234,111,31)" fg:x="202850146" fg:w="6827139"/><text x="5.5249%" y="239.50"></text></g><g><title>alloc::alloc::alloc (6,827,139 samples, 0.18%)</title><rect x="5.2749%" y="213" width="0.1775%" height="15" fill="rgb(241,149,10)" fg:x="202850146" fg:w="6827139"/><text x="5.5249%" y="223.50"></text></g><g><title>__GI___libc_malloc (6,827,139 samples, 0.18%)</title><rect x="5.2749%" y="197" width="0.1775%" height="15" fill="rgb(249,206,44)" fg:x="202850146" fg:w="6827139"/><text x="5.5249%" y="207.50"></text></g><g><title>_int_malloc (6,827,139 samples, 0.18%)</title><rect x="5.2749%" y="181" width="0.1775%" height="15" fill="rgb(251,153,30)" fg:x="202850146" fg:w="6827139"/><text x="5.5249%" y="191.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (19,935,193 samples, 0.52%)</title><rect x="5.2749%" y="437" width="0.5184%" height="15" fill="rgb(239,152,38)" fg:x="202850146" fg:w="19935193"/><text x="5.5249%" y="447.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (19,935,193 samples, 0.52%)</title><rect x="5.2749%" y="421" width="0.5184%" height="15" fill="rgb(249,139,47)" fg:x="202850146" fg:w="19935193"/><text x="5.5249%" y="431.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (19,935,193 samples, 0.52%)</title><rect x="5.2749%" y="405" width="0.5184%" height="15" fill="rgb(244,64,35)" fg:x="202850146" fg:w="19935193"/><text x="5.5249%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (19,935,193 samples, 0.52%)</title><rect x="5.2749%" y="389" width="0.5184%" height="15" fill="rgb(216,46,15)" fg:x="202850146" fg:w="19935193"/><text x="5.5249%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19,935,193 samples, 0.52%)</title><rect x="5.2749%" y="373" width="0.5184%" height="15" fill="rgb(250,74,19)" fg:x="202850146" fg:w="19935193"/><text x="5.5249%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,935,193 samples, 0.52%)</title><rect x="5.2749%" y="357" width="0.5184%" height="15" fill="rgb(249,42,33)" fg:x="202850146" fg:w="19935193"/><text x="5.5249%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (19,935,193 samples, 0.52%)</title><rect x="5.2749%" y="341" width="0.5184%" height="15" fill="rgb(242,149,17)" fg:x="202850146" fg:w="19935193"/><text x="5.5249%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,935,193 samples, 0.52%)</title><rect x="5.2749%" y="325" width="0.5184%" height="15" fill="rgb(244,29,21)" fg:x="202850146" fg:w="19935193"/><text x="5.5249%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13,108,054 samples, 0.34%)</title><rect x="5.4524%" y="309" width="0.3409%" height="15" fill="rgb(220,130,37)" fg:x="209677285" fg:w="13108054"/><text x="5.7024%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13,108,054 samples, 0.34%)</title><rect x="5.4524%" y="293" width="0.3409%" height="15" fill="rgb(211,67,2)" fg:x="209677285" fg:w="13108054"/><text x="5.7024%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13,108,054 samples, 0.34%)</title><rect x="5.4524%" y="277" width="0.3409%" height="15" fill="rgb(235,68,52)" fg:x="209677285" fg:w="13108054"/><text x="5.7024%" y="287.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (11,766,402 samples, 0.31%)</title><rect x="6.7128%" y="165" width="0.3060%" height="15" fill="rgb(246,142,3)" fg:x="258148154" fg:w="11766402"/><text x="6.9628%" y="175.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::add (50,558,544 samples, 1.31%)</title><rect x="5.7933%" y="437" width="1.3147%" height="15" fill="rgb(241,25,7)" fg:x="222785339" fg:w="50558544"/><text x="6.0433%" y="447.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (50,558,544 samples, 1.31%)</title><rect x="5.7933%" y="421" width="1.3147%" height="15" fill="rgb(242,119,39)" fg:x="222785339" fg:w="50558544"/><text x="6.0433%" y="431.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (50,558,544 samples, 1.31%)</title><rect x="5.7933%" y="405" width="1.3147%" height="15" fill="rgb(241,98,45)" fg:x="222785339" fg:w="50558544"/><text x="6.0433%" y="415.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (50,558,544 samples, 1.31%)</title><rect x="5.7933%" y="389" width="1.3147%" height="15" fill="rgb(254,28,30)" fg:x="222785339" fg:w="50558544"/><text x="6.0433%" y="399.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (50,558,544 samples, 1.31%)</title><rect x="5.7933%" y="373" width="1.3147%" height="15" fill="rgb(241,142,54)" fg:x="222785339" fg:w="50558544"/><text x="6.0433%" y="383.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (50,558,544 samples, 1.31%)</title><rect x="5.7933%" y="357" width="1.3147%" height="15" fill="rgb(222,85,15)" fg:x="222785339" fg:w="50558544"/><text x="6.0433%" y="367.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (50,558,544 samples, 1.31%)</title><rect x="5.7933%" y="341" width="1.3147%" height="15" fill="rgb(210,85,47)" fg:x="222785339" fg:w="50558544"/><text x="6.0433%" y="351.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (50,558,544 samples, 1.31%)</title><rect x="5.7933%" y="325" width="1.3147%" height="15" fill="rgb(224,206,25)" fg:x="222785339" fg:w="50558544"/><text x="6.0433%" y="335.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (47,112,589 samples, 1.23%)</title><rect x="5.8829%" y="309" width="1.2251%" height="15" fill="rgb(243,201,19)" fg:x="226231294" fg:w="47112589"/><text x="6.1329%" y="319.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (47,112,589 samples, 1.23%)</title><rect x="5.8829%" y="293" width="1.2251%" height="15" fill="rgb(236,59,4)" fg:x="226231294" fg:w="47112589"/><text x="6.1329%" y="303.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (47,112,589 samples, 1.23%)</title><rect x="5.8829%" y="277" width="1.2251%" height="15" fill="rgb(254,179,45)" fg:x="226231294" fg:w="47112589"/><text x="6.1329%" y="287.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (47,112,589 samples, 1.23%)</title><rect x="5.8829%" y="261" width="1.2251%" height="15" fill="rgb(226,14,10)" fg:x="226231294" fg:w="47112589"/><text x="6.1329%" y="271.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_contiguous (47,112,589 samples, 1.23%)</title><rect x="5.8829%" y="245" width="1.2251%" height="15" fill="rgb(244,27,41)" fg:x="226231294" fg:w="47112589"/><text x="6.1329%" y="255.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (47,112,589 samples, 1.23%)</title><rect x="5.8829%" y="229" width="1.2251%" height="15" fill="rgb(235,35,32)" fg:x="226231294" fg:w="47112589"/><text x="6.1329%" y="239.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (43,694,746 samples, 1.14%)</title><rect x="5.9717%" y="213" width="1.1362%" height="15" fill="rgb(218,68,31)" fg:x="229649137" fg:w="43694746"/><text x="6.2217%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (43,694,746 samples, 1.14%)</title><rect x="5.9717%" y="197" width="1.1362%" height="15" fill="rgb(207,120,37)" fg:x="229649137" fg:w="43694746"/><text x="6.2217%" y="207.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::clone_iopf::_{{closure}} (36,885,379 samples, 0.96%)</title><rect x="6.1488%" y="181" width="0.9592%" height="15" fill="rgb(227,98,0)" fg:x="236458504" fg:w="36885379"/><text x="6.3988%" y="191.50"></text></g><g><title>core::ops::function::Fn::call (3,429,327 samples, 0.09%)</title><rect x="7.0188%" y="165" width="0.0892%" height="15" fill="rgb(207,7,3)" fg:x="269914556" fg:w="3429327"/><text x="7.2688%" y="175.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (3,429,327 samples, 0.09%)</title><rect x="7.0188%" y="149" width="0.0892%" height="15" fill="rgb(206,98,19)" fg:x="269914556" fg:w="3429327"/><text x="7.2688%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,408,334 samples, 0.09%)</title><rect x="7.1080%" y="405" width="0.0886%" height="15" fill="rgb(217,5,26)" fg:x="273343883" fg:w="3408334"/><text x="7.3580%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,408,334 samples, 0.09%)</title><rect x="7.1080%" y="389" width="0.0886%" height="15" fill="rgb(235,190,38)" fg:x="273343883" fg:w="3408334"/><text x="7.3580%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,408,334 samples, 0.09%)</title><rect x="7.1080%" y="373" width="0.0886%" height="15" fill="rgb(247,86,24)" fg:x="273343883" fg:w="3408334"/><text x="7.3580%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,408,334 samples, 0.09%)</title><rect x="7.1080%" y="357" width="0.0886%" height="15" fill="rgb(205,101,16)" fg:x="273343883" fg:w="3408334"/><text x="7.3580%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,408,334 samples, 0.09%)</title><rect x="7.1080%" y="341" width="0.0886%" height="15" fill="rgb(246,168,33)" fg:x="273343883" fg:w="3408334"/><text x="7.3580%" y="351.50"></text></g><g><title>alloc::raw_vec::layout_array (3,408,334 samples, 0.09%)</title><rect x="7.1080%" y="325" width="0.0886%" height="15" fill="rgb(231,114,1)" fg:x="273343883" fg:w="3408334"/><text x="7.3580%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3,408,334 samples, 0.09%)</title><rect x="7.1080%" y="309" width="0.0886%" height="15" fill="rgb(207,184,53)" fg:x="273343883" fg:w="3408334"/><text x="7.3580%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (3,408,334 samples, 0.09%)</title><rect x="7.1080%" y="293" width="0.0886%" height="15" fill="rgb(224,95,51)" fg:x="273343883" fg:w="3408334"/><text x="7.3580%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3,408,334 samples, 0.09%)</title><rect x="7.1080%" y="277" width="0.0886%" height="15" fill="rgb(212,188,45)" fg:x="273343883" fg:w="3408334"/><text x="7.3580%" y="287.50"></text></g><g><title>core::intrinsics::unlikely (3,408,334 samples, 0.09%)</title><rect x="7.1080%" y="261" width="0.0886%" height="15" fill="rgb(223,154,38)" fg:x="273343883" fg:w="3408334"/><text x="7.3580%" y="271.50"></text></g><g><title>_int_free_maybe_consolidate (3,372,161 samples, 0.09%)</title><rect x="7.2852%" y="213" width="0.0877%" height="15" fill="rgb(251,22,52)" fg:x="280158588" fg:w="3372161"/><text x="7.5352%" y="223.50"></text></g><g><title>matrixmultiply::gemm::make_packing_buffer (10,161,218 samples, 0.26%)</title><rect x="7.1966%" y="373" width="0.2642%" height="15" fill="rgb(229,209,22)" fg:x="276752217" fg:w="10161218"/><text x="7.4466%" y="383.50"></text></g><g><title>matrixmultiply::aligned_alloc::Alloc&lt;T&gt;::new (10,161,218 samples, 0.26%)</title><rect x="7.1966%" y="357" width="0.2642%" height="15" fill="rgb(234,138,34)" fg:x="276752217" fg:w="10161218"/><text x="7.4466%" y="367.50"></text></g><g><title>alloc::alloc::alloc (10,161,218 samples, 0.26%)</title><rect x="7.1966%" y="341" width="0.2642%" height="15" fill="rgb(212,95,11)" fg:x="276752217" fg:w="10161218"/><text x="7.4466%" y="351.50"></text></g><g><title>__rdl_alloc (10,161,218 samples, 0.26%)</title><rect x="7.1966%" y="325" width="0.2642%" height="15" fill="rgb(240,179,47)" fg:x="276752217" fg:w="10161218"/><text x="7.4466%" y="335.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10,161,218 samples, 0.26%)</title><rect x="7.1966%" y="309" width="0.2642%" height="15" fill="rgb(240,163,11)" fg:x="276752217" fg:w="10161218"/><text x="7.4466%" y="319.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (6,754,847 samples, 0.18%)</title><rect x="7.2852%" y="293" width="0.1757%" height="15" fill="rgb(236,37,12)" fg:x="280158588" fg:w="6754847"/><text x="7.5352%" y="303.50"></text></g><g><title>__posix_memalign (6,754,847 samples, 0.18%)</title><rect x="7.2852%" y="277" width="0.1757%" height="15" fill="rgb(232,164,16)" fg:x="280158588" fg:w="6754847"/><text x="7.5352%" y="287.50"></text></g><g><title>__posix_memalign (6,754,847 samples, 0.18%)</title><rect x="7.2852%" y="261" width="0.1757%" height="15" fill="rgb(244,205,15)" fg:x="280158588" fg:w="6754847"/><text x="7.5352%" y="271.50"></text></g><g><title>_mid_memalign (6,754,847 samples, 0.18%)</title><rect x="7.2852%" y="245" width="0.1757%" height="15" fill="rgb(223,117,47)" fg:x="280158588" fg:w="6754847"/><text x="7.5352%" y="255.50"></text></g><g><title>_int_memalign (6,754,847 samples, 0.18%)</title><rect x="7.2852%" y="229" width="0.1757%" height="15" fill="rgb(244,107,35)" fg:x="280158588" fg:w="6754847"/><text x="7.5352%" y="239.50"></text></g><g><title>_int_malloc (3,382,686 samples, 0.09%)</title><rect x="7.3729%" y="213" width="0.0880%" height="15" fill="rgb(205,140,8)" fg:x="283530749" fg:w="3382686"/><text x="7.6229%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,833,851 samples, 0.18%)</title><rect x="7.5497%" y="357" width="0.1777%" height="15" fill="rgb(228,84,46)" fg:x="290332949" fg:w="6833851"/><text x="7.7997%" y="367.50"></text></g><g><title>matrixmultiply::gemm::pack (13,703,262 samples, 0.36%)</title><rect x="7.4608%" y="373" width="0.3563%" height="15" fill="rgb(254,188,9)" fg:x="286913435" fg:w="13703262"/><text x="7.7108%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,449,897 samples, 0.09%)</title><rect x="7.7275%" y="357" width="0.0897%" height="15" fill="rgb(206,112,54)" fg:x="297166800" fg:w="3449897"/><text x="7.9775%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,449,897 samples, 0.09%)</title><rect x="7.7275%" y="341" width="0.0897%" height="15" fill="rgb(216,84,49)" fg:x="297166800" fg:w="3449897"/><text x="7.9775%" y="351.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (42,930,108 samples, 1.12%)</title><rect x="8.9464%" y="245" width="1.1163%" height="15" fill="rgb(214,194,35)" fg:x="344043069" fg:w="42930108"/><text x="9.1964%" y="255.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (42,930,108 samples, 1.12%)</title><rect x="8.9464%" y="229" width="1.1163%" height="15" fill="rgb(249,28,3)" fg:x="344043069" fg:w="42930108"/><text x="9.1964%" y="239.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (6,809,102 samples, 0.18%)</title><rect x="10.0628%" y="245" width="0.1771%" height="15" fill="rgb(222,56,52)" fg:x="386973177" fg:w="6809102"/><text x="10.3128%" y="255.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (30,381,229 samples, 0.79%)</title><rect x="10.2398%" y="245" width="0.7900%" height="15" fill="rgb(245,217,50)" fg:x="393782279" fg:w="30381229"/><text x="10.4898%" y="255.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (123,562,122 samples, 3.21%)</title><rect x="8.0838%" y="293" width="3.2131%" height="15" fill="rgb(213,201,24)" fg:x="310871919" fg:w="123562122"/><text x="8.3338%" y="303.50">&lt;ma..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (120,131,863 samples, 3.12%)</title><rect x="8.1730%" y="277" width="3.1239%" height="15" fill="rgb(248,116,28)" fg:x="314302178" fg:w="120131863"/><text x="8.4230%" y="287.50">mat..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (110,534,193 samples, 2.87%)</title><rect x="8.4226%" y="261" width="2.8743%" height="15" fill="rgb(219,72,43)" fg:x="323899848" fg:w="110534193"/><text x="8.6726%" y="271.50">ma..</text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (10,270,533 samples, 0.27%)</title><rect x="11.0298%" y="245" width="0.2671%" height="15" fill="rgb(209,138,14)" fg:x="424163508" fg:w="10270533"/><text x="11.2798%" y="255.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (41,009,664 samples, 1.07%)</title><rect x="11.4744%" y="229" width="1.0664%" height="15" fill="rgb(222,18,33)" fg:x="441257940" fg:w="41009664"/><text x="11.7244%" y="239.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (41,009,664 samples, 1.07%)</title><rect x="11.4744%" y="213" width="1.0664%" height="15" fill="rgb(213,199,7)" fg:x="441257940" fg:w="41009664"/><text x="11.7244%" y="223.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (13,518,589 samples, 0.35%)</title><rect x="12.5408%" y="229" width="0.3515%" height="15" fill="rgb(250,110,10)" fg:x="482267604" fg:w="13518589"/><text x="12.7908%" y="239.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (13,628,525 samples, 0.35%)</title><rect x="12.8923%" y="229" width="0.3544%" height="15" fill="rgb(248,123,6)" fg:x="495786193" fg:w="13628525"/><text x="13.1423%" y="239.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (3,504,922 samples, 0.09%)</title><rect x="13.2467%" y="229" width="0.0911%" height="15" fill="rgb(206,91,31)" fg:x="509414718" fg:w="3504922"/><text x="13.4967%" y="239.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (78,531,790 samples, 2.04%)</title><rect x="11.3855%" y="277" width="2.0421%" height="15" fill="rgb(211,154,13)" fg:x="437841540" fg:w="78531790"/><text x="11.6355%" y="287.50">&lt;..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (78,531,790 samples, 2.04%)</title><rect x="11.3855%" y="261" width="2.0421%" height="15" fill="rgb(225,148,7)" fg:x="437841540" fg:w="78531790"/><text x="11.6355%" y="271.50">m..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (78,531,790 samples, 2.04%)</title><rect x="11.3855%" y="245" width="2.0421%" height="15" fill="rgb(220,160,43)" fg:x="437841540" fg:w="78531790"/><text x="11.6355%" y="255.50">m..</text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (3,453,690 samples, 0.09%)</title><rect x="13.3378%" y="229" width="0.0898%" height="15" fill="rgb(213,52,39)" fg:x="512919640" fg:w="3453690"/><text x="13.5878%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (3,453,690 samples, 0.09%)</title><rect x="13.3378%" y="213" width="0.0898%" height="15" fill="rgb(243,137,7)" fg:x="512919640" fg:w="3453690"/><text x="13.5878%" y="223.50"></text></g><g><title>core::ptr::write_unaligned (3,453,690 samples, 0.09%)</title><rect x="13.3378%" y="197" width="0.0898%" height="15" fill="rgb(230,79,13)" fg:x="512919640" fg:w="3453690"/><text x="13.5878%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,453,690 samples, 0.09%)</title><rect x="13.3378%" y="181" width="0.0898%" height="15" fill="rgb(247,105,23)" fg:x="512919640" fg:w="3453690"/><text x="13.5878%" y="191.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (226,022,232 samples, 5.88%)</title><rect x="7.8172%" y="325" width="5.8774%" height="15" fill="rgb(223,179,41)" fg:x="300616697" fg:w="226022232"/><text x="8.0672%" y="335.50">matrixm..</text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (222,608,534 samples, 5.79%)</title><rect x="7.9059%" y="309" width="5.7887%" height="15" fill="rgb(218,9,34)" fg:x="304030395" fg:w="222608534"/><text x="8.1559%" y="319.50">matrixm..</text></g><g><title>matrixmultiply::gemm::masked_kernel (92,204,888 samples, 2.40%)</title><rect x="11.2969%" y="293" width="2.3977%" height="15" fill="rgb(222,106,8)" fg:x="434434041" fg:w="92204888"/><text x="11.5469%" y="303.50">ma..</text></g><g><title>matrixmultiply::gemm::c_to_masked_ab_beta_c (10,265,599 samples, 0.27%)</title><rect x="13.4276%" y="277" width="0.2669%" height="15" fill="rgb(211,220,0)" fg:x="516373330" fg:w="10265599"/><text x="13.6776%" y="287.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (229,431,826 samples, 5.97%)</title><rect x="7.8172%" y="341" width="5.9661%" height="15" fill="rgb(229,52,16)" fg:x="300616697" fg:w="229431826"/><text x="8.0672%" y="351.50">matrixmu..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::thread_local (3,409,594 samples, 0.09%)</title><rect x="13.6946%" y="325" width="0.0887%" height="15" fill="rgb(212,155,18)" fg:x="526638929" fg:w="3409594"/><text x="13.9446%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45,758,305 samples, 1.19%)</title><rect x="14.0493%" y="325" width="1.1899%" height="15" fill="rgb(242,21,14)" fg:x="540280758" fg:w="45758305"/><text x="14.2993%" y="335.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (314,074,636 samples, 8.17%)</title><rect x="7.1080%" y="437" width="8.1671%" height="15" fill="rgb(222,19,48)" fg:x="273343883" fg:w="314074636"/><text x="7.3580%" y="447.50">ndarray::li..</text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (314,074,636 samples, 8.17%)</title><rect x="7.1080%" y="421" width="8.1671%" height="15" fill="rgb(232,45,27)" fg:x="273343883" fg:w="314074636"/><text x="7.3580%" y="431.50">&lt;ndarray::A..</text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (310,666,302 samples, 8.08%)</title><rect x="7.1966%" y="405" width="8.0785%" height="15" fill="rgb(249,103,42)" fg:x="276752217" fg:w="310666302"/><text x="7.4466%" y="415.50">ndarray::li..</text></g><g><title>matrixmultiply::gemm::gemm_loop (310,666,302 samples, 8.08%)</title><rect x="7.1966%" y="389" width="8.0785%" height="15" fill="rgb(246,81,33)" fg:x="276752217" fg:w="310666302"/><text x="7.4466%" y="399.50">matrixmulti..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (286,801,822 samples, 7.46%)</title><rect x="7.8172%" y="373" width="7.4579%" height="15" fill="rgb(252,33,42)" fg:x="300616697" fg:w="286801822"/><text x="8.0672%" y="383.50">matrixmult..</text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (286,801,822 samples, 7.46%)</title><rect x="7.8172%" y="357" width="7.4579%" height="15" fill="rgb(209,212,41)" fg:x="300616697" fg:w="286801822"/><text x="8.0672%" y="367.50">matrixmult..</text></g><g><title>matrixmultiply::gemm::pack (57,369,996 samples, 1.49%)</title><rect x="13.7832%" y="341" width="1.4918%" height="15" fill="rgb(207,154,6)" fg:x="530048523" fg:w="57369996"/><text x="14.0332%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,379,456 samples, 0.04%)</title><rect x="15.2392%" y="325" width="0.0359%" height="15" fill="rgb(223,64,47)" fg:x="586039063" fg:w="1379456"/><text x="15.4892%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,379,456 samples, 0.04%)</title><rect x="15.2392%" y="309" width="0.0359%" height="15" fill="rgb(211,161,38)" fg:x="586039063" fg:w="1379456"/><text x="15.4892%" y="319.50"></text></g><g><title>core::ptr::write (23,957,234 samples, 0.62%)</title><rect x="15.9851%" y="309" width="0.6230%" height="15" fill="rgb(219,138,40)" fg:x="614721904" fg:w="23957234"/><text x="16.2351%" y="319.50"></text></g><g><title>[unknown] (20,270,854 samples, 0.53%)</title><rect x="38.7856%" y="245" width="0.5271%" height="15" fill="rgb(241,228,46)" fg:x="1491539991" fg:w="20270854"/><text x="39.0356%" y="255.50"></text></g><g><title>[unknown] (16,842,851 samples, 0.44%)</title><rect x="38.8748%" y="229" width="0.4380%" height="15" fill="rgb(223,209,38)" fg:x="1494967994" fg:w="16842851"/><text x="39.1248%" y="239.50"></text></g><g><title>[unknown] (16,842,851 samples, 0.44%)</title><rect x="38.8748%" y="213" width="0.4380%" height="15" fill="rgb(236,164,45)" fg:x="1494967994" fg:w="16842851"/><text x="39.1248%" y="223.50"></text></g><g><title>[unknown] (16,842,851 samples, 0.44%)</title><rect x="38.8748%" y="197" width="0.4380%" height="15" fill="rgb(231,15,5)" fg:x="1494967994" fg:w="16842851"/><text x="39.1248%" y="207.50"></text></g><g><title>[unknown] (16,842,851 samples, 0.44%)</title><rect x="38.8748%" y="181" width="0.4380%" height="15" fill="rgb(252,35,15)" fg:x="1494967994" fg:w="16842851"/><text x="39.1248%" y="191.50"></text></g><g><title>[unknown] (16,842,851 samples, 0.44%)</title><rect x="38.8748%" y="165" width="0.4380%" height="15" fill="rgb(248,181,18)" fg:x="1494967994" fg:w="16842851"/><text x="39.1248%" y="175.50"></text></g><g><title>[unknown] (13,401,397 samples, 0.35%)</title><rect x="38.9643%" y="149" width="0.3485%" height="15" fill="rgb(233,39,42)" fg:x="1498409448" fg:w="13401397"/><text x="39.2143%" y="159.50"></text></g><g><title>[unknown] (13,401,397 samples, 0.35%)</title><rect x="38.9643%" y="133" width="0.3485%" height="15" fill="rgb(238,110,33)" fg:x="1498409448" fg:w="13401397"/><text x="39.2143%" y="143.50"></text></g><g><title>[unknown] (13,401,397 samples, 0.35%)</title><rect x="38.9643%" y="117" width="0.3485%" height="15" fill="rgb(233,195,10)" fg:x="1498409448" fg:w="13401397"/><text x="39.2143%" y="127.50"></text></g><g><title>[unknown] (6,871,546 samples, 0.18%)</title><rect x="39.1341%" y="101" width="0.1787%" height="15" fill="rgb(254,105,3)" fg:x="1504939299" fg:w="6871546"/><text x="39.3841%" y="111.50"></text></g><g><title>[unknown] (3,444,995 samples, 0.09%)</title><rect x="39.2232%" y="85" width="0.0896%" height="15" fill="rgb(221,225,9)" fg:x="1508365850" fg:w="3444995"/><text x="39.4732%" y="95.50"></text></g><g><title>__expm1_fma (1,543,919,470 samples, 40.15%)</title><rect x="39.3127%" y="245" width="40.1477%" height="15" fill="rgb(224,227,45)" fg:x="1511810845" fg:w="1543919470"/><text x="39.5627%" y="255.50">__expm1_fma</text></g><g><title>[unknown] (16,496,731 samples, 0.43%)</title><rect x="79.0315%" y="229" width="0.4290%" height="15" fill="rgb(229,198,43)" fg:x="3039233584" fg:w="16496731"/><text x="79.2815%" y="239.50"></text></g><g><title>[unknown] (16,496,731 samples, 0.43%)</title><rect x="79.0315%" y="213" width="0.4290%" height="15" fill="rgb(206,209,35)" fg:x="3039233584" fg:w="16496731"/><text x="79.2815%" y="223.50"></text></g><g><title>[unknown] (16,496,731 samples, 0.43%)</title><rect x="79.0315%" y="197" width="0.4290%" height="15" fill="rgb(245,195,53)" fg:x="3039233584" fg:w="16496731"/><text x="79.2815%" y="207.50"></text></g><g><title>[unknown] (16,496,731 samples, 0.43%)</title><rect x="79.0315%" y="181" width="0.4290%" height="15" fill="rgb(240,92,26)" fg:x="3039233584" fg:w="16496731"/><text x="79.2815%" y="191.50"></text></g><g><title>[unknown] (16,496,731 samples, 0.43%)</title><rect x="79.0315%" y="165" width="0.4290%" height="15" fill="rgb(207,40,23)" fg:x="3039233584" fg:w="16496731"/><text x="79.2815%" y="175.50"></text></g><g><title>[unknown] (13,075,337 samples, 0.34%)</title><rect x="79.1204%" y="149" width="0.3400%" height="15" fill="rgb(223,111,35)" fg:x="3042654978" fg:w="13075337"/><text x="79.3704%" y="159.50"></text></g><g><title>[unknown] (9,640,062 samples, 0.25%)</title><rect x="79.2098%" y="133" width="0.2507%" height="15" fill="rgb(229,147,28)" fg:x="3046090253" fg:w="9640062"/><text x="79.4598%" y="143.50"></text></g><g><title>[unknown] (9,640,062 samples, 0.25%)</title><rect x="79.2098%" y="117" width="0.2507%" height="15" fill="rgb(211,29,28)" fg:x="3046090253" fg:w="9640062"/><text x="79.4598%" y="127.50"></text></g><g><title>[unknown] (9,640,062 samples, 0.25%)</title><rect x="79.2098%" y="101" width="0.2507%" height="15" fill="rgb(228,72,33)" fg:x="3046090253" fg:w="9640062"/><text x="79.4598%" y="111.50"></text></g><g><title>[unknown] (9,640,062 samples, 0.25%)</title><rect x="79.2098%" y="85" width="0.2507%" height="15" fill="rgb(205,214,31)" fg:x="3046090253" fg:w="9640062"/><text x="79.4598%" y="95.50"></text></g><g><title>[unknown] (8,259,170 samples, 0.21%)</title><rect x="79.2457%" y="69" width="0.2148%" height="15" fill="rgb(224,111,15)" fg:x="3047471145" fg:w="8259170"/><text x="79.4957%" y="79.50"></text></g><g><title>[unknown] (4,832,796 samples, 0.13%)</title><rect x="79.3348%" y="53" width="0.1257%" height="15" fill="rgb(253,21,26)" fg:x="3050897519" fg:w="4832796"/><text x="79.5848%" y="63.50"></text></g><g><title>[unknown] (1,377,703 samples, 0.04%)</title><rect x="79.4246%" y="37" width="0.0358%" height="15" fill="rgb(245,139,43)" fg:x="3054352612" fg:w="1377703"/><text x="79.6746%" y="47.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,468,325,593 samples, 64.19%)</title><rect x="15.4523%" y="341" width="64.1857%" height="15" fill="rgb(252,170,7)" fg:x="594232491" fg:w="2468325593"/><text x="15.7023%" y="351.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (2,464,885,844 samples, 64.10%)</title><rect x="15.5417%" y="325" width="64.0963%" height="15" fill="rgb(231,118,14)" fg:x="597672240" fg:w="2464885844"/><text x="15.7917%" y="335.50">ndarray::iterators::to_vec_mapped::_{{closure}}</text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (2,423,878,946 samples, 63.03%)</title><rect x="16.6081%" y="309" width="63.0299%" height="15" fill="rgb(238,83,0)" fg:x="638679138" fg:w="2423878946"/><text x="16.8581%" y="319.50">ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}}</text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (2,423,878,946 samples, 63.03%)</title><rect x="16.6081%" y="293" width="63.0299%" height="15" fill="rgb(221,39,39)" fg:x="638679138" fg:w="2423878946"/><text x="16.8581%" y="303.50">rkl::core::activations::tanh_forward::_{{closure}}</text></g><g><title>std::f64::&lt;impl f64&gt;::tanh (2,423,878,946 samples, 63.03%)</title><rect x="16.6081%" y="277" width="63.0299%" height="15" fill="rgb(222,119,46)" fg:x="638679138" fg:w="2423878946"/><text x="16.8581%" y="287.50">std::f64::&lt;impl f64&gt;::tanh</text></g><g><title>__tanh (2,423,878,946 samples, 63.03%)</title><rect x="16.6081%" y="261" width="63.0299%" height="15" fill="rgb(222,165,49)" fg:x="638679138" fg:w="2423878946"/><text x="16.8581%" y="271.50">__tanh</text></g><g><title>__expm1_ifunc@plt (6,827,769 samples, 0.18%)</title><rect x="79.4604%" y="245" width="0.1775%" height="15" fill="rgb(219,113,52)" fg:x="3055730315" fg:w="6827769"/><text x="79.7104%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="645" width="76.9603%" height="15" fill="rgb(214,7,15)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="655.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="629" width="76.9603%" height="15" fill="rgb(235,32,4)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="613" width="76.9603%" height="15" fill="rgb(238,90,54)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="623.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="597" width="76.9603%" height="15" fill="rgb(213,208,19)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="581" width="76.9603%" height="15" fill="rgb(233,156,4)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="591.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="565" width="76.9603%" height="15" fill="rgb(207,194,5)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="575.50">alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="549" width="76.9603%" height="15" fill="rgb(206,111,30)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="559.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="533" width="76.9603%" height="15" fill="rgb(243,70,54)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="543.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="517" width="76.9603%" height="15" fill="rgb(242,28,8)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="527.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="501" width="76.9603%" height="15" fill="rgb(219,106,18)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="511.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::compute_jacobian::_{{closure}} (2,959,585,121 samples, 76.96%)</title><rect x="2.7664%" y="485" width="76.9603%" height="15" fill="rgb(244,222,10)" fg:x="106383132" fg:w="2959585121"/><text x="3.0164%" y="495.50">rkl::core::optimizers::MarquardtOptimizer::compute_jacobian::_{{closure}}</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (2,878,903,936 samples, 74.86%)</title><rect x="4.8644%" y="469" width="74.8623%" height="15" fill="rgb(236,179,52)" fg:x="187064317" fg:w="2878903936"/><text x="5.1144%" y="479.50">rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict</text></g><g><title>rkl::core::layers::Dense::forward (2,873,370,225 samples, 74.72%)</title><rect x="5.0083%" y="453" width="74.7184%" height="15" fill="rgb(213,23,39)" fg:x="192598028" fg:w="2873370225"/><text x="5.2583%" y="463.50">rkl::core::layers::Dense::forward</text></g><g><title>rkl::core::activations::Activation::forward (2,478,549,734 samples, 64.45%)</title><rect x="15.2751%" y="437" width="64.4516%" height="15" fill="rgb(238,48,10)" fg:x="587418519" fg:w="2478549734"/><text x="15.5251%" y="447.50">rkl::core::activations::Activation::forward</text></g><g><title>rkl::core::activations::tanh_forward (2,471,735,762 samples, 64.27%)</title><rect x="15.4523%" y="421" width="64.2744%" height="15" fill="rgb(251,196,23)" fg:x="594232491" fg:w="2471735762"/><text x="15.7023%" y="431.50">rkl::core::activations::tanh_forward</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (2,471,735,762 samples, 64.27%)</title><rect x="15.4523%" y="405" width="64.2744%" height="15" fill="rgb(250,152,24)" fg:x="594232491" fg:w="2471735762"/><text x="15.7023%" y="415.50">ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (2,471,735,762 samples, 64.27%)</title><rect x="15.4523%" y="389" width="64.2744%" height="15" fill="rgb(209,150,17)" fg:x="594232491" fg:w="2471735762"/><text x="15.7023%" y="399.50">ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map</text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (2,471,735,762 samples, 64.27%)</title><rect x="15.4523%" y="373" width="64.2744%" height="15" fill="rgb(234,202,34)" fg:x="594232491" fg:w="2471735762"/><text x="15.7023%" y="383.50">ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked</text></g><g><title>ndarray::iterators::to_vec_mapped (2,471,735,762 samples, 64.27%)</title><rect x="15.4523%" y="357" width="64.2744%" height="15" fill="rgb(253,148,53)" fg:x="594232491" fg:w="2471735762"/><text x="15.7023%" y="367.50">ndarray::iterators::to_vec_mapped</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="341" width="0.0887%" height="15" fill="rgb(218,129,16)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="325" width="0.0887%" height="15" fill="rgb(216,85,19)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="309" width="0.0887%" height="15" fill="rgb(235,228,7)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="293" width="0.0887%" height="15" fill="rgb(245,175,0)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="277" width="0.0887%" height="15" fill="rgb(208,168,36)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="261" width="0.0887%" height="15" fill="rgb(246,171,24)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="245" width="0.0887%" height="15" fill="rgb(215,142,24)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="229" width="0.0887%" height="15" fill="rgb(250,187,7)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="239.50"></text></g><g><title>__GI___libc_malloc (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="213" width="0.0887%" height="15" fill="rgb(228,66,33)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="223.50"></text></g><g><title>_int_malloc (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="197" width="0.0887%" height="15" fill="rgb(234,215,21)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="207.50"></text></g><g><title>unlink_chunk (3,410,169 samples, 0.09%)</title><rect x="79.6380%" y="181" width="0.0887%" height="15" fill="rgb(222,191,20)" fg:x="3062558084" fg:w="3410169"/><text x="79.8880%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 1]&gt;&gt;&gt; (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="645" width="0.1800%" height="15" fill="rgb(245,79,54)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="629" width="0.1800%" height="15" fill="rgb(240,10,37)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="639.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="613" width="0.1800%" height="15" fill="rgb(214,192,32)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="597" width="0.1800%" height="15" fill="rgb(209,36,54)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="581" width="0.1800%" height="15" fill="rgb(220,10,11)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="565" width="0.1800%" height="15" fill="rgb(221,106,17)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="549" width="0.1800%" height="15" fill="rgb(251,142,44)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="533" width="0.1800%" height="15" fill="rgb(238,13,15)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="517" width="0.1800%" height="15" fill="rgb(208,107,27)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="527.50"></text></g><g><title>__GI___libc_free (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="501" width="0.1800%" height="15" fill="rgb(205,136,37)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="511.50"></text></g><g><title>_int_free_merge_chunk (6,923,874 samples, 0.18%)</title><rect x="79.7267%" y="485" width="0.1800%" height="15" fill="rgb(250,205,27)" fg:x="3065968253" fg:w="6923874"/><text x="79.9767%" y="495.50"></text></g><g><title>_int_free_create_chunk (3,401,372 samples, 0.09%)</title><rect x="79.8183%" y="469" width="0.0884%" height="15" fill="rgb(210,80,43)" fg:x="3069490755" fg:w="3401372"/><text x="80.0683%" y="479.50"></text></g><g><title>__libc_calloc (2,339,499 samples, 0.06%)</title><rect x="79.9067%" y="485" width="0.0608%" height="15" fill="rgb(247,160,36)" fg:x="3072892127" fg:w="2339499"/><text x="80.1567%" y="495.50"></text></g><g><title>_int_malloc (2,339,499 samples, 0.06%)</title><rect x="79.9067%" y="469" width="0.0608%" height="15" fill="rgb(234,13,49)" fg:x="3072892127" fg:w="2339499"/><text x="80.1567%" y="479.50"></text></g><g><title>sysmalloc (2,339,499 samples, 0.06%)</title><rect x="79.9067%" y="453" width="0.0608%" height="15" fill="rgb(234,122,0)" fg:x="3072892127" fg:w="2339499"/><text x="80.1567%" y="463.50"></text></g><g><title>sysmalloc_mmap (2,339,499 samples, 0.06%)</title><rect x="79.9067%" y="437" width="0.0608%" height="15" fill="rgb(207,146,38)" fg:x="3072892127" fg:w="2339499"/><text x="80.1567%" y="447.50"></text></g><g><title>__set_vma_name (2,339,499 samples, 0.06%)</title><rect x="79.9067%" y="421" width="0.0608%" height="15" fill="rgb(207,177,25)" fg:x="3072892127" fg:w="2339499"/><text x="80.1567%" y="431.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zeros (16,079,790 samples, 0.42%)</title><rect x="79.9067%" y="645" width="0.4181%" height="15" fill="rgb(211,178,42)" fg:x="3072892127" fg:w="16079790"/><text x="80.1567%" y="655.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_elem (16,079,790 samples, 0.42%)</title><rect x="79.9067%" y="629" width="0.4181%" height="15" fill="rgb(230,69,54)" fg:x="3072892127" fg:w="16079790"/><text x="80.1567%" y="639.50"></text></g><g><title>alloc::vec::from_elem (16,079,790 samples, 0.42%)</title><rect x="79.9067%" y="613" width="0.4181%" height="15" fill="rgb(214,135,41)" fg:x="3072892127" fg:w="16079790"/><text x="80.1567%" y="623.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (16,079,790 samples, 0.42%)</title><rect x="79.9067%" y="597" width="0.4181%" height="15" fill="rgb(237,67,25)" fg:x="3072892127" fg:w="16079790"/><text x="80.1567%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (16,079,790 samples, 0.42%)</title><rect x="79.9067%" y="581" width="0.4181%" height="15" fill="rgb(222,189,50)" fg:x="3072892127" fg:w="16079790"/><text x="80.1567%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (16,079,790 samples, 0.42%)</title><rect x="79.9067%" y="565" width="0.4181%" height="15" fill="rgb(245,148,34)" fg:x="3072892127" fg:w="16079790"/><text x="80.1567%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (16,079,790 samples, 0.42%)</title><rect x="79.9067%" y="549" width="0.4181%" height="15" fill="rgb(222,29,6)" fg:x="3072892127" fg:w="16079790"/><text x="80.1567%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (16,079,790 samples, 0.42%)</title><rect x="79.9067%" y="533" width="0.4181%" height="15" fill="rgb(221,189,43)" fg:x="3072892127" fg:w="16079790"/><text x="80.1567%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16,079,790 samples, 0.42%)</title><rect x="79.9067%" y="517" width="0.4181%" height="15" fill="rgb(207,36,27)" fg:x="3072892127" fg:w="16079790"/><text x="80.1567%" y="527.50"></text></g><g><title>alloc::alloc::alloc_zeroed (16,079,790 samples, 0.42%)</title><rect x="79.9067%" y="501" width="0.4181%" height="15" fill="rgb(217,90,24)" fg:x="3072892127" fg:w="16079790"/><text x="80.1567%" y="511.50"></text></g><g><title>__memset_avx2_unaligned_erms (13,740,291 samples, 0.36%)</title><rect x="79.9675%" y="485" width="0.3573%" height="15" fill="rgb(224,66,35)" fg:x="3075231626" fg:w="13740291"/><text x="80.2175%" y="495.50"></text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::compute_jacobian (2,995,236,004 samples, 77.89%)</title><rect x="2.7664%" y="661" width="77.8874%" height="15" fill="rgb(221,13,50)" fg:x="106383132" fg:w="2995236004"/><text x="3.0164%" y="671.50">rkl::core::optimizers::MarquardtOptimizer::compute_jacobian</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="645" width="0.3289%" height="15" fill="rgb(236,68,49)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="655.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="629" width="0.3289%" height="15" fill="rgb(229,146,28)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="639.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="613" width="0.3289%" height="15" fill="rgb(225,31,38)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="623.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="597" width="0.3289%" height="15" fill="rgb(250,208,3)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="607.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="581" width="0.3289%" height="15" fill="rgb(246,54,23)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="591.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="565" width="0.3289%" height="15" fill="rgb(243,76,11)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="575.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="549" width="0.3289%" height="15" fill="rgb(245,21,50)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="559.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="533" width="0.3289%" height="15" fill="rgb(228,9,43)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="543.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="517" width="0.3289%" height="15" fill="rgb(208,100,47)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="527.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="501" width="0.3289%" height="15" fill="rgb(232,26,8)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="511.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="485" width="0.3289%" height="15" fill="rgb(216,166,38)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="495.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="469" width="0.3289%" height="15" fill="rgb(251,202,51)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="479.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (12,647,219 samples, 0.33%)</title><rect x="80.3248%" y="453" width="0.3289%" height="15" fill="rgb(254,216,34)" fg:x="3088971917" fg:w="12647219"/><text x="80.5748%" y="463.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (9,225,570 samples, 0.24%)</title><rect x="80.4138%" y="437" width="0.2399%" height="15" fill="rgb(251,32,27)" fg:x="3092393566" fg:w="9225570"/><text x="80.6638%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9,225,570 samples, 0.24%)</title><rect x="80.4138%" y="421" width="0.2399%" height="15" fill="rgb(208,127,28)" fg:x="3092393566" fg:w="9225570"/><text x="80.6638%" y="431.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign::_{{closure}} (9,225,570 samples, 0.24%)</title><rect x="80.4138%" y="405" width="0.2399%" height="15" fill="rgb(224,137,22)" fg:x="3092393566" fg:w="9225570"/><text x="80.6638%" y="415.50"></text></g><g><title>core::clone::Clone::clone_from (9,225,570 samples, 0.24%)</title><rect x="80.4138%" y="389" width="0.2399%" height="15" fill="rgb(254,70,32)" fg:x="3092393566" fg:w="9225570"/><text x="80.6638%" y="399.50"></text></g><g><title>[unknown] (2,409,011 samples, 0.06%)</title><rect x="80.5911%" y="373" width="0.0626%" height="15" fill="rgb(229,75,37)" fg:x="3099210125" fg:w="2409011"/><text x="80.8411%" y="383.50"></text></g><g><title>[unknown] (2,409,011 samples, 0.06%)</title><rect x="80.5911%" y="357" width="0.0626%" height="15" fill="rgb(252,64,23)" fg:x="3099210125" fg:w="2409011"/><text x="80.8411%" y="367.50"></text></g><g><title>[unknown] (2,409,011 samples, 0.06%)</title><rect x="80.5911%" y="341" width="0.0626%" height="15" fill="rgb(232,162,48)" fg:x="3099210125" fg:w="2409011"/><text x="80.8411%" y="351.50"></text></g><g><title>[unknown] (2,409,011 samples, 0.06%)</title><rect x="80.5911%" y="325" width="0.0626%" height="15" fill="rgb(246,160,12)" fg:x="3099210125" fg:w="2409011"/><text x="80.8411%" y="335.50"></text></g><g><title>[unknown] (2,409,011 samples, 0.06%)</title><rect x="80.5911%" y="309" width="0.0626%" height="15" fill="rgb(247,166,0)" fg:x="3099210125" fg:w="2409011"/><text x="80.8411%" y="319.50"></text></g><g><title>[unknown] (2,409,011 samples, 0.06%)</title><rect x="80.5911%" y="293" width="0.0626%" height="15" fill="rgb(249,219,21)" fg:x="3099210125" fg:w="2409011"/><text x="80.8411%" y="303.50"></text></g><g><title>[unknown] (2,409,011 samples, 0.06%)</title><rect x="80.5911%" y="277" width="0.0626%" height="15" fill="rgb(205,209,3)" fg:x="3099210125" fg:w="2409011"/><text x="80.8411%" y="287.50"></text></g><g><title>[unknown] (2,409,011 samples, 0.06%)</title><rect x="80.5911%" y="261" width="0.0626%" height="15" fill="rgb(243,44,1)" fg:x="3099210125" fg:w="2409011"/><text x="80.8411%" y="271.50"></text></g><g><title>[unknown] (2,409,011 samples, 0.06%)</title><rect x="80.5911%" y="245" width="0.0626%" height="15" fill="rgb(206,159,16)" fg:x="3099210125" fg:w="2409011"/><text x="80.8411%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="645" width="0.0888%" height="15" fill="rgb(244,77,30)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="629" width="0.0888%" height="15" fill="rgb(218,69,12)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="613" width="0.0888%" height="15" fill="rgb(212,87,7)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="597" width="0.0888%" height="15" fill="rgb(245,114,25)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="581" width="0.0888%" height="15" fill="rgb(210,61,42)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="565" width="0.0888%" height="15" fill="rgb(211,52,33)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="549" width="0.0888%" height="15" fill="rgb(234,58,33)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="533" width="0.0888%" height="15" fill="rgb(220,115,36)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="517" width="0.0888%" height="15" fill="rgb(243,153,54)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="501" width="0.0888%" height="15" fill="rgb(251,47,18)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="485" width="0.0888%" height="15" fill="rgb(242,102,42)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="469" width="0.0888%" height="15" fill="rgb(234,31,38)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="479.50"></text></g><g><title>alloc::alloc::realloc (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="453" width="0.0888%" height="15" fill="rgb(221,117,51)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="463.50"></text></g><g><title>__GI___libc_realloc (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="437" width="0.0888%" height="15" fill="rgb(212,20,18)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="447.50"></text></g><g><title>_int_realloc (3,415,926 samples, 0.09%)</title><rect x="80.6537%" y="421" width="0.0888%" height="15" fill="rgb(245,133,36)" fg:x="3101619136" fg:w="3415926"/><text x="80.9037%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="549" width="0.0888%" height="15" fill="rgb(212,6,19)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="533" width="0.0888%" height="15" fill="rgb(218,1,36)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="517" width="0.0888%" height="15" fill="rgb(246,84,54)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="501" width="0.0888%" height="15" fill="rgb(242,110,6)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="485" width="0.0888%" height="15" fill="rgb(214,47,5)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="469" width="0.0888%" height="15" fill="rgb(218,159,25)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="479.50"></text></g><g><title>alloc::alloc::alloc (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="453" width="0.0888%" height="15" fill="rgb(215,211,28)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="463.50"></text></g><g><title>__GI___libc_malloc (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="437" width="0.0888%" height="15" fill="rgb(238,59,32)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="447.50"></text></g><g><title>_int_malloc (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="421" width="0.0888%" height="15" fill="rgb(226,82,3)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="431.50"></text></g><g><title>sysmalloc (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="405" width="0.0888%" height="15" fill="rgb(240,164,32)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="415.50"></text></g><g><title>__glibc_morecore (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="389" width="0.0888%" height="15" fill="rgb(232,46,7)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="399.50"></text></g><g><title>__GI___sbrk (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="373" width="0.0888%" height="15" fill="rgb(229,129,53)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="383.50"></text></g><g><title>__brk (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="357" width="0.0888%" height="15" fill="rgb(234,188,29)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="367.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="341" width="0.0888%" height="15" fill="rgb(246,141,4)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="351.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="325" width="0.0888%" height="15" fill="rgb(229,23,39)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="335.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="309" width="0.0888%" height="15" fill="rgb(206,12,3)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="319.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="293" width="0.0888%" height="15" fill="rgb(252,226,20)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="303.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="277" width="0.0888%" height="15" fill="rgb(216,123,35)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="287.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="261" width="0.0888%" height="15" fill="rgb(212,68,40)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="271.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="245" width="0.0888%" height="15" fill="rgb(254,125,32)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="255.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="229" width="0.0888%" height="15" fill="rgb(253,97,22)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="239.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="213" width="0.0888%" height="15" fill="rgb(241,101,14)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="223.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="197" width="0.0888%" height="15" fill="rgb(238,103,29)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="207.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="181" width="0.0888%" height="15" fill="rgb(233,195,47)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="191.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="165" width="0.0888%" height="15" fill="rgb(246,218,30)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="175.50"></text></g><g><title>[unknown] (3,415,497 samples, 0.09%)</title><rect x="80.7426%" y="149" width="0.0888%" height="15" fill="rgb(219,145,47)" fg:x="3105035062" fg:w="3415497"/><text x="80.9926%" y="159.50"></text></g><g><title>__GI___libc_malloc (3,418,796 samples, 0.09%)</title><rect x="80.8314%" y="517" width="0.0889%" height="15" fill="rgb(243,12,26)" fg:x="3108450559" fg:w="3418796"/><text x="81.0814%" y="527.50"></text></g><g><title>_int_malloc (3,418,796 samples, 0.09%)</title><rect x="80.8314%" y="501" width="0.0889%" height="15" fill="rgb(214,87,16)" fg:x="3108450559" fg:w="3418796"/><text x="81.0814%" y="511.50"></text></g><g><title>sysmalloc (3,418,796 samples, 0.09%)</title><rect x="80.8314%" y="485" width="0.0889%" height="15" fill="rgb(208,99,42)" fg:x="3108450559" fg:w="3418796"/><text x="81.0814%" y="495.50"></text></g><g><title>[unknown] (3,418,796 samples, 0.09%)</title><rect x="80.8314%" y="469" width="0.0889%" height="15" fill="rgb(253,99,2)" fg:x="3108450559" fg:w="3418796"/><text x="81.0814%" y="479.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (81,403,644 samples, 2.12%)</title><rect x="80.7426%" y="645" width="2.1168%" height="15" fill="rgb(220,168,23)" fg:x="3105035062" fg:w="81403644"/><text x="80.9926%" y="655.50">&lt;..</text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (81,403,644 samples, 2.12%)</title><rect x="80.7426%" y="629" width="2.1168%" height="15" fill="rgb(242,38,24)" fg:x="3105035062" fg:w="81403644"/><text x="80.9926%" y="639.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81,403,644 samples, 2.12%)</title><rect x="80.7426%" y="613" width="2.1168%" height="15" fill="rgb(225,182,9)" fg:x="3105035062" fg:w="81403644"/><text x="80.9926%" y="623.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (81,403,644 samples, 2.12%)</title><rect x="80.7426%" y="597" width="2.1168%" height="15" fill="rgb(243,178,37)" fg:x="3105035062" fg:w="81403644"/><text x="80.9926%" y="607.50">a..</text></g><g><title>alloc::slice::hack::to_vec (81,403,644 samples, 2.12%)</title><rect x="80.7426%" y="581" width="2.1168%" height="15" fill="rgb(232,139,19)" fg:x="3105035062" fg:w="81403644"/><text x="80.9926%" y="591.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (81,403,644 samples, 2.12%)</title><rect x="80.7426%" y="565" width="2.1168%" height="15" fill="rgb(225,201,24)" fg:x="3105035062" fg:w="81403644"/><text x="80.9926%" y="575.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (77,988,147 samples, 2.03%)</title><rect x="80.8314%" y="549" width="2.0280%" height="15" fill="rgb(221,47,46)" fg:x="3108450559" fg:w="77988147"/><text x="81.0814%" y="559.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (77,988,147 samples, 2.03%)</title><rect x="80.8314%" y="533" width="2.0280%" height="15" fill="rgb(249,23,13)" fg:x="3108450559" fg:w="77988147"/><text x="81.0814%" y="543.50">c..</text></g><g><title>__memcpy_avx_unaligned_erms (74,569,351 samples, 1.94%)</title><rect x="80.9203%" y="517" width="1.9391%" height="15" fill="rgb(219,9,5)" fg:x="3111869355" fg:w="74569351"/><text x="81.1703%" y="527.50">_..</text></g><g><title>[unknown] (64,221,137 samples, 1.67%)</title><rect x="81.1894%" y="501" width="1.6700%" height="15" fill="rgb(254,171,16)" fg:x="3122217569" fg:w="64221137"/><text x="81.4394%" y="511.50"></text></g><g><title>[unknown] (58,149,078 samples, 1.51%)</title><rect x="81.3473%" y="485" width="1.5121%" height="15" fill="rgb(230,171,20)" fg:x="3128289628" fg:w="58149078"/><text x="81.5973%" y="495.50"></text></g><g><title>[unknown] (58,149,078 samples, 1.51%)</title><rect x="81.3473%" y="469" width="1.5121%" height="15" fill="rgb(210,71,41)" fg:x="3128289628" fg:w="58149078"/><text x="81.5973%" y="479.50"></text></g><g><title>[unknown] (54,729,742 samples, 1.42%)</title><rect x="81.4362%" y="453" width="1.4232%" height="15" fill="rgb(206,173,20)" fg:x="3131708964" fg:w="54729742"/><text x="81.6862%" y="463.50"></text></g><g><title>[unknown] (47,952,089 samples, 1.25%)</title><rect x="81.6124%" y="437" width="1.2469%" height="15" fill="rgb(233,88,34)" fg:x="3138486617" fg:w="47952089"/><text x="81.8624%" y="447.50"></text></g><g><title>[unknown] (47,952,089 samples, 1.25%)</title><rect x="81.6124%" y="421" width="1.2469%" height="15" fill="rgb(223,209,46)" fg:x="3138486617" fg:w="47952089"/><text x="81.8624%" y="431.50"></text></g><g><title>[unknown] (47,952,089 samples, 1.25%)</title><rect x="81.6124%" y="405" width="1.2469%" height="15" fill="rgb(250,43,18)" fg:x="3138486617" fg:w="47952089"/><text x="81.8624%" y="415.50"></text></g><g><title>[unknown] (41,102,456 samples, 1.07%)</title><rect x="81.7905%" y="389" width="1.0688%" height="15" fill="rgb(208,13,10)" fg:x="3145336250" fg:w="41102456"/><text x="82.0405%" y="399.50"></text></g><g><title>[unknown] (34,257,943 samples, 0.89%)</title><rect x="81.9685%" y="373" width="0.8908%" height="15" fill="rgb(212,200,36)" fg:x="3152180763" fg:w="34257943"/><text x="82.2185%" y="383.50"></text></g><g><title>[unknown] (23,955,892 samples, 0.62%)</title><rect x="82.2364%" y="357" width="0.6229%" height="15" fill="rgb(225,90,30)" fg:x="3162482814" fg:w="23955892"/><text x="82.4864%" y="367.50"></text></g><g><title>[unknown] (17,136,731 samples, 0.45%)</title><rect x="82.4137%" y="341" width="0.4456%" height="15" fill="rgb(236,182,39)" fg:x="3169301975" fg:w="17136731"/><text x="82.6637%" y="351.50"></text></g><g><title>[unknown] (17,136,731 samples, 0.45%)</title><rect x="82.4137%" y="325" width="0.4456%" height="15" fill="rgb(212,144,35)" fg:x="3169301975" fg:w="17136731"/><text x="82.6637%" y="335.50"></text></g><g><title>[unknown] (17,136,731 samples, 0.45%)</title><rect x="82.4137%" y="309" width="0.4456%" height="15" fill="rgb(228,63,44)" fg:x="3169301975" fg:w="17136731"/><text x="82.6637%" y="319.50"></text></g><g><title>[unknown] (6,875,461 samples, 0.18%)</title><rect x="82.6806%" y="293" width="0.1788%" height="15" fill="rgb(228,109,6)" fg:x="3179563245" fg:w="6875461"/><text x="82.9306%" y="303.50"></text></g><g><title>[unknown] (3,431,563 samples, 0.09%)</title><rect x="82.7701%" y="277" width="0.0892%" height="15" fill="rgb(238,117,24)" fg:x="3183007143" fg:w="3431563"/><text x="83.0201%" y="287.50"></text></g><g><title>[unknown] (3,431,563 samples, 0.09%)</title><rect x="82.7701%" y="261" width="0.0892%" height="15" fill="rgb(242,26,26)" fg:x="3183007143" fg:w="3431563"/><text x="83.0201%" y="271.50"></text></g><g><title>[unknown] (3,431,563 samples, 0.09%)</title><rect x="82.7701%" y="245" width="0.0892%" height="15" fill="rgb(221,92,48)" fg:x="3183007143" fg:w="3431563"/><text x="83.0201%" y="255.50"></text></g><g><title>[unknown] (3,431,563 samples, 0.09%)</title><rect x="82.7701%" y="229" width="0.0892%" height="15" fill="rgb(209,209,32)" fg:x="3183007143" fg:w="3431563"/><text x="83.0201%" y="239.50"></text></g><g><title>[unknown] (3,431,563 samples, 0.09%)</title><rect x="82.7701%" y="213" width="0.0892%" height="15" fill="rgb(221,70,22)" fg:x="3183007143" fg:w="3431563"/><text x="83.0201%" y="223.50"></text></g><g><title>[unknown] (3,431,563 samples, 0.09%)</title><rect x="82.7701%" y="197" width="0.0892%" height="15" fill="rgb(248,145,5)" fg:x="3183007143" fg:w="3431563"/><text x="83.0201%" y="207.50"></text></g><g><title>[unknown] (3,431,563 samples, 0.09%)</title><rect x="82.7701%" y="181" width="0.0892%" height="15" fill="rgb(226,116,26)" fg:x="3183007143" fg:w="3431563"/><text x="83.0201%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::linalg::lu::LU&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt; (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="645" width="0.6221%" height="15" fill="rgb(244,5,17)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;&gt; (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="629" width="0.6221%" height="15" fill="rgb(252,159,33)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt; (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="613" width="0.6221%" height="15" fill="rgb(206,71,0)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="597" width="0.6221%" height="15" fill="rgb(233,118,54)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="581" width="0.6221%" height="15" fill="rgb(234,83,48)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="565" width="0.6221%" height="15" fill="rgb(228,3,54)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="549" width="0.6221%" height="15" fill="rgb(226,155,13)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="533" width="0.6221%" height="15" fill="rgb(241,28,37)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="517" width="0.6221%" height="15" fill="rgb(233,93,10)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="527.50"></text></g><g><title>__GI___libc_free (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="501" width="0.6221%" height="15" fill="rgb(225,113,19)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="511.50"></text></g><g><title>systrim (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="485" width="0.6221%" height="15" fill="rgb(241,2,18)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="495.50"></text></g><g><title>__glibc_morecore (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="469" width="0.6221%" height="15" fill="rgb(228,207,21)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="479.50"></text></g><g><title>__GI___sbrk (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="453" width="0.6221%" height="15" fill="rgb(213,211,35)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="463.50"></text></g><g><title>__brk (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="437" width="0.6221%" height="15" fill="rgb(209,83,10)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="447.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="421" width="0.6221%" height="15" fill="rgb(209,164,1)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="431.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="405" width="0.6221%" height="15" fill="rgb(213,184,43)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="415.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="389" width="0.6221%" height="15" fill="rgb(231,61,34)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="399.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="373" width="0.6221%" height="15" fill="rgb(235,75,3)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="383.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="357" width="0.6221%" height="15" fill="rgb(220,106,47)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="367.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="341" width="0.6221%" height="15" fill="rgb(210,196,33)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="351.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="325" width="0.6221%" height="15" fill="rgb(229,154,42)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="335.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="309" width="0.6221%" height="15" fill="rgb(228,114,26)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="319.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="293" width="0.6221%" height="15" fill="rgb(208,144,1)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="303.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="277" width="0.6221%" height="15" fill="rgb(239,112,37)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="287.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="261" width="0.6221%" height="15" fill="rgb(210,96,50)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="271.50"></text></g><g><title>[unknown] (23,925,336 samples, 0.62%)</title><rect x="82.8594%" y="245" width="0.6221%" height="15" fill="rgb(222,178,2)" fg:x="3186438706" fg:w="23925336"/><text x="83.1094%" y="255.50"></text></g><g><title>[unknown] (13,662,559 samples, 0.36%)</title><rect x="83.1262%" y="229" width="0.3553%" height="15" fill="rgb(226,74,18)" fg:x="3196701483" fg:w="13662559"/><text x="83.3762%" y="239.50"></text></g><g><title>[unknown] (6,826,680 samples, 0.18%)</title><rect x="83.3040%" y="213" width="0.1775%" height="15" fill="rgb(225,67,54)" fg:x="3203537362" fg:w="6826680"/><text x="83.5540%" y="223.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_row_slice (3,430,714 samples, 0.09%)</title><rect x="83.4815%" y="645" width="0.0892%" height="15" fill="rgb(251,92,32)" fg:x="3210364042" fg:w="3430714"/><text x="83.7315%" y="655.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_row_slice_generic (3,430,714 samples, 0.09%)</title><rect x="83.4815%" y="629" width="0.0892%" height="15" fill="rgb(228,149,22)" fg:x="3210364042" fg:w="3430714"/><text x="83.7315%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,430,714 samples, 0.09%)</title><rect x="83.4815%" y="613" width="0.0892%" height="15" fill="rgb(243,54,13)" fg:x="3210364042" fg:w="3430714"/><text x="83.7315%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (3,430,714 samples, 0.09%)</title><rect x="83.4815%" y="597" width="0.0892%" height="15" fill="rgb(243,180,28)" fg:x="3210364042" fg:w="3430714"/><text x="83.7315%" y="607.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3,430,714 samples, 0.09%)</title><rect x="83.4815%" y="581" width="0.0892%" height="15" fill="rgb(208,167,24)" fg:x="3210364042" fg:w="3430714"/><text x="83.7315%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (3,430,714 samples, 0.09%)</title><rect x="83.4815%" y="565" width="0.0892%" height="15" fill="rgb(245,73,45)" fg:x="3210364042" fg:w="3430714"/><text x="83.7315%" y="575.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::identity (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="645" width="0.8884%" height="15" fill="rgb(237,203,48)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="655.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::identity_generic (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="629" width="0.8884%" height="15" fill="rgb(211,197,16)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="639.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_diagonal_element_generic (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="613" width="0.8884%" height="15" fill="rgb(243,99,51)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="623.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros_generic (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="597" width="0.8884%" height="15" fill="rgb(215,123,29)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="607.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_element_generic (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="581" width="0.8884%" height="15" fill="rgb(239,186,37)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="591.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_iterator_generic (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="565" width="0.8884%" height="15" fill="rgb(252,136,39)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="575.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::allocate_from_iterator (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="549" width="0.8884%" height="15" fill="rgb(223,213,32)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="533" width="0.8884%" height="15" fill="rgb(233,115,5)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="517" width="0.8884%" height="15" fill="rgb(207,226,44)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="501" width="0.8884%" height="15" fill="rgb(208,126,0)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="485" width="0.8884%" height="15" fill="rgb(244,66,21)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="469" width="0.8884%" height="15" fill="rgb(222,97,12)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="453" width="0.8884%" height="15" fill="rgb(219,213,19)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="437" width="0.8884%" height="15" fill="rgb(252,169,30)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="421" width="0.8884%" height="15" fill="rgb(206,32,51)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="405" width="0.8884%" height="15" fill="rgb(250,172,42)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="389" width="0.8884%" height="15" fill="rgb(209,34,43)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="373" width="0.8884%" height="15" fill="rgb(223,11,35)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="383.50"></text></g><g><title>core::ptr::write (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="357" width="0.8884%" height="15" fill="rgb(251,219,26)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="367.50"></text></g><g><title>__memset_avx2_unaligned_erms (34,163,010 samples, 0.89%)</title><rect x="83.5707%" y="341" width="0.8884%" height="15" fill="rgb(231,119,3)" fg:x="3213794756" fg:w="34163010"/><text x="83.8207%" y="351.50"></text></g><g><title>[unknown] (27,318,610 samples, 0.71%)</title><rect x="83.7487%" y="325" width="0.7104%" height="15" fill="rgb(216,97,11)" fg:x="3220639156" fg:w="27318610"/><text x="83.9987%" y="335.50"></text></g><g><title>[unknown] (27,318,610 samples, 0.71%)</title><rect x="83.7487%" y="309" width="0.7104%" height="15" fill="rgb(223,59,9)" fg:x="3220639156" fg:w="27318610"/><text x="83.9987%" y="319.50"></text></g><g><title>[unknown] (27,318,610 samples, 0.71%)</title><rect x="83.7487%" y="293" width="0.7104%" height="15" fill="rgb(233,93,31)" fg:x="3220639156" fg:w="27318610"/><text x="83.9987%" y="303.50"></text></g><g><title>[unknown] (27,318,610 samples, 0.71%)</title><rect x="83.7487%" y="277" width="0.7104%" height="15" fill="rgb(239,81,33)" fg:x="3220639156" fg:w="27318610"/><text x="83.9987%" y="287.50"></text></g><g><title>[unknown] (27,318,610 samples, 0.71%)</title><rect x="83.7487%" y="261" width="0.7104%" height="15" fill="rgb(213,120,34)" fg:x="3220639156" fg:w="27318610"/><text x="83.9987%" y="271.50"></text></g><g><title>[unknown] (27,318,610 samples, 0.71%)</title><rect x="83.7487%" y="245" width="0.7104%" height="15" fill="rgb(243,49,53)" fg:x="3220639156" fg:w="27318610"/><text x="83.9987%" y="255.50"></text></g><g><title>[unknown] (27,318,610 samples, 0.71%)</title><rect x="83.7487%" y="229" width="0.7104%" height="15" fill="rgb(247,216,33)" fg:x="3220639156" fg:w="27318610"/><text x="83.9987%" y="239.50"></text></g><g><title>[unknown] (23,855,684 samples, 0.62%)</title><rect x="83.8387%" y="213" width="0.6203%" height="15" fill="rgb(226,26,14)" fg:x="3224102082" fg:w="23855684"/><text x="84.0887%" y="223.50"></text></g><g><title>[unknown] (23,855,684 samples, 0.62%)</title><rect x="83.8387%" y="197" width="0.6203%" height="15" fill="rgb(215,49,53)" fg:x="3224102082" fg:w="23855684"/><text x="84.0887%" y="207.50"></text></g><g><title>[unknown] (23,855,684 samples, 0.62%)</title><rect x="83.8387%" y="181" width="0.6203%" height="15" fill="rgb(245,162,40)" fg:x="3224102082" fg:w="23855684"/><text x="84.0887%" y="191.50"></text></g><g><title>[unknown] (17,054,123 samples, 0.44%)</title><rect x="84.0156%" y="165" width="0.4435%" height="15" fill="rgb(229,68,17)" fg:x="3230903643" fg:w="17054123"/><text x="84.2656%" y="175.50"></text></g><g><title>[unknown] (10,129,579 samples, 0.26%)</title><rect x="84.1957%" y="149" width="0.2634%" height="15" fill="rgb(213,182,10)" fg:x="3237828187" fg:w="10129579"/><text x="84.4457%" y="159.50"></text></g><g><title>[unknown] (6,719,277 samples, 0.17%)</title><rect x="84.2844%" y="133" width="0.1747%" height="15" fill="rgb(245,125,30)" fg:x="3241238489" fg:w="6719277"/><text x="84.5344%" y="143.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose (6,881,988 samples, 0.18%)</title><rect x="84.4591%" y="645" width="0.1790%" height="15" fill="rgb(232,202,2)" fg:x="3247957766" fg:w="6881988"/><text x="84.7091%" y="655.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose_to_uninit (6,881,988 samples, 0.18%)</title><rect x="84.4591%" y="629" width="0.1790%" height="15" fill="rgb(237,140,51)" fg:x="3247957766" fg:w="6881988"/><text x="84.7091%" y="639.50"></text></g><g><title>&lt;nalgebra::base::uninit::Uninit as nalgebra::base::uninit::InitStatus&lt;T&gt;&gt;::init (6,881,988 samples, 0.18%)</title><rect x="84.4591%" y="613" width="0.1790%" height="15" fill="rgb(236,157,25)" fg:x="3247957766" fg:w="6881988"/><text x="84.7091%" y="623.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (3,413,224 samples, 0.09%)</title><rect x="84.6380%" y="645" width="0.0888%" height="15" fill="rgb(219,209,0)" fg:x="3254839754" fg:w="3413224"/><text x="84.8880%" y="655.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (3,413,224 samples, 0.09%)</title><rect x="84.6380%" y="629" width="0.0888%" height="15" fill="rgb(240,116,54)" fg:x="3254839754" fg:w="3413224"/><text x="84.8880%" y="639.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (3,413,224 samples, 0.09%)</title><rect x="84.6380%" y="613" width="0.0888%" height="15" fill="rgb(216,10,36)" fg:x="3254839754" fg:w="3413224"/><text x="84.8880%" y="623.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (3,413,224 samples, 0.09%)</title><rect x="84.6380%" y="597" width="0.0888%" height="15" fill="rgb(222,72,44)" fg:x="3254839754" fg:w="3413224"/><text x="84.8880%" y="607.50"></text></g><g><title>matrixmultiply::gemm::make_packing_buffer (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="597" width="0.0885%" height="15" fill="rgb(232,159,9)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="607.50"></text></g><g><title>matrixmultiply::aligned_alloc::Alloc&lt;T&gt;::new (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="581" width="0.0885%" height="15" fill="rgb(210,39,32)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="565" width="0.0885%" height="15" fill="rgb(216,194,45)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="575.50"></text></g><g><title>__rdl_alloc (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="549" width="0.0885%" height="15" fill="rgb(218,18,35)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="559.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="533" width="0.0885%" height="15" fill="rgb(207,83,51)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="543.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="517" width="0.0885%" height="15" fill="rgb(225,63,43)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="527.50"></text></g><g><title>__posix_memalign (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="501" width="0.0885%" height="15" fill="rgb(207,57,36)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="511.50"></text></g><g><title>__posix_memalign (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="485" width="0.0885%" height="15" fill="rgb(216,99,33)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="495.50"></text></g><g><title>_mid_memalign (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="469" width="0.0885%" height="15" fill="rgb(225,42,16)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="479.50"></text></g><g><title>_int_memalign (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="453" width="0.0885%" height="15" fill="rgb(220,201,45)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="463.50"></text></g><g><title>_int_malloc (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="437" width="0.0885%" height="15" fill="rgb(225,33,4)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="447.50"></text></g><g><title>sysmalloc (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="421" width="0.0885%" height="15" fill="rgb(224,33,50)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="431.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="405" width="0.0885%" height="15" fill="rgb(246,198,51)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="415.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="389" width="0.0885%" height="15" fill="rgb(205,22,4)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="399.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="373" width="0.0885%" height="15" fill="rgb(206,3,8)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="383.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="357" width="0.0885%" height="15" fill="rgb(251,23,15)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="367.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="341" width="0.0885%" height="15" fill="rgb(252,88,28)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="351.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="325" width="0.0885%" height="15" fill="rgb(212,127,14)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="335.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="309" width="0.0885%" height="15" fill="rgb(247,145,37)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="319.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="293" width="0.0885%" height="15" fill="rgb(209,117,53)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="303.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="277" width="0.0885%" height="15" fill="rgb(212,90,42)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="287.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="261" width="0.0885%" height="15" fill="rgb(218,164,37)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="271.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="245" width="0.0885%" height="15" fill="rgb(246,65,34)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="255.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="229" width="0.0885%" height="15" fill="rgb(231,100,33)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="239.50"></text></g><g><title>[unknown] (3,401,583 samples, 0.09%)</title><rect x="84.7268%" y="213" width="0.0885%" height="15" fill="rgb(228,126,14)" fg:x="3258252978" fg:w="3401583"/><text x="84.9768%" y="223.50"></text></g><g><title>matrixmultiply::gemm::pack (20,616,395 samples, 0.54%)</title><rect x="84.8152%" y="597" width="0.5361%" height="15" fill="rgb(215,173,21)" fg:x="3261654561" fg:w="20616395"/><text x="85.0652%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20,616,395 samples, 0.54%)</title><rect x="84.8152%" y="581" width="0.5361%" height="15" fill="rgb(210,6,40)" fg:x="3261654561" fg:w="20616395"/><text x="85.0652%" y="591.50"></text></g><g><title>[unknown] (20,616,395 samples, 0.54%)</title><rect x="84.8152%" y="565" width="0.5361%" height="15" fill="rgb(212,48,18)" fg:x="3261654561" fg:w="20616395"/><text x="85.0652%" y="575.50"></text></g><g><title>[unknown] (17,161,445 samples, 0.45%)</title><rect x="84.9051%" y="549" width="0.4463%" height="15" fill="rgb(230,214,11)" fg:x="3265109511" fg:w="17161445"/><text x="85.1551%" y="559.50"></text></g><g><title>[unknown] (17,161,445 samples, 0.45%)</title><rect x="84.9051%" y="533" width="0.4463%" height="15" fill="rgb(254,105,39)" fg:x="3265109511" fg:w="17161445"/><text x="85.1551%" y="543.50"></text></g><g><title>[unknown] (17,161,445 samples, 0.45%)</title><rect x="84.9051%" y="517" width="0.4463%" height="15" fill="rgb(245,158,5)" fg:x="3265109511" fg:w="17161445"/><text x="85.1551%" y="527.50"></text></g><g><title>[unknown] (17,161,445 samples, 0.45%)</title><rect x="84.9051%" y="501" width="0.4463%" height="15" fill="rgb(249,208,11)" fg:x="3265109511" fg:w="17161445"/><text x="85.1551%" y="511.50"></text></g><g><title>[unknown] (17,161,445 samples, 0.45%)</title><rect x="84.9051%" y="485" width="0.4463%" height="15" fill="rgb(210,39,28)" fg:x="3265109511" fg:w="17161445"/><text x="85.1551%" y="495.50"></text></g><g><title>[unknown] (17,161,445 samples, 0.45%)</title><rect x="84.9051%" y="469" width="0.4463%" height="15" fill="rgb(211,56,53)" fg:x="3265109511" fg:w="17161445"/><text x="85.1551%" y="479.50"></text></g><g><title>[unknown] (17,161,445 samples, 0.45%)</title><rect x="84.9051%" y="453" width="0.4463%" height="15" fill="rgb(226,201,30)" fg:x="3265109511" fg:w="17161445"/><text x="85.1551%" y="463.50"></text></g><g><title>[unknown] (17,161,445 samples, 0.45%)</title><rect x="84.9051%" y="437" width="0.4463%" height="15" fill="rgb(239,101,34)" fg:x="3265109511" fg:w="17161445"/><text x="85.1551%" y="447.50"></text></g><g><title>[unknown] (13,752,101 samples, 0.36%)</title><rect x="84.9937%" y="421" width="0.3576%" height="15" fill="rgb(226,209,5)" fg:x="3268518855" fg:w="13752101"/><text x="85.2437%" y="431.50"></text></g><g><title>[unknown] (13,752,101 samples, 0.36%)</title><rect x="84.9937%" y="405" width="0.3576%" height="15" fill="rgb(250,105,47)" fg:x="3268518855" fg:w="13752101"/><text x="85.2437%" y="415.50"></text></g><g><title>[unknown] (13,752,101 samples, 0.36%)</title><rect x="84.9937%" y="389" width="0.3576%" height="15" fill="rgb(230,72,3)" fg:x="3268518855" fg:w="13752101"/><text x="85.2437%" y="399.50"></text></g><g><title>[unknown] (13,752,101 samples, 0.36%)</title><rect x="84.9937%" y="373" width="0.3576%" height="15" fill="rgb(232,218,39)" fg:x="3268518855" fg:w="13752101"/><text x="85.2437%" y="383.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (44,490,156 samples, 1.16%)</title><rect x="85.5286%" y="469" width="1.1569%" height="15" fill="rgb(248,166,6)" fg:x="3289086800" fg:w="44490156"/><text x="85.7786%" y="479.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (44,490,156 samples, 1.16%)</title><rect x="85.5286%" y="453" width="1.1569%" height="15" fill="rgb(247,89,20)" fg:x="3289086800" fg:w="44490156"/><text x="85.7786%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (23,152,285 samples, 0.60%)</title><rect x="86.6855%" y="469" width="0.6020%" height="15" fill="rgb(248,130,54)" fg:x="3333576956" fg:w="23152285"/><text x="86.9355%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (47,860,294 samples, 1.24%)</title><rect x="87.2875%" y="469" width="1.2445%" height="15" fill="rgb(234,196,4)" fg:x="3356729241" fg:w="47860294"/><text x="87.5375%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (3,413,915 samples, 0.09%)</title><rect x="88.5321%" y="469" width="0.0888%" height="15" fill="rgb(250,143,31)" fg:x="3404589535" fg:w="3413915"/><text x="88.7821%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (9,256,316 samples, 0.24%)</title><rect x="88.6209%" y="469" width="0.2407%" height="15" fill="rgb(211,110,34)" fg:x="3408003450" fg:w="9256316"/><text x="88.8709%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (9,256,316 samples, 0.24%)</title><rect x="88.6209%" y="453" width="0.2407%" height="15" fill="rgb(215,124,48)" fg:x="3408003450" fg:w="9256316"/><text x="88.8709%" y="463.50"></text></g><g><title>core::ptr::write_unaligned (9,256,316 samples, 0.24%)</title><rect x="88.6209%" y="437" width="0.2407%" height="15" fill="rgb(216,46,13)" fg:x="3408003450" fg:w="9256316"/><text x="88.8709%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9,256,316 samples, 0.24%)</title><rect x="88.6209%" y="421" width="0.2407%" height="15" fill="rgb(205,184,25)" fg:x="3408003450" fg:w="9256316"/><text x="88.8709%" y="431.50"></text></g><g><title>[unknown] (5,812,655 samples, 0.15%)</title><rect x="88.7104%" y="405" width="0.1512%" height="15" fill="rgb(228,1,10)" fg:x="3411447111" fg:w="5812655"/><text x="88.9604%" y="415.50"></text></g><g><title>[unknown] (5,812,655 samples, 0.15%)</title><rect x="88.7104%" y="389" width="0.1512%" height="15" fill="rgb(213,116,27)" fg:x="3411447111" fg:w="5812655"/><text x="88.9604%" y="399.50"></text></g><g><title>[unknown] (5,812,655 samples, 0.15%)</title><rect x="88.7104%" y="373" width="0.1512%" height="15" fill="rgb(241,95,50)" fg:x="3411447111" fg:w="5812655"/><text x="88.9604%" y="383.50"></text></g><g><title>[unknown] (5,812,655 samples, 0.15%)</title><rect x="88.7104%" y="357" width="0.1512%" height="15" fill="rgb(238,48,32)" fg:x="3411447111" fg:w="5812655"/><text x="88.9604%" y="367.50"></text></g><g><title>[unknown] (5,812,655 samples, 0.15%)</title><rect x="88.7104%" y="341" width="0.1512%" height="15" fill="rgb(235,113,49)" fg:x="3411447111" fg:w="5812655"/><text x="88.9604%" y="351.50"></text></g><g><title>[unknown] (3,299,935 samples, 0.09%)</title><rect x="88.7758%" y="325" width="0.0858%" height="15" fill="rgb(205,127,43)" fg:x="3413959831" fg:w="3299935"/><text x="89.0258%" y="335.50"></text></g><g><title>[unknown] (3,299,935 samples, 0.09%)</title><rect x="88.7758%" y="309" width="0.0858%" height="15" fill="rgb(250,162,2)" fg:x="3413959831" fg:w="3299935"/><text x="89.0258%" y="319.50"></text></g><g><title>[unknown] (3,299,935 samples, 0.09%)</title><rect x="88.7758%" y="293" width="0.0858%" height="15" fill="rgb(220,13,41)" fg:x="3413959831" fg:w="3299935"/><text x="89.0258%" y="303.50"></text></g><g><title>[unknown] (3,299,935 samples, 0.09%)</title><rect x="88.7758%" y="277" width="0.0858%" height="15" fill="rgb(249,221,25)" fg:x="3413959831" fg:w="3299935"/><text x="89.0258%" y="287.50"></text></g><g><title>[unknown] (3,299,935 samples, 0.09%)</title><rect x="88.7758%" y="261" width="0.0858%" height="15" fill="rgb(215,208,19)" fg:x="3413959831" fg:w="3299935"/><text x="89.0258%" y="271.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (138,518,911 samples, 3.60%)</title><rect x="85.3513%" y="517" width="3.6020%" height="15" fill="rgb(236,175,2)" fg:x="3282270956" fg:w="138518911"/><text x="85.6013%" y="527.50">&lt;mat..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (138,518,911 samples, 3.60%)</title><rect x="85.3513%" y="501" width="3.6020%" height="15" fill="rgb(241,52,2)" fg:x="3282270956" fg:w="138518911"/><text x="85.6013%" y="511.50">matr..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (138,518,911 samples, 3.60%)</title><rect x="85.3513%" y="485" width="3.6020%" height="15" fill="rgb(248,140,14)" fg:x="3282270956" fg:w="138518911"/><text x="85.6013%" y="495.50">matr..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,530,101 samples, 0.09%)</title><rect x="88.8616%" y="469" width="0.0918%" height="15" fill="rgb(253,22,42)" fg:x="3417259766" fg:w="3530101"/><text x="89.1116%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,530,101 samples, 0.09%)</title><rect x="88.8616%" y="453" width="0.0918%" height="15" fill="rgb(234,61,47)" fg:x="3417259766" fg:w="3530101"/><text x="89.1116%" y="463.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (3,430,338 samples, 0.09%)</title><rect x="88.9534%" y="501" width="0.0892%" height="15" fill="rgb(208,226,15)" fg:x="3420789867" fg:w="3430338"/><text x="89.2034%" y="511.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (3,430,338 samples, 0.09%)</title><rect x="88.9534%" y="485" width="0.0892%" height="15" fill="rgb(217,221,4)" fg:x="3420789867" fg:w="3430338"/><text x="89.2034%" y="495.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (3,430,338 samples, 0.09%)</title><rect x="88.9534%" y="469" width="0.0892%" height="15" fill="rgb(212,174,34)" fg:x="3420789867" fg:w="3430338"/><text x="89.2034%" y="479.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (3,430,338 samples, 0.09%)</title><rect x="88.9534%" y="453" width="0.0892%" height="15" fill="rgb(253,83,4)" fg:x="3420789867" fg:w="3430338"/><text x="89.2034%" y="463.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (3,430,338 samples, 0.09%)</title><rect x="88.9534%" y="437" width="0.0892%" height="15" fill="rgb(250,195,49)" fg:x="3420789867" fg:w="3430338"/><text x="89.2034%" y="447.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (145,397,121 samples, 3.78%)</title><rect x="85.3513%" y="565" width="3.7809%" height="15" fill="rgb(241,192,25)" fg:x="3282270956" fg:w="145397121"/><text x="85.6013%" y="575.50">matr..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (145,397,121 samples, 3.78%)</title><rect x="85.3513%" y="549" width="3.7809%" height="15" fill="rgb(208,124,10)" fg:x="3282270956" fg:w="145397121"/><text x="85.6013%" y="559.50">matr..</text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (145,397,121 samples, 3.78%)</title><rect x="85.3513%" y="533" width="3.7809%" height="15" fill="rgb(222,33,0)" fg:x="3282270956" fg:w="145397121"/><text x="85.6013%" y="543.50">matr..</text></g><g><title>matrixmultiply::gemm::masked_kernel (6,878,210 samples, 0.18%)</title><rect x="88.9534%" y="517" width="0.1789%" height="15" fill="rgb(234,209,28)" fg:x="3420789867" fg:w="6878210"/><text x="89.2034%" y="527.50"></text></g><g><title>matrixmultiply::gemm::c_to_masked_ab_beta_c (3,447,872 samples, 0.09%)</title><rect x="89.0426%" y="501" width="0.0897%" height="15" fill="rgb(224,11,23)" fg:x="3424220205" fg:w="3447872"/><text x="89.2926%" y="511.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (186,611,725 samples, 4.85%)</title><rect x="84.7268%" y="613" width="4.8526%" height="15" fill="rgb(232,99,1)" fg:x="3258252978" fg:w="186611725"/><text x="84.9768%" y="623.50">matrix..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (162,593,747 samples, 4.23%)</title><rect x="85.3513%" y="597" width="4.2280%" height="15" fill="rgb(237,95,45)" fg:x="3282270956" fg:w="162593747"/><text x="85.6013%" y="607.50">matri..</text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (162,593,747 samples, 4.23%)</title><rect x="85.3513%" y="581" width="4.2280%" height="15" fill="rgb(208,109,11)" fg:x="3282270956" fg:w="162593747"/><text x="85.6013%" y="591.50">matri..</text></g><g><title>matrixmultiply::gemm::pack (17,196,626 samples, 0.45%)</title><rect x="89.1322%" y="565" width="0.4472%" height="15" fill="rgb(216,190,48)" fg:x="3427668077" fg:w="17196626"/><text x="89.3822%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17,196,626 samples, 0.45%)</title><rect x="89.1322%" y="549" width="0.4472%" height="15" fill="rgb(251,171,36)" fg:x="3427668077" fg:w="17196626"/><text x="89.3822%" y="559.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (190,035,985 samples, 4.94%)</title><rect x="84.7268%" y="645" width="4.9416%" height="15" fill="rgb(230,62,22)" fg:x="3258252978" fg:w="190035985"/><text x="84.9768%" y="655.50">nalgeb..</text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (190,035,985 samples, 4.94%)</title><rect x="84.7268%" y="629" width="4.9416%" height="15" fill="rgb(225,114,35)" fg:x="3258252978" fg:w="190035985"/><text x="84.9768%" y="639.50">nalgeb..</text></g><g><title>nalgebra::base::blas_uninit::gemv_uninit (3,424,260 samples, 0.09%)</title><rect x="89.5794%" y="613" width="0.0890%" height="15" fill="rgb(215,118,42)" fg:x="3444864703" fg:w="3424260"/><text x="89.8294%" y="623.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (3,424,260 samples, 0.09%)</title><rect x="89.5794%" y="597" width="0.0890%" height="15" fill="rgb(243,119,21)" fg:x="3444864703" fg:w="3424260"/><text x="89.8294%" y="607.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (3,424,260 samples, 0.09%)</title><rect x="89.5794%" y="581" width="0.0890%" height="15" fill="rgb(252,177,53)" fg:x="3444864703" fg:w="3424260"/><text x="89.8294%" y="591.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (3,424,260 samples, 0.09%)</title><rect x="89.5794%" y="565" width="0.0890%" height="15" fill="rgb(237,209,29)" fg:x="3444864703" fg:w="3424260"/><text x="89.8294%" y="575.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;nalgebra::base::matrix::Matrix&lt;f64,R,C,S&gt;&gt; for f64&gt;::mul (3,447,588 samples, 0.09%)</title><rect x="89.6684%" y="645" width="0.0897%" height="15" fill="rgb(212,65,23)" fg:x="3448288963" fg:w="3447588"/><text x="89.9184%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::gt (3,413,605 samples, 0.09%)</title><rect x="89.7581%" y="597" width="0.0888%" height="15" fill="rgb(230,222,46)" fg:x="3451736551" fg:w="3413605"/><text x="90.0081%" y="607.50"></text></g><g><title>[unknown] (3,413,605 samples, 0.09%)</title><rect x="89.7581%" y="581" width="0.0888%" height="15" fill="rgb(215,135,32)" fg:x="3451736551" fg:w="3413605"/><text x="90.0081%" y="591.50"></text></g><g><title>[unknown] (3,413,605 samples, 0.09%)</title><rect x="89.7581%" y="565" width="0.0888%" height="15" fill="rgb(246,101,22)" fg:x="3451736551" fg:w="3413605"/><text x="90.0081%" y="575.50"></text></g><g><title>[unknown] (3,413,605 samples, 0.09%)</title><rect x="89.7581%" y="549" width="0.0888%" height="15" fill="rgb(206,107,13)" fg:x="3451736551" fg:w="3413605"/><text x="90.0081%" y="559.50"></text></g><g><title>[unknown] (3,413,605 samples, 0.09%)</title><rect x="89.7581%" y="533" width="0.0888%" height="15" fill="rgb(250,100,44)" fg:x="3451736551" fg:w="3413605"/><text x="90.0081%" y="543.50"></text></g><g><title>[unknown] (3,413,605 samples, 0.09%)</title><rect x="89.7581%" y="517" width="0.0888%" height="15" fill="rgb(231,147,38)" fg:x="3451736551" fg:w="3413605"/><text x="90.0081%" y="527.50"></text></g><g><title>[unknown] (3,413,605 samples, 0.09%)</title><rect x="89.7581%" y="501" width="0.0888%" height="15" fill="rgb(229,8,40)" fg:x="3451736551" fg:w="3413605"/><text x="90.0081%" y="511.50"></text></g><g><title>[unknown] (3,413,605 samples, 0.09%)</title><rect x="89.7581%" y="485" width="0.0888%" height="15" fill="rgb(221,135,30)" fg:x="3451736551" fg:w="3413605"/><text x="90.0081%" y="495.50"></text></g><g><title>[unknown] (3,413,605 samples, 0.09%)</title><rect x="89.7581%" y="469" width="0.0888%" height="15" fill="rgb(249,193,18)" fg:x="3451736551" fg:w="3413605"/><text x="90.0081%" y="479.50"></text></g><g><title>[unknown] (3,413,605 samples, 0.09%)</title><rect x="89.7581%" y="453" width="0.0888%" height="15" fill="rgb(209,133,39)" fg:x="3451736551" fg:w="3413605"/><text x="90.0081%" y="463.50"></text></g><g><title>nalgebra::base::min_max::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::icamax (10,238,304 samples, 0.27%)</title><rect x="89.7581%" y="613" width="0.2662%" height="15" fill="rgb(232,100,14)" fg:x="3451736551" fg:w="10238304"/><text x="90.0081%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6,824,699 samples, 0.18%)</title><rect x="89.8469%" y="597" width="0.1775%" height="15" fill="rgb(224,185,1)" fg:x="3455150156" fg:w="6824699"/><text x="90.0969%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6,824,699 samples, 0.18%)</title><rect x="89.8469%" y="581" width="0.1775%" height="15" fill="rgb(223,139,8)" fg:x="3455150156" fg:w="6824699"/><text x="90.0969%" y="591.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (6,824,699 samples, 0.18%)</title><rect x="89.8469%" y="565" width="0.1775%" height="15" fill="rgb(232,213,38)" fg:x="3455150156" fg:w="6824699"/><text x="90.0969%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (6,824,699 samples, 0.18%)</title><rect x="89.8469%" y="549" width="0.1775%" height="15" fill="rgb(207,94,22)" fg:x="3455150156" fg:w="6824699"/><text x="90.0969%" y="559.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (10,310,415 samples, 0.27%)</title><rect x="90.0243%" y="597" width="0.2681%" height="15" fill="rgb(219,183,54)" fg:x="3461974855" fg:w="10310415"/><text x="90.2743%" y="607.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (105,720,670 samples, 2.75%)</title><rect x="92.0504%" y="533" width="2.7491%" height="15" fill="rgb(216,185,54)" fg:x="3539890016" fg:w="105720670"/><text x="92.3004%" y="543.50">&lt;f..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (78,055,215 samples, 2.03%)</title><rect x="94.7995%" y="533" width="2.0297%" height="15" fill="rgb(254,217,39)" fg:x="3645610686" fg:w="78055215"/><text x="95.0495%" y="543.50">c..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (282,147,581 samples, 7.34%)</title><rect x="90.2924%" y="597" width="7.3369%" height="15" fill="rgb(240,178,23)" fg:x="3472285270" fg:w="282147581"/><text x="90.5424%" y="607.50">nalgebra::..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (282,147,581 samples, 7.34%)</title><rect x="90.2924%" y="581" width="7.3369%" height="15" fill="rgb(218,11,47)" fg:x="3472285270" fg:w="282147581"/><text x="90.5424%" y="591.50">nalgebra::..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (282,147,581 samples, 7.34%)</title><rect x="90.2924%" y="565" width="7.3369%" height="15" fill="rgb(218,51,51)" fg:x="3472285270" fg:w="282147581"/><text x="90.5424%" y="575.50">nalgebra::..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (282,147,581 samples, 7.34%)</title><rect x="90.2924%" y="549" width="7.3369%" height="15" fill="rgb(238,126,27)" fg:x="3472285270" fg:w="282147581"/><text x="90.5424%" y="559.50">nalgebra::..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (30,766,950 samples, 0.80%)</title><rect x="96.8293%" y="533" width="0.8001%" height="15" fill="rgb(249,202,22)" fg:x="3723665901" fg:w="30766950"/><text x="97.0793%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (30,766,950 samples, 0.80%)</title><rect x="96.8293%" y="517" width="0.8001%" height="15" fill="rgb(254,195,49)" fg:x="3723665901" fg:w="30766950"/><text x="97.0793%" y="527.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (23,923,674 samples, 0.62%)</title><rect x="97.0072%" y="501" width="0.6221%" height="15" fill="rgb(208,123,14)" fg:x="3730509177" fg:w="23923674"/><text x="97.2572%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (23,923,674 samples, 0.62%)</title><rect x="97.0072%" y="485" width="0.6221%" height="15" fill="rgb(224,200,8)" fg:x="3730509177" fg:w="23923674"/><text x="97.2572%" y="495.50"></text></g><g><title>nalgebra::linalg::lu::gauss_step (295,872,090 samples, 7.69%)</title><rect x="90.0243%" y="613" width="7.6938%" height="15" fill="rgb(217,61,36)" fg:x="3461974855" fg:w="295872090"/><text x="90.2743%" y="623.50">nalgebra::l..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::MulAssign&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul_assign (3,414,094 samples, 0.09%)</title><rect x="97.6293%" y="597" width="0.0888%" height="15" fill="rgb(206,35,45)" fg:x="3754432851" fg:w="3414094"/><text x="97.8793%" y="607.50"></text></g><g><title>&lt;f64 as core::ops::arith::MulAssign&gt;::mul_assign (3,414,094 samples, 0.09%)</title><rect x="97.6293%" y="581" width="0.0888%" height="15" fill="rgb(217,65,33)" fg:x="3754432851" fg:w="3414094"/><text x="97.8793%" y="591.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (13,737,440 samples, 0.36%)</title><rect x="98.1637%" y="533" width="0.3572%" height="15" fill="rgb(222,158,48)" fg:x="3774982896" fg:w="13737440"/><text x="98.4137%" y="543.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (6,835,824 samples, 0.18%)</title><rect x="98.5209%" y="533" width="0.1778%" height="15" fill="rgb(254,2,54)" fg:x="3788720336" fg:w="6835824"/><text x="98.7709%" y="543.50"></text></g><g><title>nalgebra::linalg::lu::gauss_step_swap (51,425,549 samples, 1.34%)</title><rect x="97.7181%" y="613" width="1.3373%" height="15" fill="rgb(250,143,38)" fg:x="3757846945" fg:w="51425549"/><text x="97.9681%" y="623.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (51,425,549 samples, 1.34%)</title><rect x="97.7181%" y="597" width="1.3373%" height="15" fill="rgb(248,25,0)" fg:x="3757846945" fg:w="51425549"/><text x="97.9681%" y="607.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (51,425,549 samples, 1.34%)</title><rect x="97.7181%" y="581" width="1.3373%" height="15" fill="rgb(206,152,27)" fg:x="3757846945" fg:w="51425549"/><text x="97.9681%" y="591.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (51,425,549 samples, 1.34%)</title><rect x="97.7181%" y="565" width="1.3373%" height="15" fill="rgb(240,77,30)" fg:x="3757846945" fg:w="51425549"/><text x="97.9681%" y="575.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (51,425,549 samples, 1.34%)</title><rect x="97.7181%" y="549" width="1.3373%" height="15" fill="rgb(231,5,3)" fg:x="3757846945" fg:w="51425549"/><text x="97.9681%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13,716,334 samples, 0.36%)</title><rect x="98.6987%" y="533" width="0.3567%" height="15" fill="rgb(207,226,32)" fg:x="3795556160" fg:w="13716334"/><text x="98.9487%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13,716,334 samples, 0.36%)</title><rect x="98.6987%" y="517" width="0.3567%" height="15" fill="rgb(222,207,47)" fg:x="3795556160" fg:w="13716334"/><text x="98.9487%" y="527.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (10,274,509 samples, 0.27%)</title><rect x="98.7882%" y="501" width="0.2672%" height="15" fill="rgb(229,115,45)" fg:x="3798997985" fg:w="10274509"/><text x="99.0382%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (10,274,509 samples, 0.27%)</title><rect x="98.7882%" y="485" width="0.2672%" height="15" fill="rgb(224,191,6)" fg:x="3798997985" fg:w="10274509"/><text x="99.0382%" y="495.50"></text></g><g><title>nalgebra::linalg::decomposition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::lu (360,986,392 samples, 9.39%)</title><rect x="89.7581%" y="645" width="9.3870%" height="15" fill="rgb(230,227,24)" fg:x="3451736551" fg:w="360986392"/><text x="90.0081%" y="655.50">nalgebra::lin..</text></g><g><title>nalgebra::linalg::lu::LU&lt;T,R,C&gt;::new (360,986,392 samples, 9.39%)</title><rect x="89.7581%" y="629" width="9.3870%" height="15" fill="rgb(228,80,19)" fg:x="3451736551" fg:w="360986392"/><text x="90.0081%" y="639.50">nalgebra::lin..</text></g><g><title>nalgebra::linalg::permutation_sequence::PermutationSequence&lt;D&gt;::identity_generic (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="613" width="0.0897%" height="15" fill="rgb(247,229,0)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="623.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::repeat_generic (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="597" width="0.0897%" height="15" fill="rgb(237,194,15)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="607.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_iterator_generic (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="581" width="0.0897%" height="15" fill="rgb(219,203,20)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="591.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::allocate_from_iterator (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="565" width="0.0897%" height="15" fill="rgb(234,128,8)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="549" width="0.0897%" height="15" fill="rgb(248,202,8)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="533" width="0.0897%" height="15" fill="rgb(206,104,37)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="517" width="0.0897%" height="15" fill="rgb(223,8,27)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="501" width="0.0897%" height="15" fill="rgb(216,217,28)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="485" width="0.0897%" height="15" fill="rgb(249,199,1)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="469" width="0.0897%" height="15" fill="rgb(240,85,17)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="453" width="0.0897%" height="15" fill="rgb(206,108,45)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="437" width="0.0897%" height="15" fill="rgb(245,210,41)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="421" width="0.0897%" height="15" fill="rgb(206,13,37)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="405" width="0.0897%" height="15" fill="rgb(250,61,18)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="389" width="0.0897%" height="15" fill="rgb(235,172,48)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="399.50"></text></g><g><title>core::ptr::write (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="373" width="0.0897%" height="15" fill="rgb(249,201,17)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (3,450,449 samples, 0.09%)</title><rect x="99.0554%" y="357" width="0.0897%" height="15" fill="rgb(219,208,6)" fg:x="3809272494" fg:w="3450449"/><text x="99.3054%" y="367.50"></text></g><g><title>nalgebra::linalg::lu::LU&lt;T,D,D&gt;::solve (6,896,387 samples, 0.18%)</title><rect x="99.1451%" y="645" width="0.1793%" height="15" fill="rgb(248,31,23)" fg:x="3812722943" fg:w="6896387"/><text x="99.3951%" y="655.50"></text></g><g><title>nalgebra::linalg::lu::LU&lt;T,D,D&gt;::solve_mut (6,896,387 samples, 0.18%)</title><rect x="99.1451%" y="629" width="0.1793%" height="15" fill="rgb(245,15,42)" fg:x="3812722943" fg:w="6896387"/><text x="99.3951%" y="639.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::solve_lower_triangular_with_diag_mut (6,896,387 samples, 0.18%)</title><rect x="99.1451%" y="613" width="0.1793%" height="15" fill="rgb(222,217,39)" fg:x="3812722943" fg:w="6896387"/><text x="99.3951%" y="623.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (6,896,387 samples, 0.18%)</title><rect x="99.1451%" y="597" width="0.1793%" height="15" fill="rgb(210,219,27)" fg:x="3812722943" fg:w="6896387"/><text x="99.3951%" y="607.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (6,896,387 samples, 0.18%)</title><rect x="99.1451%" y="581" width="0.1793%" height="15" fill="rgb(252,166,36)" fg:x="3812722943" fg:w="6896387"/><text x="99.3951%" y="591.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (6,896,387 samples, 0.18%)</title><rect x="99.1451%" y="565" width="0.1793%" height="15" fill="rgb(245,132,34)" fg:x="3812722943" fg:w="6896387"/><text x="99.3951%" y="575.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (6,896,387 samples, 0.18%)</title><rect x="99.1451%" y="549" width="0.1793%" height="15" fill="rgb(236,54,3)" fg:x="3812722943" fg:w="6896387"/><text x="99.3951%" y="559.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (6,896,387 samples, 0.18%)</title><rect x="99.1451%" y="533" width="0.1793%" height="15" fill="rgb(241,173,43)" fg:x="3812722943" fg:w="6896387"/><text x="99.3951%" y="543.50"></text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::update_weights (728,294,518 samples, 18.94%)</title><rect x="80.6537%" y="661" width="18.9384%" height="15" fill="rgb(215,190,9)" fg:x="3101619136" fg:w="728294518"/><text x="80.9037%" y="671.50">rkl::core::optimizers::Marquar..</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (10,294,324 samples, 0.27%)</title><rect x="99.3244%" y="645" width="0.2677%" height="15" fill="rgb(242,101,16)" fg:x="3819619330" fg:w="10294324"/><text x="99.5744%" y="655.50"></text></g><g><title>rkl::core::layers::Dense::forward (10,294,324 samples, 0.27%)</title><rect x="99.3244%" y="629" width="0.2677%" height="15" fill="rgb(223,190,21)" fg:x="3819619330" fg:w="10294324"/><text x="99.5744%" y="639.50"></text></g><g><title>rkl::core::activations::Activation::forward (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="613" width="0.1785%" height="15" fill="rgb(215,228,25)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="623.50"></text></g><g><title>rkl::core::activations::tanh_forward (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="597" width="0.1785%" height="15" fill="rgb(225,36,22)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="607.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="581" width="0.1785%" height="15" fill="rgb(251,106,46)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="591.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="565" width="0.1785%" height="15" fill="rgb(208,90,1)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="575.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="549" width="0.1785%" height="15" fill="rgb(243,10,4)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="559.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="533" width="0.1785%" height="15" fill="rgb(212,137,27)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="517" width="0.1785%" height="15" fill="rgb(231,220,49)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="527.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="501" width="0.1785%" height="15" fill="rgb(237,96,20)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="511.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="485" width="0.1785%" height="15" fill="rgb(239,229,30)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="495.50"></text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="469" width="0.1785%" height="15" fill="rgb(219,65,33)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::tanh (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="453" width="0.1785%" height="15" fill="rgb(243,134,7)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="463.50"></text></g><g><title>__tanh (6,863,260 samples, 0.18%)</title><rect x="99.4136%" y="437" width="0.1785%" height="15" fill="rgb(216,177,54)" fg:x="3823050394" fg:w="6863260"/><text x="99.6636%" y="447.50"></text></g><g><title>__expm1_fma (3,460,240 samples, 0.09%)</title><rect x="99.5021%" y="421" width="0.0900%" height="15" fill="rgb(211,160,20)" fg:x="3826453414" fg:w="3460240"/><text x="99.7521%" y="431.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (3,442,288 samples, 0.09%)</title><rect x="99.5921%" y="533" width="0.0895%" height="15" fill="rgb(239,85,39)" fg:x="3829913654" fg:w="3442288"/><text x="99.8421%" y="543.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (3,442,288 samples, 0.09%)</title><rect x="99.5921%" y="517" width="0.0895%" height="15" fill="rgb(232,125,22)" fg:x="3829913654" fg:w="3442288"/><text x="99.8421%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,442,288 samples, 0.09%)</title><rect x="99.5921%" y="501" width="0.0895%" height="15" fill="rgb(244,57,34)" fg:x="3829913654" fg:w="3442288"/><text x="99.8421%" y="511.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (3,442,288 samples, 0.09%)</title><rect x="99.5921%" y="485" width="0.0895%" height="15" fill="rgb(214,203,32)" fg:x="3829913654" fg:w="3442288"/><text x="99.8421%" y="495.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (3,442,288 samples, 0.09%)</title><rect x="99.5921%" y="469" width="0.0895%" height="15" fill="rgb(207,58,43)" fg:x="3829913654" fg:w="3442288"/><text x="99.8421%" y="479.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::mul_pow10 (3,442,288 samples, 0.09%)</title><rect x="99.5921%" y="453" width="0.0895%" height="15" fill="rgb(215,193,15)" fg:x="3829913654" fg:w="3442288"/><text x="99.8421%" y="463.50"></text></g><g><title>core::num::bignum::Big32x40::mul_small (3,442,288 samples, 0.09%)</title><rect x="99.5921%" y="437" width="0.0895%" height="15" fill="rgb(232,15,44)" fg:x="3829913654" fg:w="3442288"/><text x="99.8421%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,442,288 samples, 0.09%)</title><rect x="99.5921%" y="421" width="0.0895%" height="15" fill="rgb(212,3,48)" fg:x="3829913654" fg:w="3442288"/><text x="99.8421%" y="431.50"></text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit (3,730,366,011 samples, 97.00%)</title><rect x="2.7664%" y="677" width="97.0035%" height="15" fill="rgb(218,128,7)" fg:x="106383132" fg:w="3730366011"/><text x="3.0164%" y="687.50">rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit</text></g><g><title>std::io::stdio::_print (6,835,489 samples, 0.18%)</title><rect x="99.5921%" y="661" width="0.1777%" height="15" fill="rgb(226,216,39)" fg:x="3829913654" fg:w="6835489"/><text x="99.8421%" y="671.50"></text></g><g><title>std::io::stdio::print_to (6,835,489 samples, 0.18%)</title><rect x="99.5921%" y="645" width="0.1777%" height="15" fill="rgb(243,47,51)" fg:x="3829913654" fg:w="6835489"/><text x="99.8421%" y="655.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (6,835,489 samples, 0.18%)</title><rect x="99.5921%" y="629" width="0.1777%" height="15" fill="rgb(241,183,40)" fg:x="3829913654" fg:w="6835489"/><text x="99.8421%" y="639.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (6,835,489 samples, 0.18%)</title><rect x="99.5921%" y="613" width="0.1777%" height="15" fill="rgb(231,217,32)" fg:x="3829913654" fg:w="6835489"/><text x="99.8421%" y="623.50"></text></g><g><title>std::io::Write::write_fmt (6,835,489 samples, 0.18%)</title><rect x="99.5921%" y="597" width="0.1777%" height="15" fill="rgb(229,61,38)" fg:x="3829913654" fg:w="6835489"/><text x="99.8421%" y="607.50"></text></g><g><title>core::fmt::write (6,835,489 samples, 0.18%)</title><rect x="99.5921%" y="581" width="0.1777%" height="15" fill="rgb(225,210,5)" fg:x="3829913654" fg:w="6835489"/><text x="99.8421%" y="591.50"></text></g><g><title>core::fmt::run (6,835,489 samples, 0.18%)</title><rect x="99.5921%" y="565" width="0.1777%" height="15" fill="rgb(231,79,45)" fg:x="3829913654" fg:w="6835489"/><text x="99.8421%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6,835,489 samples, 0.18%)</title><rect x="99.5921%" y="549" width="0.1777%" height="15" fill="rgb(224,100,7)" fg:x="3829913654" fg:w="6835489"/><text x="99.8421%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (3,393,201 samples, 0.09%)</title><rect x="99.6816%" y="533" width="0.0882%" height="15" fill="rgb(241,198,18)" fg:x="3833355942" fg:w="3393201"/><text x="99.9316%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (3,393,201 samples, 0.09%)</title><rect x="99.6816%" y="517" width="0.0882%" height="15" fill="rgb(252,97,53)" fg:x="3833355942" fg:w="3393201"/><text x="99.9316%" y="527.50"></text></g><g><title>__libc_start_main_impl (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="933" width="97.0923%" height="15" fill="rgb(220,88,7)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="943.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="917" width="97.0923%" height="15" fill="rgb(213,176,14)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="927.50">__libc_start_call_main</text></g><g><title>main (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="901" width="97.0923%" height="15" fill="rgb(246,73,7)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="911.50">main</text></g><g><title>std::rt::lang_start_internal (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="885" width="97.0923%" height="15" fill="rgb(245,64,36)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="895.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="869" width="97.0923%" height="15" fill="rgb(245,80,10)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="853" width="97.0923%" height="15" fill="rgb(232,107,50)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="837" width="97.0923%" height="15" fill="rgb(253,3,0)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="847.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="821" width="97.0923%" height="15" fill="rgb(212,99,53)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="831.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="805" width="97.0923%" height="15" fill="rgb(249,111,54)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="789" width="97.0923%" height="15" fill="rgb(249,55,30)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="773" width="97.0923%" height="15" fill="rgb(237,47,42)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="757" width="97.0923%" height="15" fill="rgb(211,20,18)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="741" width="97.0923%" height="15" fill="rgb(231,203,46)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="725" width="97.0923%" height="15" fill="rgb(237,142,3)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="735.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="709" width="97.0923%" height="15" fill="rgb(241,107,1)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="719.50">core::ops::function::FnOnce::call_once</text></g><g><title>main_benchmark::main (3,733,782,758 samples, 97.09%)</title><rect x="2.7664%" y="693" width="97.0923%" height="15" fill="rgb(229,83,13)" fg:x="106383132" fg:w="3733782758"/><text x="3.0164%" y="703.50">main_benchmark::main</text></g><g><title>rkl::plot::plot_comparision::plot_comparison (3,416,747 samples, 0.09%)</title><rect x="99.7699%" y="677" width="0.0888%" height="15" fill="rgb(241,91,40)" fg:x="3836749143" fg:w="3416747"/><text x="100.0199%" y="687.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::fill (3,416,747 samples, 0.09%)</title><rect x="99.7699%" y="661" width="0.0888%" height="15" fill="rgb(225,3,45)" fg:x="3836749143" fg:w="3416747"/><text x="100.0199%" y="671.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (3,416,747 samples, 0.09%)</title><rect x="99.7699%" y="645" width="0.0888%" height="15" fill="rgb(244,223,14)" fg:x="3836749143" fg:w="3416747"/><text x="100.0199%" y="655.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::fill::_{{closure}} (3,416,747 samples, 0.09%)</title><rect x="99.7699%" y="629" width="0.0888%" height="15" fill="rgb(224,124,37)" fg:x="3836749143" fg:w="3416747"/><text x="100.0199%" y="639.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::draw_rect (3,416,747 samples, 0.09%)</title><rect x="99.7699%" y="613" width="0.0888%" height="15" fill="rgb(251,171,30)" fg:x="3836749143" fg:w="3416747"/><text x="100.0199%" y="623.50"></text></g><g><title>__memset_avx2_unaligned_erms (3,416,747 samples, 0.09%)</title><rect x="99.7699%" y="597" width="0.0888%" height="15" fill="rgb(236,46,54)" fg:x="3836749143" fg:w="3416747"/><text x="100.0199%" y="607.50"></text></g><g><title>[unknown] (3,416,747 samples, 0.09%)</title><rect x="99.7699%" y="581" width="0.0888%" height="15" fill="rgb(245,213,5)" fg:x="3836749143" fg:w="3416747"/><text x="100.0199%" y="591.50"></text></g><g><title>[unknown] (3,416,747 samples, 0.09%)</title><rect x="99.7699%" y="565" width="0.0888%" height="15" fill="rgb(230,144,27)" fg:x="3836749143" fg:w="3416747"/><text x="100.0199%" y="575.50"></text></g><g><title>__GI___tunables_init (2,593,483 samples, 0.07%)</title><rect x="99.8587%" y="885" width="0.0674%" height="15" fill="rgb(220,86,6)" fg:x="3840165890" fg:w="2593483"/><text x="100.1087%" y="895.50"></text></g><g><title>tunable_is_name (2,593,483 samples, 0.07%)</title><rect x="99.8587%" y="869" width="0.0674%" height="15" fill="rgb(240,20,13)" fg:x="3840165890" fg:w="2593483"/><text x="100.1087%" y="879.50"></text></g><g><title>main_benchmark (3,845,547,963 samples, 100.00%)</title><rect x="0.0000%" y="965" width="99.9987%" height="15" fill="rgb(217,89,34)" fg:x="0" fg:w="3845547963"/><text x="0.2500%" y="975.50">main_benchmark</text></g><g><title>_start (3,739,164,831 samples, 97.23%)</title><rect x="2.7664%" y="949" width="97.2323%" height="15" fill="rgb(229,13,5)" fg:x="106383132" fg:w="3739164831"/><text x="3.0164%" y="959.50">_start</text></g><g><title>_dl_start (5,382,073 samples, 0.14%)</title><rect x="99.8587%" y="933" width="0.1400%" height="15" fill="rgb(244,67,35)" fg:x="3840165890" fg:w="5382073"/><text x="100.1087%" y="943.50"></text></g><g><title>_dl_start_final (5,382,073 samples, 0.14%)</title><rect x="99.8587%" y="917" width="0.1400%" height="15" fill="rgb(221,40,2)" fg:x="3840165890" fg:w="5382073"/><text x="100.1087%" y="927.50"></text></g><g><title>_dl_sysdep_start (5,382,073 samples, 0.14%)</title><rect x="99.8587%" y="901" width="0.1400%" height="15" fill="rgb(237,157,21)" fg:x="3840165890" fg:w="5382073"/><text x="100.1087%" y="911.50"></text></g><g><title>dl_main (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="885" width="0.0725%" height="15" fill="rgb(222,94,11)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="895.50"></text></g><g><title>_dl_map_object_deps (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="869" width="0.0725%" height="15" fill="rgb(249,113,6)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="879.50"></text></g><g><title>__GI__dl_catch_exception (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="853" width="0.0725%" height="15" fill="rgb(238,137,36)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="863.50"></text></g><g><title>openaux (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="837" width="0.0725%" height="15" fill="rgb(210,102,26)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="847.50"></text></g><g><title>_dl_map_object (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="821" width="0.0725%" height="15" fill="rgb(218,30,30)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="831.50"></text></g><g><title>_dl_map_object_from_fd (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="805" width="0.0725%" height="15" fill="rgb(214,67,26)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="815.50"></text></g><g><title>_dl_map_segments (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="789" width="0.0725%" height="15" fill="rgb(251,9,53)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="799.50"></text></g><g><title>__mmap64 (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="773" width="0.0725%" height="15" fill="rgb(228,204,25)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="783.50"></text></g><g><title>__mmap64 (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="757" width="0.0725%" height="15" fill="rgb(207,153,8)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="767.50"></text></g><g><title>[unknown] (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="741" width="0.0725%" height="15" fill="rgb(242,9,16)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="751.50"></text></g><g><title>[unknown] (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="725" width="0.0725%" height="15" fill="rgb(217,211,10)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="735.50"></text></g><g><title>[unknown] (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="709" width="0.0725%" height="15" fill="rgb(219,228,52)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="719.50"></text></g><g><title>[unknown] (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="693" width="0.0725%" height="15" fill="rgb(231,92,29)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="703.50"></text></g><g><title>[unknown] (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="677" width="0.0725%" height="15" fill="rgb(232,8,23)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="687.50"></text></g><g><title>[unknown] (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="661" width="0.0725%" height="15" fill="rgb(216,211,34)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="671.50"></text></g><g><title>[unknown] (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="645" width="0.0725%" height="15" fill="rgb(236,151,0)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="655.50"></text></g><g><title>[unknown] (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="629" width="0.0725%" height="15" fill="rgb(209,168,3)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="639.50"></text></g><g><title>[unknown] (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="613" width="0.0725%" height="15" fill="rgb(208,129,28)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="623.50"></text></g><g><title>[unknown] (2,788,590 samples, 0.07%)</title><rect x="99.9261%" y="597" width="0.0725%" height="15" fill="rgb(229,78,22)" fg:x="3842759373" fg:w="2788590"/><text x="100.1761%" y="607.50"></text></g><g><title>all (3,845,599,434 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(228,187,13)" fg:x="0" fg:w="3845599434"/><text x="0.2500%" y="991.50"></text></g></svg></svg>