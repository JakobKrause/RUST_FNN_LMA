<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="774" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="757.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="757.00"> </text><svg id="frames" x="10" width="1180" total_samples="16251086141"><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::new (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="693" width="0.0180%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="703.50"></text></g><g><title>plotters::style::font::ttf::load_font_data (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="677" width="0.0180%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="661" width="0.0180%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="645" width="0.0180%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="629" width="0.0180%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="639.50"></text></g><g><title>plotters::style::font::ttf::FONT_SOURCE::_{{constant}}::_{{closure}} (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="613" width="0.0180%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="623.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="597" width="0.0180%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="607.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::initialize (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="581" width="0.0180%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="565" width="0.0180%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="549" width="0.0180%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="559.50"></text></g><g><title>plotters::style::font::ttf::FONT_SOURCE::__init (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="533" width="0.0180%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="543.50"></text></g><g><title>FcInitLoadConfigAndFonts (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="517" width="0.0180%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="527.50"></text></g><g><title>FcConfigBuildFonts (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="501" width="0.0180%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="511.50"></text></g><g><title>[libfontconfig.so.1.14.0] (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="485" width="0.0180%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="495.50"></text></g><g><title>[libfontconfig.so.1.14.0] (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="469" width="0.0180%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="479.50"></text></g><g><title>FcStrBuildFilename (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="453" width="0.0180%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="463.50"></text></g><g><title>__strdup (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="437" width="0.0180%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="447.50"></text></g><g><title>malloc (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="421" width="0.0180%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="431.50"></text></g><g><title>[libc.so.6] (2,929,782 samples, 0.02%)</title><rect x="0.0000%" y="405" width="0.0180%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="2929782"/><text x="0.2500%" y="415.50"></text></g><g><title>FcFontSetList (2,897,666 samples, 0.02%)</title><rect x="0.0180%" y="693" width="0.0178%" height="15" fill="rgb(226,26,5)" fg:x="2929782" fg:w="2897666"/><text x="0.2680%" y="703.50"></text></g><g><title>[libfontconfig.so.1.14.0] (2,897,666 samples, 0.02%)</title><rect x="0.0180%" y="677" width="0.0178%" height="15" fill="rgb(249,33,26)" fg:x="2929782" fg:w="2897666"/><text x="0.2680%" y="687.50"></text></g><g><title>[libfontconfig.so.1.14.0] (2,897,666 samples, 0.02%)</title><rect x="0.0180%" y="661" width="0.0178%" height="15" fill="rgb(235,183,28)" fg:x="2929782" fg:w="2897666"/><text x="0.2680%" y="671.50"></text></g><g><title>[libc.so.6] (3,256,230 samples, 0.02%)</title><rect x="0.0441%" y="693" width="0.0200%" height="15" fill="rgb(221,5,38)" fg:x="7168670" fg:w="3256230"/><text x="0.2941%" y="703.50"></text></g><g><title>[unknown] (3,256,230 samples, 0.02%)</title><rect x="0.0441%" y="677" width="0.0200%" height="15" fill="rgb(247,18,42)" fg:x="7168670" fg:w="3256230"/><text x="0.2941%" y="687.50"></text></g><g><title>[libexpat.so.1.10.0] (2,803,170 samples, 0.02%)</title><rect x="0.1011%" y="581" width="0.0172%" height="15" fill="rgb(241,131,45)" fg:x="16428591" fg:w="2803170"/><text x="0.3511%" y="591.50"></text></g><g><title>[libexpat.so.1.10.0] (2,803,170 samples, 0.02%)</title><rect x="0.1011%" y="565" width="0.0172%" height="15" fill="rgb(249,31,29)" fg:x="16428591" fg:w="2803170"/><text x="0.3511%" y="575.50"></text></g><g><title>[libexpat.so.1.10.0] (2,803,170 samples, 0.02%)</title><rect x="0.1011%" y="549" width="0.0172%" height="15" fill="rgb(225,111,53)" fg:x="16428591" fg:w="2803170"/><text x="0.3511%" y="559.50"></text></g><g><title>[libc.so.6] (2,803,170 samples, 0.02%)</title><rect x="0.1011%" y="533" width="0.0172%" height="15" fill="rgb(238,160,17)" fg:x="16428591" fg:w="2803170"/><text x="0.3511%" y="543.50"></text></g><g><title>[libc.so.6] (6,648,746 samples, 0.04%)</title><rect x="0.1183%" y="565" width="0.0409%" height="15" fill="rgb(214,148,48)" fg:x="19231761" fg:w="6648746"/><text x="0.3683%" y="575.50"></text></g><g><title>[libexpat.so.1.10.0] (15,467,978 samples, 0.10%)</title><rect x="0.0827%" y="597" width="0.0952%" height="15" fill="rgb(232,36,49)" fg:x="13431649" fg:w="15467978"/><text x="0.3327%" y="607.50"></text></g><g><title>[libfontconfig.so.1.14.0] (9,667,866 samples, 0.06%)</title><rect x="0.1183%" y="581" width="0.0595%" height="15" fill="rgb(209,103,24)" fg:x="19231761" fg:w="9667866"/><text x="0.3683%" y="591.50"></text></g><g><title>[libfontconfig.so.1.14.0] (3,019,120 samples, 0.02%)</title><rect x="0.1593%" y="565" width="0.0186%" height="15" fill="rgb(229,88,8)" fg:x="25880507" fg:w="3019120"/><text x="0.4093%" y="575.50"></text></g><g><title>[libfontconfig.so.1.14.0] (21,316,995 samples, 0.13%)</title><rect x="0.0641%" y="693" width="0.1312%" height="15" fill="rgb(213,181,19)" fg:x="10424900" fg:w="21316995"/><text x="0.3141%" y="703.50"></text></g><g><title>[libfontconfig.so.1.14.0] (21,316,995 samples, 0.13%)</title><rect x="0.0641%" y="677" width="0.1312%" height="15" fill="rgb(254,191,54)" fg:x="10424900" fg:w="21316995"/><text x="0.3141%" y="687.50"></text></g><g><title>XML_ParseBuffer (21,316,995 samples, 0.13%)</title><rect x="0.0641%" y="661" width="0.1312%" height="15" fill="rgb(241,83,37)" fg:x="10424900" fg:w="21316995"/><text x="0.3141%" y="671.50"></text></g><g><title>[libexpat.so.1.10.0] (21,316,995 samples, 0.13%)</title><rect x="0.0641%" y="645" width="0.1312%" height="15" fill="rgb(233,36,39)" fg:x="10424900" fg:w="21316995"/><text x="0.3141%" y="655.50"></text></g><g><title>[libexpat.so.1.10.0] (18,310,246 samples, 0.11%)</title><rect x="0.0827%" y="629" width="0.1127%" height="15" fill="rgb(226,3,54)" fg:x="13431649" fg:w="18310246"/><text x="0.3327%" y="639.50"></text></g><g><title>[libexpat.so.1.10.0] (18,310,246 samples, 0.11%)</title><rect x="0.0827%" y="613" width="0.1127%" height="15" fill="rgb(245,192,40)" fg:x="13431649" fg:w="18310246"/><text x="0.3327%" y="623.50"></text></g><g><title>[libfontconfig.so.1.14.0] (2,842,268 samples, 0.02%)</title><rect x="0.1778%" y="597" width="0.0175%" height="15" fill="rgb(238,167,29)" fg:x="28899627" fg:w="2842268"/><text x="0.4278%" y="607.50"></text></g><g><title>malloc (2,842,268 samples, 0.02%)</title><rect x="0.1778%" y="581" width="0.0175%" height="15" fill="rgb(232,182,51)" fg:x="28899627" fg:w="2842268"/><text x="0.4278%" y="591.50"></text></g><g><title>[libc.so.6] (2,842,268 samples, 0.02%)</title><rect x="0.1778%" y="565" width="0.0175%" height="15" fill="rgb(231,60,39)" fg:x="28899627" fg:w="2842268"/><text x="0.4278%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (4,357,408 samples, 0.03%)</title><rect x="0.1953%" y="405" width="0.0268%" height="15" fill="rgb(208,69,12)" fg:x="31741895" fg:w="4357408"/><text x="0.4453%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (4,357,408 samples, 0.03%)</title><rect x="0.1953%" y="389" width="0.0268%" height="15" fill="rgb(235,93,37)" fg:x="31741895" fg:w="4357408"/><text x="0.4453%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,357,408 samples, 0.03%)</title><rect x="0.1953%" y="373" width="0.0268%" height="15" fill="rgb(213,116,39)" fg:x="31741895" fg:w="4357408"/><text x="0.4453%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,357,408 samples, 0.03%)</title><rect x="0.1953%" y="357" width="0.0268%" height="15" fill="rgb(222,207,29)" fg:x="31741895" fg:w="4357408"/><text x="0.4453%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4,357,408 samples, 0.03%)</title><rect x="0.1953%" y="341" width="0.0268%" height="15" fill="rgb(206,96,30)" fg:x="31741895" fg:w="4357408"/><text x="0.4453%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4,357,408 samples, 0.03%)</title><rect x="0.1953%" y="325" width="0.0268%" height="15" fill="rgb(218,138,4)" fg:x="31741895" fg:w="4357408"/><text x="0.4453%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (4,357,408 samples, 0.03%)</title><rect x="0.1953%" y="309" width="0.0268%" height="15" fill="rgb(250,191,14)" fg:x="31741895" fg:w="4357408"/><text x="0.4453%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (4,357,408 samples, 0.03%)</title><rect x="0.1953%" y="293" width="0.0268%" height="15" fill="rgb(239,60,40)" fg:x="31741895" fg:w="4357408"/><text x="0.4453%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (4,357,408 samples, 0.03%)</title><rect x="0.1953%" y="277" width="0.0268%" height="15" fill="rgb(206,27,48)" fg:x="31741895" fg:w="4357408"/><text x="0.4453%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (4,357,408 samples, 0.03%)</title><rect x="0.1953%" y="261" width="0.0268%" height="15" fill="rgb(225,35,8)" fg:x="31741895" fg:w="4357408"/><text x="0.4453%" y="271.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (108,078,459 samples, 0.67%)</title><rect x="0.2221%" y="405" width="0.6651%" height="15" fill="rgb(250,213,24)" fg:x="36099303" fg:w="108078459"/><text x="0.4721%" y="415.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (108,078,459 samples, 0.67%)</title><rect x="0.2221%" y="389" width="0.6651%" height="15" fill="rgb(247,123,22)" fg:x="36099303" fg:w="108078459"/><text x="0.4721%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (108,078,459 samples, 0.67%)</title><rect x="0.2221%" y="373" width="0.6651%" height="15" fill="rgb(231,138,38)" fg:x="36099303" fg:w="108078459"/><text x="0.4721%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (108,078,459 samples, 0.67%)</title><rect x="0.2221%" y="357" width="0.6651%" height="15" fill="rgb(231,145,46)" fg:x="36099303" fg:w="108078459"/><text x="0.4721%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (108,078,459 samples, 0.67%)</title><rect x="0.2221%" y="341" width="0.6651%" height="15" fill="rgb(251,118,11)" fg:x="36099303" fg:w="108078459"/><text x="0.4721%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (108,078,459 samples, 0.67%)</title><rect x="0.2221%" y="325" width="0.6651%" height="15" fill="rgb(217,147,25)" fg:x="36099303" fg:w="108078459"/><text x="0.4721%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (108,078,459 samples, 0.67%)</title><rect x="0.2221%" y="309" width="0.6651%" height="15" fill="rgb(247,81,37)" fg:x="36099303" fg:w="108078459"/><text x="0.4721%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (108,078,459 samples, 0.67%)</title><rect x="0.2221%" y="293" width="0.6651%" height="15" fill="rgb(209,12,38)" fg:x="36099303" fg:w="108078459"/><text x="0.4721%" y="303.50"></text></g><g><title>[libc.so.6] (108,078,459 samples, 0.67%)</title><rect x="0.2221%" y="277" width="0.6651%" height="15" fill="rgb(227,1,9)" fg:x="36099303" fg:w="108078459"/><text x="0.4721%" y="287.50"></text></g><g><title>[unknown] (57,564,041 samples, 0.35%)</title><rect x="0.5330%" y="261" width="0.3542%" height="15" fill="rgb(248,47,43)" fg:x="86613721" fg:w="57564041"/><text x="0.7830%" y="271.50"></text></g><g><title>[unknown] (36,291,857 samples, 0.22%)</title><rect x="0.6639%" y="245" width="0.2233%" height="15" fill="rgb(221,10,30)" fg:x="107885905" fg:w="36291857"/><text x="0.9139%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,263,541 samples, 0.03%)</title><rect x="0.8872%" y="405" width="0.0262%" height="15" fill="rgb(210,229,1)" fg:x="144177762" fg:w="4263541"/><text x="1.1372%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (8,461,350 samples, 0.05%)</title><rect x="0.9134%" y="261" width="0.0521%" height="15" fill="rgb(222,148,37)" fg:x="148441303" fg:w="8461350"/><text x="1.1634%" y="271.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (4,257,210 samples, 0.03%)</title><rect x="0.9655%" y="261" width="0.0262%" height="15" fill="rgb(234,67,33)" fg:x="156902653" fg:w="4257210"/><text x="1.2155%" y="271.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::ad_solve_lower_triangular_unchecked_mut (29,883,099 samples, 0.18%)</title><rect x="0.9134%" y="341" width="0.1839%" height="15" fill="rgb(247,98,35)" fg:x="148441303" fg:w="29883099"/><text x="1.1634%" y="351.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::xx_solve_lower_triangular_vector_unchecked_mut (29,883,099 samples, 0.18%)</title><rect x="0.9134%" y="325" width="0.1839%" height="15" fill="rgb(247,138,52)" fg:x="148441303" fg:w="29883099"/><text x="1.1634%" y="335.50"></text></g><g><title>nalgebra::linalg::solve::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::ad_solve_lower_triangular_unchecked_mut::_{{closure}} (29,883,099 samples, 0.18%)</title><rect x="0.9134%" y="309" width="0.1839%" height="15" fill="rgb(213,79,30)" fg:x="148441303" fg:w="29883099"/><text x="1.1634%" y="319.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (29,883,099 samples, 0.18%)</title><rect x="0.9134%" y="293" width="0.1839%" height="15" fill="rgb(246,177,23)" fg:x="148441303" fg:w="29883099"/><text x="1.1634%" y="303.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (29,883,099 samples, 0.18%)</title><rect x="0.9134%" y="277" width="0.1839%" height="15" fill="rgb(230,62,27)" fg:x="148441303" fg:w="29883099"/><text x="1.1634%" y="287.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (17,164,539 samples, 0.11%)</title><rect x="0.9917%" y="261" width="0.1056%" height="15" fill="rgb(216,154,8)" fg:x="161159863" fg:w="17164539"/><text x="1.2417%" y="271.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (12,454,891 samples, 0.08%)</title><rect x="1.1975%" y="245" width="0.0766%" height="15" fill="rgb(244,35,45)" fg:x="194607263" fg:w="12454891"/><text x="1.4475%" y="255.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (28,535,554 samples, 0.18%)</title><rect x="1.2741%" y="245" width="0.1756%" height="15" fill="rgb(251,115,12)" fg:x="207062154" fg:w="28535554"/><text x="1.5241%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (95,208,329 samples, 0.59%)</title><rect x="0.9134%" y="405" width="0.5859%" height="15" fill="rgb(240,54,50)" fg:x="148441303" fg:w="95208329"/><text x="1.1634%" y="415.50"></text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit::_{{closure}} (95,208,329 samples, 0.59%)</title><rect x="0.9134%" y="389" width="0.5859%" height="15" fill="rgb(233,84,52)" fg:x="148441303" fg:w="95208329"/><text x="1.1634%" y="399.50"></text></g><g><title>nalgebra::linalg::cholesky::Cholesky&lt;T,D&gt;::solve (95,208,329 samples, 0.59%)</title><rect x="0.9134%" y="373" width="0.5859%" height="15" fill="rgb(207,117,47)" fg:x="148441303" fg:w="95208329"/><text x="1.1634%" y="383.50"></text></g><g><title>nalgebra::linalg::cholesky::Cholesky&lt;T,D&gt;::solve_mut (95,208,329 samples, 0.59%)</title><rect x="0.9134%" y="357" width="0.5859%" height="15" fill="rgb(249,43,39)" fg:x="148441303" fg:w="95208329"/><text x="1.1634%" y="367.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::solve_lower_triangular_unchecked_mut (65,325,230 samples, 0.40%)</title><rect x="1.0973%" y="341" width="0.4020%" height="15" fill="rgb(209,38,44)" fg:x="178324402" fg:w="65325230"/><text x="1.3473%" y="351.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::solve_lower_triangular_vector_unchecked_mut (65,325,230 samples, 0.40%)</title><rect x="1.0973%" y="325" width="0.4020%" height="15" fill="rgb(236,212,23)" fg:x="178324402" fg:w="65325230"/><text x="1.3473%" y="335.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (60,980,744 samples, 0.38%)</title><rect x="1.1240%" y="309" width="0.3752%" height="15" fill="rgb(242,79,21)" fg:x="182668888" fg:w="60980744"/><text x="1.3740%" y="319.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (60,980,744 samples, 0.38%)</title><rect x="1.1240%" y="293" width="0.3752%" height="15" fill="rgb(211,96,35)" fg:x="182668888" fg:w="60980744"/><text x="1.3740%" y="303.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (60,980,744 samples, 0.38%)</title><rect x="1.1240%" y="277" width="0.3752%" height="15" fill="rgb(253,215,40)" fg:x="182668888" fg:w="60980744"/><text x="1.3740%" y="287.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (60,980,744 samples, 0.38%)</title><rect x="1.1240%" y="261" width="0.3752%" height="15" fill="rgb(211,81,21)" fg:x="182668888" fg:w="60980744"/><text x="1.3740%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8,051,924 samples, 0.05%)</title><rect x="1.4497%" y="245" width="0.0495%" height="15" fill="rgb(208,190,38)" fg:x="235597708" fg:w="8051924"/><text x="1.6997%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8,051,924 samples, 0.05%)</title><rect x="1.4497%" y="229" width="0.0495%" height="15" fill="rgb(235,213,38)" fg:x="235597708" fg:w="8051924"/><text x="1.6997%" y="239.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (8,051,924 samples, 0.05%)</title><rect x="1.4497%" y="213" width="0.0495%" height="15" fill="rgb(237,122,38)" fg:x="235597708" fg:w="8051924"/><text x="1.6997%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (8,051,924 samples, 0.05%)</title><rect x="1.4497%" y="197" width="0.0495%" height="15" fill="rgb(244,218,35)" fg:x="235597708" fg:w="8051924"/><text x="1.6997%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31,035,152 samples, 0.19%)</title><rect x="1.4993%" y="373" width="0.1910%" height="15" fill="rgb(240,68,47)" fg:x="243649632" fg:w="31035152"/><text x="1.7493%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (31,035,152 samples, 0.19%)</title><rect x="1.4993%" y="357" width="0.1910%" height="15" fill="rgb(210,16,53)" fg:x="243649632" fg:w="31035152"/><text x="1.7493%" y="367.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (31,035,152 samples, 0.19%)</title><rect x="1.4993%" y="341" width="0.1910%" height="15" fill="rgb(235,124,12)" fg:x="243649632" fg:w="31035152"/><text x="1.7493%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (31,035,152 samples, 0.19%)</title><rect x="1.4993%" y="325" width="0.1910%" height="15" fill="rgb(224,169,11)" fg:x="243649632" fg:w="31035152"/><text x="1.7493%" y="335.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_row_slice (326,846,923 samples, 2.01%)</title><rect x="1.4993%" y="405" width="2.0112%" height="15" fill="rgb(250,166,2)" fg:x="243649632" fg:w="326846923"/><text x="1.7493%" y="415.50">n..</text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_row_slice_generic (326,846,923 samples, 2.01%)</title><rect x="1.4993%" y="389" width="2.0112%" height="15" fill="rgb(242,216,29)" fg:x="243649632" fg:w="326846923"/><text x="1.7493%" y="399.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (295,811,771 samples, 1.82%)</title><rect x="1.6903%" y="373" width="1.8203%" height="15" fill="rgb(230,116,27)" fg:x="274684784" fg:w="295811771"/><text x="1.9403%" y="383.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (295,811,771 samples, 1.82%)</title><rect x="1.6903%" y="357" width="1.8203%" height="15" fill="rgb(228,99,48)" fg:x="274684784" fg:w="295811771"/><text x="1.9403%" y="367.50">&lt;..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (286,135,457 samples, 1.76%)</title><rect x="1.7498%" y="341" width="1.7607%" height="15" fill="rgb(253,11,6)" fg:x="284361098" fg:w="286135457"/><text x="1.9998%" y="351.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::identity (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="405" width="0.6195%" height="15" fill="rgb(247,143,39)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="415.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::identity_generic (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="389" width="0.6195%" height="15" fill="rgb(236,97,10)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="399.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_diagonal_element_generic (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="373" width="0.6195%" height="15" fill="rgb(233,208,19)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="383.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros_generic (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="357" width="0.6195%" height="15" fill="rgb(216,164,2)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="367.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_element_generic (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="341" width="0.6195%" height="15" fill="rgb(220,129,5)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="351.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_iterator_generic (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="325" width="0.6195%" height="15" fill="rgb(242,17,10)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="335.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::allocate_from_iterator (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="309" width="0.6195%" height="15" fill="rgb(242,107,0)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="293" width="0.6195%" height="15" fill="rgb(251,28,31)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="277" width="0.6195%" height="15" fill="rgb(233,223,10)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="261" width="0.6195%" height="15" fill="rgb(215,21,27)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="245" width="0.6195%" height="15" fill="rgb(232,23,21)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="229" width="0.6195%" height="15" fill="rgb(244,5,23)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="213" width="0.6195%" height="15" fill="rgb(226,81,46)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="197" width="0.6195%" height="15" fill="rgb(247,70,30)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="181" width="0.6195%" height="15" fill="rgb(212,68,19)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="165" width="0.6195%" height="15" fill="rgb(240,187,13)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="149" width="0.6195%" height="15" fill="rgb(223,113,26)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="133" width="0.6195%" height="15" fill="rgb(206,192,2)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="143.50"></text></g><g><title>core::ptr::write (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="117" width="0.6195%" height="15" fill="rgb(241,108,4)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="127.50"></text></g><g><title>[libc.so.6] (100,671,147 samples, 0.62%)</title><rect x="3.5105%" y="101" width="0.6195%" height="15" fill="rgb(247,173,49)" fg:x="570496555" fg:w="100671147"/><text x="3.7605%" y="111.50"></text></g><g><title>[unknown] (3,211,717 samples, 0.02%)</title><rect x="4.1102%" y="85" width="0.0198%" height="15" fill="rgb(224,114,35)" fg:x="667955985" fg:w="3211717"/><text x="4.3602%" y="95.50"></text></g><g><title>&lt;nalgebra::base::uninit::Uninit as nalgebra::base::uninit::InitStatus&lt;T&gt;&gt;::init (487,358,005 samples, 3.00%)</title><rect x="4.1300%" y="373" width="2.9989%" height="15" fill="rgb(245,159,27)" fg:x="671167702" fg:w="487358005"/><text x="4.3800%" y="383.50">&lt;na..</text></g><g><title>[unknown] (23,067,647 samples, 0.14%)</title><rect x="6.9870%" y="357" width="0.1419%" height="15" fill="rgb(245,172,44)" fg:x="1135458060" fg:w="23067647"/><text x="7.2370%" y="367.50"></text></g><g><title>[unknown] (6,202,769 samples, 0.04%)</title><rect x="7.0907%" y="341" width="0.0382%" height="15" fill="rgb(236,23,11)" fg:x="1152322938" fg:w="6202769"/><text x="7.3407%" y="351.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (114,398,994 samples, 0.70%)</title><rect x="7.1289%" y="373" width="0.7039%" height="15" fill="rgb(205,117,38)" fg:x="1158525707" fg:w="114398994"/><text x="7.3789%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (34,238,319 samples, 0.21%)</title><rect x="7.8823%" y="341" width="0.2107%" height="15" fill="rgb(237,72,25)" fg:x="1280951658" fg:w="34238319"/><text x="8.1323%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (34,238,319 samples, 0.21%)</title><rect x="7.8823%" y="325" width="0.2107%" height="15" fill="rgb(244,70,9)" fg:x="1280951658" fg:w="34238319"/><text x="8.1323%" y="335.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose (666,979,107 samples, 4.10%)</title><rect x="4.1300%" y="405" width="4.1042%" height="15" fill="rgb(217,125,39)" fg:x="671167702" fg:w="666979107"/><text x="4.3800%" y="415.50">nalg..</text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose_to_uninit (666,979,107 samples, 4.10%)</title><rect x="4.1300%" y="389" width="4.1042%" height="15" fill="rgb(235,36,10)" fg:x="671167702" fg:w="666979107"/><text x="4.3800%" y="399.50">nalg..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (65,222,108 samples, 0.40%)</title><rect x="7.8329%" y="373" width="0.4013%" height="15" fill="rgb(251,123,47)" fg:x="1272924701" fg:w="65222108"/><text x="8.0829%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (65,222,108 samples, 0.40%)</title><rect x="7.8329%" y="357" width="0.4013%" height="15" fill="rgb(221,13,13)" fg:x="1272924701" fg:w="65222108"/><text x="8.0829%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (22,956,832 samples, 0.14%)</title><rect x="8.0929%" y="341" width="0.1413%" height="15" fill="rgb(238,131,9)" fg:x="1315189977" fg:w="22956832"/><text x="8.3429%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (37,398,913 samples, 0.23%)</title><rect x="8.2342%" y="357" width="0.2301%" height="15" fill="rgb(211,50,8)" fg:x="1338146809" fg:w="37398913"/><text x="8.4842%" y="367.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (58,983,723 samples, 0.36%)</title><rect x="8.2342%" y="405" width="0.3630%" height="15" fill="rgb(245,182,24)" fg:x="1338146809" fg:w="58983723"/><text x="8.4842%" y="415.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (58,983,723 samples, 0.36%)</title><rect x="8.2342%" y="389" width="0.3630%" height="15" fill="rgb(242,14,37)" fg:x="1338146809" fg:w="58983723"/><text x="8.4842%" y="399.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (58,983,723 samples, 0.36%)</title><rect x="8.2342%" y="373" width="0.3630%" height="15" fill="rgb(246,228,12)" fg:x="1338146809" fg:w="58983723"/><text x="8.4842%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (21,584,810 samples, 0.13%)</title><rect x="8.4643%" y="357" width="0.1328%" height="15" fill="rgb(213,55,15)" fg:x="1375545722" fg:w="21584810"/><text x="8.7143%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (21,584,810 samples, 0.13%)</title><rect x="8.4643%" y="341" width="0.1328%" height="15" fill="rgb(209,9,3)" fg:x="1375545722" fg:w="21584810"/><text x="8.7143%" y="351.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (21,584,810 samples, 0.13%)</title><rect x="8.4643%" y="325" width="0.1328%" height="15" fill="rgb(230,59,30)" fg:x="1375545722" fg:w="21584810"/><text x="8.7143%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (21,584,810 samples, 0.13%)</title><rect x="8.4643%" y="309" width="0.1328%" height="15" fill="rgb(209,121,21)" fg:x="1375545722" fg:w="21584810"/><text x="8.7143%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (266,076,618 samples, 1.64%)</title><rect x="8.7450%" y="341" width="1.6373%" height="15" fill="rgb(220,109,13)" fg:x="1421159354" fg:w="266076618"/><text x="8.9950%" y="351.50"></text></g><g><title>[unknown] (22,196,939 samples, 0.14%)</title><rect x="10.2457%" y="325" width="0.1366%" height="15" fill="rgb(232,18,1)" fg:x="1665039033" fg:w="22196939"/><text x="10.4957%" y="335.50"></text></g><g><title>[unknown] (9,501,423 samples, 0.06%)</title><rect x="10.3238%" y="309" width="0.0585%" height="15" fill="rgb(215,41,42)" fg:x="1677734549" fg:w="9501423"/><text x="10.5738%" y="319.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7,477,645 samples, 0.05%)</title><rect x="10.4024%" y="309" width="0.0460%" height="15" fill="rgb(224,123,36)" fg:x="1690510918" fg:w="7477645"/><text x="10.6524%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (7,477,645 samples, 0.05%)</title><rect x="10.4024%" y="293" width="0.0460%" height="15" fill="rgb(240,125,3)" fg:x="1690510918" fg:w="7477645"/><text x="10.6524%" y="303.50"></text></g><g><title>matrixmultiply::gemm::pack (304,535,379 samples, 1.87%)</title><rect x="8.5972%" y="357" width="1.8739%" height="15" fill="rgb(205,98,50)" fg:x="1397130532" fg:w="304535379"/><text x="8.8472%" y="367.50">m..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14,429,939 samples, 0.09%)</title><rect x="10.3823%" y="341" width="0.0888%" height="15" fill="rgb(205,185,37)" fg:x="1687235972" fg:w="14429939"/><text x="10.6323%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14,429,939 samples, 0.09%)</title><rect x="10.3823%" y="325" width="0.0888%" height="15" fill="rgb(238,207,15)" fg:x="1687235972" fg:w="14429939"/><text x="10.6323%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3,677,348 samples, 0.02%)</title><rect x="10.4485%" y="309" width="0.0226%" height="15" fill="rgb(213,199,42)" fg:x="1697988563" fg:w="3677348"/><text x="10.6985%" y="319.50"></text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (3,794,868 samples, 0.02%)</title><rect x="10.4894%" y="293" width="0.0234%" height="15" fill="rgb(235,201,11)" fg:x="1704642278" fg:w="3794868"/><text x="10.7394%" y="303.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (4,611,505,918 samples, 28.38%)</title><rect x="13.6254%" y="229" width="28.3766%" height="15" fill="rgb(207,46,11)" fg:x="2214268186" fg:w="4611505918"/><text x="13.8754%" y="239.50">&lt;matrixmultiply::x86::FusedMulAdd as matrixmul..</text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (4,611,505,918 samples, 28.38%)</title><rect x="13.6254%" y="213" width="28.3766%" height="15" fill="rgb(241,35,35)" fg:x="2214268186" fg:w="4611505918"/><text x="13.8754%" y="223.50">core::core_arch::x86::fma::_mm256_fmadd_pd</text></g><g><title>core::core_arch::x86::avx::_mm256_blend_pd (16,169,228 samples, 0.10%)</title><rect x="42.0020%" y="229" width="0.0995%" height="15" fill="rgb(243,32,47)" fg:x="6825774104" fg:w="16169228"/><text x="42.2520%" y="239.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_broadcast_sd (10,160,652 samples, 0.06%)</title><rect x="42.1015%" y="229" width="0.0625%" height="15" fill="rgb(247,202,23)" fg:x="6841943332" fg:w="10160652"/><text x="42.3515%" y="239.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_pd (10,160,652 samples, 0.06%)</title><rect x="42.1015%" y="213" width="0.0625%" height="15" fill="rgb(219,102,11)" fg:x="6841943332" fg:w="10160652"/><text x="42.3515%" y="223.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_pd (10,160,652 samples, 0.06%)</title><rect x="42.1015%" y="197" width="0.0625%" height="15" fill="rgb(243,110,44)" fg:x="6841943332" fg:w="10160652"/><text x="42.3515%" y="207.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (1,248,852,692 samples, 7.68%)</title><rect x="42.1640%" y="229" width="7.6847%" height="15" fill="rgb(222,74,54)" fg:x="6852103984" fg:w="1248852692"/><text x="42.4140%" y="239.50">core::core_..</text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_pd (36,961,502 samples, 0.23%)</title><rect x="49.8487%" y="229" width="0.2274%" height="15" fill="rgb(216,99,12)" fg:x="8100956676" fg:w="36961502"/><text x="50.0987%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36,961,502 samples, 0.23%)</title><rect x="49.8487%" y="213" width="0.2274%" height="15" fill="rgb(226,22,26)" fg:x="8100956676" fg:w="36961502"/><text x="50.0987%" y="223.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_mul_pd (21,478,250 samples, 0.13%)</title><rect x="50.0761%" y="229" width="0.1322%" height="15" fill="rgb(217,163,10)" fg:x="8137918178" fg:w="21478250"/><text x="50.3261%" y="239.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (236,649,772 samples, 1.46%)</title><rect x="50.2083%" y="229" width="1.4562%" height="15" fill="rgb(213,25,53)" fg:x="8159396428" fg:w="236649772"/><text x="50.4583%" y="239.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (165,000,078 samples, 1.02%)</title><rect x="51.6645%" y="229" width="1.0153%" height="15" fill="rgb(252,105,26)" fg:x="8396046200" fg:w="165000078"/><text x="51.9145%" y="239.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (118,424,117 samples, 0.73%)</title><rect x="52.6798%" y="229" width="0.7287%" height="15" fill="rgb(220,39,43)" fg:x="8561046278" fg:w="118424117"/><text x="52.9298%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (118,424,117 samples, 0.73%)</title><rect x="52.6798%" y="213" width="0.7287%" height="15" fill="rgb(229,68,48)" fg:x="8561046278" fg:w="118424117"/><text x="52.9298%" y="223.50"></text></g><g><title>core::ptr::write_unaligned (118,424,117 samples, 0.73%)</title><rect x="52.6798%" y="197" width="0.7287%" height="15" fill="rgb(252,8,32)" fg:x="8561046278" fg:w="118424117"/><text x="52.9298%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (118,424,117 samples, 0.73%)</title><rect x="52.6798%" y="181" width="0.7287%" height="15" fill="rgb(223,20,43)" fg:x="8561046278" fg:w="118424117"/><text x="52.9298%" y="191.50"></text></g><g><title>[unknown] (66,419,634 samples, 0.41%)</title><rect x="52.9998%" y="165" width="0.4087%" height="15" fill="rgb(229,81,49)" fg:x="8613050761" fg:w="66419634"/><text x="53.2498%" y="175.50"></text></g><g><title>[unknown] (38,176,099 samples, 0.23%)</title><rect x="53.1736%" y="149" width="0.2349%" height="15" fill="rgb(236,28,36)" fg:x="8641294296" fg:w="38176099"/><text x="53.4236%" y="159.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (28,429,771 samples, 0.17%)</title><rect x="53.4086%" y="229" width="0.1749%" height="15" fill="rgb(249,185,26)" fg:x="8679470395" fg:w="28429771"/><text x="53.6586%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (28,429,771 samples, 0.17%)</title><rect x="53.4086%" y="213" width="0.1749%" height="15" fill="rgb(249,174,33)" fg:x="8679470395" fg:w="28429771"/><text x="53.6586%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (16,715,683 samples, 0.10%)</title><rect x="53.4806%" y="197" width="0.1029%" height="15" fill="rgb(233,201,37)" fg:x="8691184483" fg:w="16715683"/><text x="53.7306%" y="207.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (7,015,766,508 samples, 43.17%)</title><rect x="10.5577%" y="277" width="43.1711%" height="15" fill="rgb(221,78,26)" fg:x="1715734583" fg:w="7015766508"/><text x="10.8077%" y="287.50">&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::Gem..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (7,007,209,286 samples, 43.12%)</title><rect x="10.6103%" y="261" width="43.1184%" height="15" fill="rgb(250,127,30)" fg:x="1724291805" fg:w="7007209286"/><text x="10.8603%" y="271.50">matrixmultiply::dgemm_kernel::kernel_target_fma</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (6,981,314,593 samples, 42.96%)</title><rect x="10.7697%" y="245" width="42.9591%" height="15" fill="rgb(230,49,44)" fg:x="1750186498" fg:w="6981314593"/><text x="11.0197%" y="255.50">matrixmultiply::dgemm_kernel::kernel_x86_avx</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (23,600,925 samples, 0.15%)</title><rect x="53.5835%" y="229" width="0.1452%" height="15" fill="rgb(229,67,23)" fg:x="8707900166" fg:w="23600925"/><text x="53.8335%" y="239.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (73,406,489 samples, 0.45%)</title><rect x="53.7487%" y="213" width="0.4517%" height="15" fill="rgb(249,83,47)" fg:x="8734753603" fg:w="73406489"/><text x="53.9987%" y="223.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (73,406,489 samples, 0.45%)</title><rect x="53.7487%" y="197" width="0.4517%" height="15" fill="rgb(215,43,3)" fg:x="8734753603" fg:w="73406489"/><text x="53.9987%" y="207.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (11,923,751 samples, 0.07%)</title><rect x="54.2004%" y="213" width="0.0734%" height="15" fill="rgb(238,154,13)" fg:x="8808160092" fg:w="11923751"/><text x="54.4504%" y="223.50"></text></g><g><title>matrixmultiply::gemm::masked_kernel (96,146,629 samples, 0.59%)</title><rect x="53.7287%" y="277" width="0.5916%" height="15" fill="rgb(219,56,2)" fg:x="8731501192" fg:w="96146629"/><text x="53.9787%" y="287.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (96,146,629 samples, 0.59%)</title><rect x="53.7287%" y="261" width="0.5916%" height="15" fill="rgb(233,0,4)" fg:x="8731501192" fg:w="96146629"/><text x="53.9787%" y="271.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (96,146,629 samples, 0.59%)</title><rect x="53.7287%" y="245" width="0.5916%" height="15" fill="rgb(235,30,7)" fg:x="8731501192" fg:w="96146629"/><text x="53.9787%" y="255.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (96,146,629 samples, 0.59%)</title><rect x="53.7287%" y="229" width="0.5916%" height="15" fill="rgb(250,79,13)" fg:x="8731501192" fg:w="96146629"/><text x="53.9787%" y="239.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (7,563,978 samples, 0.05%)</title><rect x="54.2738%" y="213" width="0.0465%" height="15" fill="rgb(211,146,34)" fg:x="8820083843" fg:w="7563978"/><text x="54.5238%" y="223.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (7,129,608,903 samples, 43.87%)</title><rect x="10.4711%" y="325" width="43.8716%" height="15" fill="rgb(228,22,38)" fg:x="1701665911" fg:w="7129608903"/><text x="10.7211%" y="335.50">matrixmultiply::gemm::gemm_packed</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (7,129,608,903 samples, 43.87%)</title><rect x="10.4711%" y="309" width="43.8716%" height="15" fill="rgb(235,168,5)" fg:x="1701665911" fg:w="7129608903"/><text x="10.7211%" y="319.50">matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each</text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (7,122,837,668 samples, 43.83%)</title><rect x="10.5128%" y="293" width="43.8299%" height="15" fill="rgb(221,155,16)" fg:x="1708437146" fg:w="7122837668"/><text x="10.7628%" y="303.50">matrixmultiply::gemm::gemm_packed::_{{closure}}</text></g><g><title>rawpointer::PointerExt::stride_offset (3,626,993 samples, 0.02%)</title><rect x="54.3204%" y="277" width="0.0223%" height="15" fill="rgb(215,215,53)" fg:x="8827647821" fg:w="3626993"/><text x="54.5704%" y="287.50"></text></g><g><title>&lt;matrixmultiply::ptr::Ptr&lt;*const T&gt; as rawpointer::PointerExt&gt;::offset (3,626,993 samples, 0.02%)</title><rect x="54.3204%" y="261" width="0.0223%" height="15" fill="rgb(223,4,10)" fg:x="8827647821" fg:w="3626993"/><text x="54.5704%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3,626,993 samples, 0.02%)</title><rect x="54.3204%" y="245" width="0.0223%" height="15" fill="rgb(234,103,6)" fg:x="8827647821" fg:w="3626993"/><text x="54.5704%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (416,329,383 samples, 2.56%)</title><rect x="54.3640%" y="309" width="2.5619%" height="15" fill="rgb(227,97,0)" fg:x="8834737929" fg:w="416329383"/><text x="54.6140%" y="319.50">co..</text></g><g><title>[unknown] (5,937,113 samples, 0.04%)</title><rect x="56.8893%" y="293" width="0.0365%" height="15" fill="rgb(234,150,53)" fg:x="9245130199" fg:w="5937113"/><text x="57.1393%" y="303.50"></text></g><g><title>[unknown] (3,121,340 samples, 0.02%)</title><rect x="56.9066%" y="277" width="0.0192%" height="15" fill="rgb(228,201,54)" fg:x="9247945972" fg:w="3121340"/><text x="57.1566%" y="287.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (7,865,419,747 samples, 48.40%)</title><rect x="8.5972%" y="373" width="48.3993%" height="15" fill="rgb(222,22,37)" fg:x="1397130532" fg:w="7865419747"/><text x="8.8472%" y="383.50">matrixmultiply::gemm::gemm_loop</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (7,560,884,368 samples, 46.53%)</title><rect x="10.4711%" y="357" width="46.5254%" height="15" fill="rgb(237,53,32)" fg:x="1701665911" fg:w="7560884368"/><text x="10.7211%" y="367.50">matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each</text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (7,560,884,368 samples, 46.53%)</title><rect x="10.4711%" y="341" width="46.5254%" height="15" fill="rgb(233,25,53)" fg:x="1701665911" fg:w="7560884368"/><text x="10.7211%" y="351.50">matrixmultiply::gemm::gemm_loop::_{{closure}}</text></g><g><title>matrixmultiply::gemm::pack (431,275,465 samples, 2.65%)</title><rect x="54.3427%" y="325" width="2.6538%" height="15" fill="rgb(210,40,34)" fg:x="8831274814" fg:w="431275465"/><text x="54.5927%" y="335.50">ma..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11,482,967 samples, 0.07%)</title><rect x="56.9258%" y="309" width="0.0707%" height="15" fill="rgb(241,220,44)" fg:x="9251067312" fg:w="11482967"/><text x="57.1758%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11,482,967 samples, 0.07%)</title><rect x="56.9258%" y="293" width="0.0707%" height="15" fill="rgb(235,28,35)" fg:x="9251067312" fg:w="11482967"/><text x="57.1758%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (11,482,967 samples, 0.07%)</title><rect x="56.9258%" y="277" width="0.0707%" height="15" fill="rgb(210,56,17)" fg:x="9251067312" fg:w="11482967"/><text x="57.1758%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (11,482,967 samples, 0.07%)</title><rect x="56.9258%" y="261" width="0.0707%" height="15" fill="rgb(224,130,29)" fg:x="9251067312" fg:w="11482967"/><text x="57.1758%" y="271.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (8,455,820 samples, 0.05%)</title><rect x="57.0502%" y="325" width="0.0520%" height="15" fill="rgb(235,212,8)" fg:x="9271277871" fg:w="8455820"/><text x="57.3002%" y="335.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (10,770,440 samples, 0.07%)</title><rect x="57.1022%" y="325" width="0.0663%" height="15" fill="rgb(223,33,50)" fg:x="9279733691" fg:w="10770440"/><text x="57.3522%" y="335.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (19,245,858 samples, 0.12%)</title><rect x="57.1685%" y="325" width="0.1184%" height="15" fill="rgb(219,149,13)" fg:x="9290504131" fg:w="19245858"/><text x="57.4185%" y="335.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (7,929,903,902 samples, 48.80%)</title><rect x="8.5972%" y="405" width="48.7961%" height="15" fill="rgb(250,156,29)" fg:x="1397130532" fg:w="7929903902"/><text x="8.8472%" y="415.50">nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix..</text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (7,929,903,902 samples, 48.80%)</title><rect x="8.5972%" y="389" width="48.7961%" height="15" fill="rgb(216,193,19)" fg:x="1397130532" fg:w="7929903902"/><text x="8.8472%" y="399.50">nalgebra::base::blas_uninit::gemm_uninit</text></g><g><title>nalgebra::base::blas_uninit::gemv_uninit (64,484,155 samples, 0.40%)</title><rect x="56.9965%" y="373" width="0.3968%" height="15" fill="rgb(216,135,14)" fg:x="9262550279" fg:w="64484155"/><text x="57.2465%" y="383.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (64,484,155 samples, 0.40%)</title><rect x="56.9965%" y="357" width="0.3968%" height="15" fill="rgb(241,47,5)" fg:x="9262550279" fg:w="64484155"/><text x="57.2465%" y="367.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (64,484,155 samples, 0.40%)</title><rect x="56.9965%" y="341" width="0.3968%" height="15" fill="rgb(233,42,35)" fg:x="9262550279" fg:w="64484155"/><text x="57.2465%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17,284,445 samples, 0.11%)</title><rect x="57.2869%" y="325" width="0.1064%" height="15" fill="rgb(231,13,6)" fg:x="9309749989" fg:w="17284445"/><text x="57.5369%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17,284,445 samples, 0.11%)</title><rect x="57.2869%" y="309" width="0.1064%" height="15" fill="rgb(207,181,40)" fg:x="9309749989" fg:w="17284445"/><text x="57.5369%" y="319.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (12,978,436 samples, 0.08%)</title><rect x="57.3134%" y="293" width="0.0799%" height="15" fill="rgb(254,173,49)" fg:x="9314055998" fg:w="12978436"/><text x="57.5634%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (12,978,436 samples, 0.08%)</title><rect x="57.3134%" y="277" width="0.0799%" height="15" fill="rgb(221,1,38)" fg:x="9314055998" fg:w="12978436"/><text x="57.5634%" y="287.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;nalgebra::base::matrix::Matrix&lt;f64,R,C,S&gt;&gt; for f64&gt;::mul (64,428,170 samples, 0.40%)</title><rect x="57.3933%" y="405" width="0.3965%" height="15" fill="rgb(206,124,46)" fg:x="9327034434" fg:w="64428170"/><text x="57.6433%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8,295,034 samples, 0.05%)</title><rect x="59.0871%" y="357" width="0.0510%" height="15" fill="rgb(249,21,11)" fg:x="9602288343" fg:w="8295034"/><text x="59.3371%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8,295,034 samples, 0.05%)</title><rect x="59.0871%" y="341" width="0.0510%" height="15" fill="rgb(222,201,40)" fg:x="9602288343" fg:w="8295034"/><text x="59.3371%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (4,275,861 samples, 0.03%)</title><rect x="59.1381%" y="357" width="0.0263%" height="15" fill="rgb(235,61,29)" fg:x="9610583377" fg:w="4275861"/><text x="59.3881%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1,789,535,788 samples, 11.01%)</title><rect x="63.6565%" y="293" width="11.0118%" height="15" fill="rgb(219,207,3)" fg:x="10344874575" fg:w="1789535788"/><text x="63.9065%" y="303.50">&lt;f64 as core::op..</text></g><g><title>[unknown] (4,304,522 samples, 0.03%)</title><rect x="74.6683%" y="293" width="0.0265%" height="15" fill="rgb(222,56,46)" fg:x="12134410363" fg:w="4304522"/><text x="74.9183%" y="303.50"></text></g><g><title>[unknown] (4,304,522 samples, 0.03%)</title><rect x="74.6683%" y="277" width="0.0265%" height="15" fill="rgb(239,76,54)" fg:x="12134410363" fg:w="4304522"/><text x="74.9183%" y="287.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (934,883,386 samples, 5.75%)</title><rect x="74.6948%" y="293" width="5.7527%" height="15" fill="rgb(231,124,27)" fg:x="12138714885" fg:w="934883386"/><text x="74.9448%" y="303.50">core::c..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (4,129,240,468 samples, 25.41%)</title><rect x="59.1644%" y="357" width="25.4090%" height="15" fill="rgb(249,195,6)" fg:x="9614859238" fg:w="4129240468"/><text x="59.4144%" y="367.50">nalgebra::base::blas::&lt;impl nalgebra::bas..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (4,129,240,468 samples, 25.41%)</title><rect x="59.1644%" y="341" width="25.4090%" height="15" fill="rgb(237,174,47)" fg:x="9614859238" fg:w="4129240468"/><text x="59.4144%" y="351.50">nalgebra::base::blas::&lt;impl nalgebra::bas..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (4,129,240,468 samples, 25.41%)</title><rect x="59.1644%" y="325" width="25.4090%" height="15" fill="rgb(206,201,31)" fg:x="9614859238" fg:w="4129240468"/><text x="59.4144%" y="335.50">nalgebra::base::blas_uninit::axcpy_uninit</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (4,129,240,468 samples, 25.41%)</title><rect x="59.1644%" y="309" width="25.4090%" height="15" fill="rgb(231,57,52)" fg:x="9614859238" fg:w="4129240468"/><text x="59.4144%" y="319.50">nalgebra::base::blas_uninit::array_axcpy</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (670,501,435 samples, 4.13%)</title><rect x="80.4475%" y="293" width="4.1259%" height="15" fill="rgb(248,177,22)" fg:x="13073598271" fg:w="670501435"/><text x="80.6975%" y="303.50">core..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (670,501,435 samples, 4.13%)</title><rect x="80.4475%" y="277" width="4.1259%" height="15" fill="rgb(215,211,37)" fg:x="13073598271" fg:w="670501435"/><text x="80.6975%" y="287.50">&lt;cor..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (650,974,726 samples, 4.01%)</title><rect x="80.5677%" y="261" width="4.0057%" height="15" fill="rgb(241,128,51)" fg:x="13093124980" fg:w="650974726"/><text x="80.8177%" y="271.50">&lt;usi..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (650,974,726 samples, 4.01%)</title><rect x="80.5677%" y="245" width="4.0057%" height="15" fill="rgb(227,165,31)" fg:x="13093124980" fg:w="650974726"/><text x="80.8177%" y="255.50">core..</text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::columns_range_pair_mut (11,902,159 samples, 0.07%)</title><rect x="84.5734%" y="357" width="0.0732%" height="15" fill="rgb(228,167,24)" fg:x="13744099706" fg:w="11902159"/><text x="84.8234%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::DivAssign&gt;::div_assign (76,623,403 samples, 0.47%)</title><rect x="84.6467%" y="341" width="0.4715%" height="15" fill="rgb(228,143,12)" fg:x="13756001865" fg:w="76623403"/><text x="84.8967%" y="351.50"></text></g><g><title>nalgebra::linalg::decomposition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::cholesky (4,445,374,433 samples, 27.35%)</title><rect x="57.7898%" y="405" width="27.3543%" height="15" fill="rgb(249,149,8)" fg:x="9391462604" fg:w="4445374433"/><text x="58.0398%" y="415.50">nalgebra::linalg::decomposition::&lt;impl nalge..</text></g><g><title>nalgebra::linalg::cholesky::Cholesky&lt;T,D&gt;::new (4,445,374,433 samples, 27.35%)</title><rect x="57.7898%" y="389" width="27.3543%" height="15" fill="rgb(243,35,44)" fg:x="9391462604" fg:w="4445374433"/><text x="58.0398%" y="399.50">nalgebra::linalg::cholesky::Cholesky&lt;T,D&gt;::n..</text></g><g><title>nalgebra::linalg::cholesky::Cholesky&lt;T,D&gt;::new_internal (4,445,374,433 samples, 27.35%)</title><rect x="57.7898%" y="373" width="27.3543%" height="15" fill="rgb(246,89,9)" fg:x="9391462604" fg:w="4445374433"/><text x="58.0398%" y="383.50">nalgebra::linalg::cholesky::Cholesky&lt;T,D&gt;::n..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::DivAssign&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::div_assign (80,835,172 samples, 0.50%)</title><rect x="84.6467%" y="357" width="0.4974%" height="15" fill="rgb(233,213,13)" fg:x="13756001865" fg:w="80835172"/><text x="84.8967%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,211,769 samples, 0.03%)</title><rect x="85.1182%" y="341" width="0.0259%" height="15" fill="rgb(233,141,41)" fg:x="13832625268" fg:w="4211769"/><text x="85.3682%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,211,769 samples, 0.03%)</title><rect x="85.1182%" y="325" width="0.0259%" height="15" fill="rgb(239,167,4)" fg:x="13832625268" fg:w="4211769"/><text x="85.3682%" y="335.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4,211,769 samples, 0.03%)</title><rect x="85.1182%" y="309" width="0.0259%" height="15" fill="rgb(209,217,16)" fg:x="13832625268" fg:w="4211769"/><text x="85.3682%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (4,211,769 samples, 0.03%)</title><rect x="85.1182%" y="293" width="0.0259%" height="15" fill="rgb(219,88,35)" fg:x="13832625268" fg:w="4211769"/><text x="85.3682%" y="303.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="405" width="0.0333%" height="15" fill="rgb(220,193,23)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="415.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="389" width="0.0333%" height="15" fill="rgb(230,90,52)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="399.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="373" width="0.0333%" height="15" fill="rgb(252,106,19)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="357" width="0.0333%" height="15" fill="rgb(206,74,20)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="341" width="0.0333%" height="15" fill="rgb(230,138,44)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="325" width="0.0333%" height="15" fill="rgb(235,182,43)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="309" width="0.0333%" height="15" fill="rgb(242,16,51)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="293" width="0.0333%" height="15" fill="rgb(248,9,4)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="277" width="0.0333%" height="15" fill="rgb(210,31,22)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="261" width="0.0333%" height="15" fill="rgb(239,54,39)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="271.50"></text></g><g><title>[libc.so.6] (5,404,908 samples, 0.03%)</title><rect x="85.1441%" y="245" width="0.0333%" height="15" fill="rgb(230,99,41)" fg:x="13836837037" fg:w="5404908"/><text x="85.3941%" y="255.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign (4,195,593 samples, 0.03%)</title><rect x="85.1773%" y="405" width="0.0258%" height="15" fill="rgb(253,106,12)" fg:x="13842241945" fg:w="4195593"/><text x="85.4273%" y="415.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (4,195,593 samples, 0.03%)</title><rect x="85.1773%" y="389" width="0.0258%" height="15" fill="rgb(213,46,41)" fg:x="13842241945" fg:w="4195593"/><text x="85.4273%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,195,593 samples, 0.03%)</title><rect x="85.1773%" y="373" width="0.0258%" height="15" fill="rgb(215,133,35)" fg:x="13842241945" fg:w="4195593"/><text x="85.4273%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4,195,593 samples, 0.03%)</title><rect x="85.1773%" y="357" width="0.0258%" height="15" fill="rgb(213,28,5)" fg:x="13842241945" fg:w="4195593"/><text x="85.4273%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,366,799 samples, 0.03%)</title><rect x="85.2032%" y="261" width="0.0269%" height="15" fill="rgb(215,77,49)" fg:x="13846437538" fg:w="4366799"/><text x="85.4532%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,366,799 samples, 0.03%)</title><rect x="85.2032%" y="245" width="0.0269%" height="15" fill="rgb(248,100,22)" fg:x="13846437538" fg:w="4366799"/><text x="85.4532%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,366,799 samples, 0.03%)</title><rect x="85.2032%" y="229" width="0.0269%" height="15" fill="rgb(208,67,9)" fg:x="13846437538" fg:w="4366799"/><text x="85.4532%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,366,799 samples, 0.03%)</title><rect x="85.2032%" y="213" width="0.0269%" height="15" fill="rgb(219,133,21)" fg:x="13846437538" fg:w="4366799"/><text x="85.4532%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,366,799 samples, 0.03%)</title><rect x="85.2032%" y="197" width="0.0269%" height="15" fill="rgb(246,46,29)" fg:x="13846437538" fg:w="4366799"/><text x="85.4532%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,366,799 samples, 0.03%)</title><rect x="85.2032%" y="181" width="0.0269%" height="15" fill="rgb(246,185,52)" fg:x="13846437538" fg:w="4366799"/><text x="85.4532%" y="191.50"></text></g><g><title>alloc::alloc::alloc (4,366,799 samples, 0.03%)</title><rect x="85.2032%" y="165" width="0.0269%" height="15" fill="rgb(252,136,11)" fg:x="13846437538" fg:w="4366799"/><text x="85.4532%" y="175.50"></text></g><g><title>malloc (4,366,799 samples, 0.03%)</title><rect x="85.2032%" y="149" width="0.0269%" height="15" fill="rgb(219,138,53)" fg:x="13846437538" fg:w="4366799"/><text x="85.4532%" y="159.50"></text></g><g><title>[libc.so.6] (4,366,799 samples, 0.03%)</title><rect x="85.2032%" y="133" width="0.0269%" height="15" fill="rgb(211,51,23)" fg:x="13846437538" fg:w="4366799"/><text x="85.4532%" y="143.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (51,099,030 samples, 0.31%)</title><rect x="85.2032%" y="389" width="0.3144%" height="15" fill="rgb(247,221,28)" fg:x="13846437538" fg:w="51099030"/><text x="85.4532%" y="399.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (51,099,030 samples, 0.31%)</title><rect x="85.2032%" y="373" width="0.3144%" height="15" fill="rgb(251,222,45)" fg:x="13846437538" fg:w="51099030"/><text x="85.4532%" y="383.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (51,099,030 samples, 0.31%)</title><rect x="85.2032%" y="357" width="0.3144%" height="15" fill="rgb(217,162,53)" fg:x="13846437538" fg:w="51099030"/><text x="85.4532%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (51,099,030 samples, 0.31%)</title><rect x="85.2032%" y="341" width="0.3144%" height="15" fill="rgb(229,93,14)" fg:x="13846437538" fg:w="51099030"/><text x="85.4532%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (51,099,030 samples, 0.31%)</title><rect x="85.2032%" y="325" width="0.3144%" height="15" fill="rgb(209,67,49)" fg:x="13846437538" fg:w="51099030"/><text x="85.4532%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (51,099,030 samples, 0.31%)</title><rect x="85.2032%" y="309" width="0.3144%" height="15" fill="rgb(213,87,29)" fg:x="13846437538" fg:w="51099030"/><text x="85.4532%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (51,099,030 samples, 0.31%)</title><rect x="85.2032%" y="293" width="0.3144%" height="15" fill="rgb(205,151,52)" fg:x="13846437538" fg:w="51099030"/><text x="85.4532%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (51,099,030 samples, 0.31%)</title><rect x="85.2032%" y="277" width="0.3144%" height="15" fill="rgb(253,215,39)" fg:x="13846437538" fg:w="51099030"/><text x="85.4532%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (46,732,231 samples, 0.29%)</title><rect x="85.2300%" y="261" width="0.2876%" height="15" fill="rgb(221,220,41)" fg:x="13850804337" fg:w="46732231"/><text x="85.4800%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46,732,231 samples, 0.29%)</title><rect x="85.2300%" y="245" width="0.2876%" height="15" fill="rgb(218,133,21)" fg:x="13850804337" fg:w="46732231"/><text x="85.4800%" y="255.50"></text></g><g><title>[libc.so.6] (46,732,231 samples, 0.29%)</title><rect x="85.2300%" y="229" width="0.2876%" height="15" fill="rgb(221,193,43)" fg:x="13850804337" fg:w="46732231"/><text x="85.4800%" y="239.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::add (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="389" width="0.0511%" height="15" fill="rgb(240,128,52)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="399.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="373" width="0.0511%" height="15" fill="rgb(253,114,12)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="383.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="357" width="0.0511%" height="15" fill="rgb(215,223,47)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="367.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="341" width="0.0511%" height="15" fill="rgb(248,225,23)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="351.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="325" width="0.0511%" height="15" fill="rgb(250,108,0)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="335.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="309" width="0.0511%" height="15" fill="rgb(228,208,7)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="319.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="293" width="0.0511%" height="15" fill="rgb(244,45,10)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="303.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="277" width="0.0511%" height="15" fill="rgb(207,125,25)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="287.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="261" width="0.0511%" height="15" fill="rgb(210,195,18)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="271.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="245" width="0.0511%" height="15" fill="rgb(249,80,12)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="255.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="229" width="0.0511%" height="15" fill="rgb(221,65,9)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="239.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="213" width="0.0511%" height="15" fill="rgb(235,49,36)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="223.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_contiguous (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="197" width="0.0511%" height="15" fill="rgb(225,32,20)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="207.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="181" width="0.0511%" height="15" fill="rgb(215,141,46)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="191.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="165" width="0.0511%" height="15" fill="rgb(250,160,47)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="149" width="0.0511%" height="15" fill="rgb(216,222,40)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="159.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::clone_iopf::_{{closure}} (8,299,213 samples, 0.05%)</title><rect x="85.5176%" y="133" width="0.0511%" height="15" fill="rgb(234,217,39)" fg:x="13897536568" fg:w="8299213"/><text x="85.7676%" y="143.50"></text></g><g><title>cfree (4,169,770 samples, 0.03%)</title><rect x="85.5687%" y="341" width="0.0257%" height="15" fill="rgb(207,178,40)" fg:x="13905835781" fg:w="4169770"/><text x="85.8187%" y="351.50"></text></g><g><title>matrixmultiply::gemm::make_packing_buffer (4,215,280 samples, 0.03%)</title><rect x="85.5943%" y="325" width="0.0259%" height="15" fill="rgb(221,136,13)" fg:x="13910005551" fg:w="4215280"/><text x="85.8443%" y="335.50"></text></g><g><title>matrixmultiply::aligned_alloc::Alloc&lt;T&gt;::new (4,215,280 samples, 0.03%)</title><rect x="85.5943%" y="309" width="0.0259%" height="15" fill="rgb(249,199,10)" fg:x="13910005551" fg:w="4215280"/><text x="85.8443%" y="319.50"></text></g><g><title>alloc::alloc::alloc (4,215,280 samples, 0.03%)</title><rect x="85.5943%" y="293" width="0.0259%" height="15" fill="rgb(249,222,13)" fg:x="13910005551" fg:w="4215280"/><text x="85.8443%" y="303.50"></text></g><g><title>__rdl_alloc (4,215,280 samples, 0.03%)</title><rect x="85.5943%" y="277" width="0.0259%" height="15" fill="rgb(244,185,38)" fg:x="13910005551" fg:w="4215280"/><text x="85.8443%" y="287.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4,215,280 samples, 0.03%)</title><rect x="85.5943%" y="261" width="0.0259%" height="15" fill="rgb(236,202,9)" fg:x="13910005551" fg:w="4215280"/><text x="85.8443%" y="271.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (4,215,280 samples, 0.03%)</title><rect x="85.5943%" y="245" width="0.0259%" height="15" fill="rgb(250,229,37)" fg:x="13910005551" fg:w="4215280"/><text x="85.8443%" y="255.50"></text></g><g><title>posix_memalign (4,215,280 samples, 0.03%)</title><rect x="85.5943%" y="229" width="0.0259%" height="15" fill="rgb(206,174,23)" fg:x="13910005551" fg:w="4215280"/><text x="85.8443%" y="239.50"></text></g><g><title>[libc.so.6] (4,215,280 samples, 0.03%)</title><rect x="85.5943%" y="213" width="0.0259%" height="15" fill="rgb(211,33,43)" fg:x="13910005551" fg:w="4215280"/><text x="85.8443%" y="223.50"></text></g><g><title>[libc.so.6] (4,215,280 samples, 0.03%)</title><rect x="85.5943%" y="197" width="0.0259%" height="15" fill="rgb(245,58,50)" fg:x="13910005551" fg:w="4215280"/><text x="85.8443%" y="207.50"></text></g><g><title>[libc.so.6] (4,215,280 samples, 0.03%)</title><rect x="85.5943%" y="181" width="0.0259%" height="15" fill="rgb(244,68,36)" fg:x="13910005551" fg:w="4215280"/><text x="85.8443%" y="191.50"></text></g><g><title>matrixmultiply::gemm::pack (4,255,991 samples, 0.03%)</title><rect x="85.6203%" y="325" width="0.0262%" height="15" fill="rgb(232,229,15)" fg:x="13914220831" fg:w="4255991"/><text x="85.8703%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,255,991 samples, 0.03%)</title><rect x="85.6203%" y="309" width="0.0262%" height="15" fill="rgb(254,30,23)" fg:x="13914220831" fg:w="4255991"/><text x="85.8703%" y="319.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (12,826,521 samples, 0.08%)</title><rect x="85.6464%" y="197" width="0.0789%" height="15" fill="rgb(235,160,14)" fg:x="13918476822" fg:w="12826521"/><text x="85.8964%" y="207.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (12,826,521 samples, 0.08%)</title><rect x="85.6464%" y="181" width="0.0789%" height="15" fill="rgb(212,155,44)" fg:x="13918476822" fg:w="12826521"/><text x="85.8964%" y="191.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (8,462,596 samples, 0.05%)</title><rect x="85.7254%" y="197" width="0.0521%" height="15" fill="rgb(226,2,50)" fg:x="13931303343" fg:w="8462596"/><text x="85.9754%" y="207.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (17,298,624 samples, 0.11%)</title><rect x="85.7774%" y="197" width="0.1064%" height="15" fill="rgb(234,177,6)" fg:x="13939765939" fg:w="17298624"/><text x="86.0274%" y="207.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (42,944,731 samples, 0.26%)</title><rect x="85.6464%" y="245" width="0.2643%" height="15" fill="rgb(217,24,9)" fg:x="13918476822" fg:w="42944731"/><text x="85.8964%" y="255.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (42,944,731 samples, 0.26%)</title><rect x="85.6464%" y="229" width="0.2643%" height="15" fill="rgb(220,13,46)" fg:x="13918476822" fg:w="42944731"/><text x="85.8964%" y="239.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (42,944,731 samples, 0.26%)</title><rect x="85.6464%" y="213" width="0.2643%" height="15" fill="rgb(239,221,27)" fg:x="13918476822" fg:w="42944731"/><text x="85.8964%" y="223.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (4,356,990 samples, 0.03%)</title><rect x="85.8839%" y="197" width="0.0268%" height="15" fill="rgb(222,198,25)" fg:x="13957064563" fg:w="4356990"/><text x="86.1339%" y="207.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (51,461,193 samples, 0.32%)</title><rect x="85.6464%" y="293" width="0.3167%" height="15" fill="rgb(211,99,13)" fg:x="13918476822" fg:w="51461193"/><text x="85.8964%" y="303.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (51,461,193 samples, 0.32%)</title><rect x="85.6464%" y="277" width="0.3167%" height="15" fill="rgb(232,111,31)" fg:x="13918476822" fg:w="51461193"/><text x="85.8964%" y="287.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (51,461,193 samples, 0.32%)</title><rect x="85.6464%" y="261" width="0.3167%" height="15" fill="rgb(245,82,37)" fg:x="13918476822" fg:w="51461193"/><text x="85.8964%" y="271.50"></text></g><g><title>matrixmultiply::gemm::masked_kernel (8,516,462 samples, 0.05%)</title><rect x="85.9107%" y="245" width="0.0524%" height="15" fill="rgb(227,149,46)" fg:x="13961421553" fg:w="8516462"/><text x="86.1607%" y="255.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (8,516,462 samples, 0.05%)</title><rect x="85.9107%" y="229" width="0.0524%" height="15" fill="rgb(218,36,50)" fg:x="13961421553" fg:w="8516462"/><text x="86.1607%" y="239.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (8,516,462 samples, 0.05%)</title><rect x="85.9107%" y="213" width="0.0524%" height="15" fill="rgb(226,80,48)" fg:x="13961421553" fg:w="8516462"/><text x="86.1607%" y="223.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (8,516,462 samples, 0.05%)</title><rect x="85.9107%" y="197" width="0.0524%" height="15" fill="rgb(238,224,15)" fg:x="13961421553" fg:w="8516462"/><text x="86.1607%" y="207.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (8,516,462 samples, 0.05%)</title><rect x="85.9107%" y="181" width="0.0524%" height="15" fill="rgb(241,136,10)" fg:x="13961421553" fg:w="8516462"/><text x="86.1607%" y="191.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (8,516,462 samples, 0.05%)</title><rect x="85.9107%" y="165" width="0.0524%" height="15" fill="rgb(208,32,45)" fg:x="13961421553" fg:w="8516462"/><text x="86.1607%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,280,667 samples, 0.03%)</title><rect x="85.9631%" y="277" width="0.0263%" height="15" fill="rgb(207,135,9)" fg:x="13969938015" fg:w="4280667"/><text x="86.2131%" y="287.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (72,444,209 samples, 0.45%)</title><rect x="85.5687%" y="389" width="0.4458%" height="15" fill="rgb(206,86,44)" fg:x="13905835781" fg:w="72444209"/><text x="85.8187%" y="399.50"></text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (72,444,209 samples, 0.45%)</title><rect x="85.5687%" y="373" width="0.4458%" height="15" fill="rgb(245,177,15)" fg:x="13905835781" fg:w="72444209"/><text x="85.8187%" y="383.50"></text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (72,444,209 samples, 0.45%)</title><rect x="85.5687%" y="357" width="0.4458%" height="15" fill="rgb(206,64,50)" fg:x="13905835781" fg:w="72444209"/><text x="85.8187%" y="367.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (68,274,439 samples, 0.42%)</title><rect x="85.5943%" y="341" width="0.4201%" height="15" fill="rgb(234,36,40)" fg:x="13910005551" fg:w="68274439"/><text x="85.8443%" y="351.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (59,803,168 samples, 0.37%)</title><rect x="85.6464%" y="325" width="0.3680%" height="15" fill="rgb(213,64,8)" fg:x="13918476822" fg:w="59803168"/><text x="85.8964%" y="335.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (59,803,168 samples, 0.37%)</title><rect x="85.6464%" y="309" width="0.3680%" height="15" fill="rgb(210,75,36)" fg:x="13918476822" fg:w="59803168"/><text x="85.8964%" y="319.50"></text></g><g><title>matrixmultiply::gemm::pack (8,341,975 samples, 0.05%)</title><rect x="85.9631%" y="293" width="0.0513%" height="15" fill="rgb(229,88,21)" fg:x="13969938015" fg:w="8341975"/><text x="86.2131%" y="303.50"></text></g><g><title>rawpointer::PointerExt::stride_offset (4,061,308 samples, 0.02%)</title><rect x="85.9894%" y="277" width="0.0250%" height="15" fill="rgb(252,204,47)" fg:x="13974218682" fg:w="4061308"/><text x="86.2394%" y="287.50"></text></g><g><title>rkl::core::layers::Dense::forward (406,821,090 samples, 2.50%)</title><rect x="85.2032%" y="405" width="2.5033%" height="15" fill="rgb(208,77,27)" fg:x="13846437538" fg:w="406821090"/><text x="85.4532%" y="415.50">rk..</text></g><g><title>rkl::core::activations::Activation::forward (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="389" width="1.6921%" height="15" fill="rgb(221,76,26)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="399.50"></text></g><g><title>rkl::core::activations::tanh_forward (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="373" width="1.6921%" height="15" fill="rgb(225,139,18)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="383.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="357" width="1.6921%" height="15" fill="rgb(230,137,11)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="367.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="341" width="1.6921%" height="15" fill="rgb(212,28,1)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="351.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="325" width="1.6921%" height="15" fill="rgb(248,164,17)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="335.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="309" width="1.6921%" height="15" fill="rgb(222,171,42)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="293" width="1.6921%" height="15" fill="rgb(243,84,45)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="303.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="277" width="1.6921%" height="15" fill="rgb(252,49,23)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="287.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="261" width="1.6921%" height="15" fill="rgb(215,19,7)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="271.50"></text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="245" width="1.6921%" height="15" fill="rgb(238,81,41)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::tanh (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="229" width="1.6921%" height="15" fill="rgb(210,199,37)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="239.50"></text></g><g><title>tanhf32x (274,978,638 samples, 1.69%)</title><rect x="86.0144%" y="213" width="1.6921%" height="15" fill="rgb(244,192,49)" fg:x="13978279990" fg:w="274978638"/><text x="86.2644%" y="223.50"></text></g><g><title>[libm.so.6] (199,955,452 samples, 1.23%)</title><rect x="86.4761%" y="197" width="1.2304%" height="15" fill="rgb(226,211,11)" fg:x="14053303176" fg:w="199955452"/><text x="86.7261%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="389" width="0.0361%" height="15" fill="rgb(236,162,54)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="373" width="0.0361%" height="15" fill="rgb(220,229,9)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="383.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="357" width="0.0361%" height="15" fill="rgb(250,87,22)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="341" width="0.0361%" height="15" fill="rgb(239,43,17)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="325" width="0.0361%" height="15" fill="rgb(231,177,25)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="309" width="0.0361%" height="15" fill="rgb(219,179,1)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="293" width="0.0361%" height="15" fill="rgb(238,219,53)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="277" width="0.0361%" height="15" fill="rgb(232,167,36)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="261" width="0.0361%" height="15" fill="rgb(244,19,51)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="271.50"></text></g><g><title>cfree (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="245" width="0.0361%" height="15" fill="rgb(224,6,22)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="255.50"></text></g><g><title>[libc.so.6] (5,874,730 samples, 0.04%)</title><rect x="87.7065%" y="229" width="0.0361%" height="15" fill="rgb(224,145,5)" fg:x="14253258628" fg:w="5874730"/><text x="87.9565%" y="239.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="389" width="0.4381%" height="15" fill="rgb(234,130,49)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="399.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="373" width="0.4381%" height="15" fill="rgb(254,6,2)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="383.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="357" width="0.4381%" height="15" fill="rgb(208,96,46)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="341" width="0.4381%" height="15" fill="rgb(239,3,39)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="325" width="0.4381%" height="15" fill="rgb(233,210,1)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="309" width="0.4381%" height="15" fill="rgb(244,137,37)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="293" width="0.4381%" height="15" fill="rgb(240,136,2)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="277" width="0.4381%" height="15" fill="rgb(239,18,37)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="261" width="0.4381%" height="15" fill="rgb(218,185,22)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="245" width="0.4381%" height="15" fill="rgb(225,218,4)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="255.50"></text></g><g><title>[libc.so.6] (71,196,592 samples, 0.44%)</title><rect x="87.7426%" y="229" width="0.4381%" height="15" fill="rgb(230,182,32)" fg:x="14259133358" fg:w="71196592"/><text x="87.9926%" y="239.50"></text></g><g><title>[unknown] (8,000,995 samples, 0.05%)</title><rect x="88.1315%" y="213" width="0.0492%" height="15" fill="rgb(242,56,43)" fg:x="14322328955" fg:w="8000995"/><text x="88.3815%" y="223.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign (513,347,094 samples, 3.16%)</title><rect x="88.1808%" y="389" width="3.1588%" height="15" fill="rgb(233,99,24)" fg:x="14330329950" fg:w="513347094"/><text x="88.4308%" y="399.50">nda..</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with (513,347,094 samples, 3.16%)</title><rect x="88.1808%" y="373" width="3.1588%" height="15" fill="rgb(234,209,42)" fg:x="14330329950" fg:w="513347094"/><text x="88.4308%" y="383.50">nda..</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (513,347,094 samples, 3.16%)</title><rect x="88.1808%" y="357" width="3.1588%" height="15" fill="rgb(227,7,12)" fg:x="14330329950" fg:w="513347094"/><text x="88.4308%" y="367.50">nda..</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (513,347,094 samples, 3.16%)</title><rect x="88.1808%" y="341" width="3.1588%" height="15" fill="rgb(245,203,43)" fg:x="14330329950" fg:w="513347094"/><text x="88.4308%" y="351.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (513,347,094 samples, 3.16%)</title><rect x="88.1808%" y="325" width="3.1588%" height="15" fill="rgb(238,205,33)" fg:x="14330329950" fg:w="513347094"/><text x="88.4308%" y="335.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (513,347,094 samples, 3.16%)</title><rect x="88.1808%" y="309" width="3.1588%" height="15" fill="rgb(231,56,7)" fg:x="14330329950" fg:w="513347094"/><text x="88.4308%" y="319.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (513,347,094 samples, 3.16%)</title><rect x="88.1808%" y="293" width="3.1588%" height="15" fill="rgb(244,186,29)" fg:x="14330329950" fg:w="513347094"/><text x="88.4308%" y="303.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (513,347,094 samples, 3.16%)</title><rect x="88.1808%" y="277" width="3.1588%" height="15" fill="rgb(234,111,31)" fg:x="14330329950" fg:w="513347094"/><text x="88.4308%" y="287.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (513,347,094 samples, 3.16%)</title><rect x="88.1808%" y="261" width="3.1588%" height="15" fill="rgb(241,149,10)" fg:x="14330329950" fg:w="513347094"/><text x="88.4308%" y="271.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (510,093,500 samples, 3.14%)</title><rect x="88.2008%" y="245" width="3.1388%" height="15" fill="rgb(249,206,44)" fg:x="14333583544" fg:w="510093500"/><text x="88.4508%" y="255.50">nda..</text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (510,093,500 samples, 3.14%)</title><rect x="88.2008%" y="229" width="3.1388%" height="15" fill="rgb(251,153,30)" fg:x="14333583544" fg:w="510093500"/><text x="88.4508%" y="239.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (510,093,500 samples, 3.14%)</title><rect x="88.2008%" y="213" width="3.1388%" height="15" fill="rgb(239,152,38)" fg:x="14333583544" fg:w="510093500"/><text x="88.4508%" y="223.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (510,093,500 samples, 3.14%)</title><rect x="88.2008%" y="197" width="3.1388%" height="15" fill="rgb(249,139,47)" fg:x="14333583544" fg:w="510093500"/><text x="88.4508%" y="207.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (510,093,500 samples, 3.14%)</title><rect x="88.2008%" y="181" width="3.1388%" height="15" fill="rgb(244,64,35)" fg:x="14333583544" fg:w="510093500"/><text x="88.4508%" y="191.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (510,093,500 samples, 3.14%)</title><rect x="88.2008%" y="165" width="3.1388%" height="15" fill="rgb(216,46,15)" fg:x="14333583544" fg:w="510093500"/><text x="88.4508%" y="175.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (510,093,500 samples, 3.14%)</title><rect x="88.2008%" y="149" width="3.1388%" height="15" fill="rgb(250,74,19)" fg:x="14333583544" fg:w="510093500"/><text x="88.4508%" y="159.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (456,406,469 samples, 2.81%)</title><rect x="88.5311%" y="133" width="2.8085%" height="15" fill="rgb(249,42,33)" fg:x="14387270575" fg:w="456406469"/><text x="88.7811%" y="143.50">nd..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (456,406,469 samples, 2.81%)</title><rect x="88.5311%" y="117" width="2.8085%" height="15" fill="rgb(242,149,17)" fg:x="14387270575" fg:w="456406469"/><text x="88.7811%" y="127.50">co..</text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign::_{{closure}} (338,422,461 samples, 2.08%)</title><rect x="89.2571%" y="101" width="2.0825%" height="15" fill="rgb(244,29,21)" fg:x="14505254583" fg:w="338422461"/><text x="89.5071%" y="111.50">n..</text></g><g><title>core::clone::Clone::clone_from (338,422,461 samples, 2.08%)</title><rect x="89.2571%" y="85" width="2.0825%" height="15" fill="rgb(220,130,37)" fg:x="14505254583" fg:w="338422461"/><text x="89.5071%" y="95.50">c..</text></g><g><title>[unknown] (70,883,535 samples, 0.44%)</title><rect x="90.9034%" y="69" width="0.4362%" height="15" fill="rgb(211,67,2)" fg:x="14772793509" fg:w="70883535"/><text x="91.1534%" y="79.50"></text></g><g><title>[unknown] (26,891,139 samples, 0.17%)</title><rect x="91.1741%" y="53" width="0.1655%" height="15" fill="rgb(235,68,52)" fg:x="14816785905" fg:w="26891139"/><text x="91.4241%" y="63.50"></text></g><g><title>[unknown] (4,282,646 samples, 0.03%)</title><rect x="91.3132%" y="37" width="0.0264%" height="15" fill="rgb(246,142,3)" fg:x="14839394398" fg:w="4282646"/><text x="91.5632%" y="47.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::add (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="389" width="0.0523%" height="15" fill="rgb(241,25,7)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="399.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="373" width="0.0523%" height="15" fill="rgb(242,119,39)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="383.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="357" width="0.0523%" height="15" fill="rgb(241,98,45)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="367.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="341" width="0.0523%" height="15" fill="rgb(254,28,30)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="351.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="325" width="0.0523%" height="15" fill="rgb(241,142,54)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="335.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="309" width="0.0523%" height="15" fill="rgb(222,85,15)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="319.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="293" width="0.0523%" height="15" fill="rgb(210,85,47)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="303.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="277" width="0.0523%" height="15" fill="rgb(224,206,25)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="287.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="261" width="0.0523%" height="15" fill="rgb(243,201,19)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="271.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="245" width="0.0523%" height="15" fill="rgb(236,59,4)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="255.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="229" width="0.0523%" height="15" fill="rgb(254,179,45)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="239.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="213" width="0.0523%" height="15" fill="rgb(226,14,10)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="223.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_contiguous (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="197" width="0.0523%" height="15" fill="rgb(244,27,41)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="207.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="181" width="0.0523%" height="15" fill="rgb(235,35,32)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="191.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="165" width="0.0523%" height="15" fill="rgb(218,68,31)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="149" width="0.0523%" height="15" fill="rgb(207,120,37)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="159.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::clone_iopf::_{{closure}} (8,496,564 samples, 0.05%)</title><rect x="91.3396%" y="133" width="0.0523%" height="15" fill="rgb(227,98,0)" fg:x="14843677044" fg:w="8496564"/><text x="91.5896%" y="143.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (4,226,776 samples, 0.03%)</title><rect x="91.3919%" y="197" width="0.0260%" height="15" fill="rgb(207,7,3)" fg:x="14852173608" fg:w="4226776"/><text x="91.6419%" y="207.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (4,226,776 samples, 0.03%)</title><rect x="91.3919%" y="181" width="0.0260%" height="15" fill="rgb(206,98,19)" fg:x="14852173608" fg:w="4226776"/><text x="91.6419%" y="191.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (8,555,637 samples, 0.05%)</title><rect x="91.3919%" y="245" width="0.0526%" height="15" fill="rgb(217,5,26)" fg:x="14852173608" fg:w="8555637"/><text x="91.6419%" y="255.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (8,555,637 samples, 0.05%)</title><rect x="91.3919%" y="229" width="0.0526%" height="15" fill="rgb(235,190,38)" fg:x="14852173608" fg:w="8555637"/><text x="91.6419%" y="239.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (8,555,637 samples, 0.05%)</title><rect x="91.3919%" y="213" width="0.0526%" height="15" fill="rgb(247,86,24)" fg:x="14852173608" fg:w="8555637"/><text x="91.6419%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,328,861 samples, 0.03%)</title><rect x="91.4179%" y="197" width="0.0266%" height="15" fill="rgb(205,101,16)" fg:x="14856400384" fg:w="4328861"/><text x="91.6679%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,328,861 samples, 0.03%)</title><rect x="91.4179%" y="181" width="0.0266%" height="15" fill="rgb(246,168,33)" fg:x="14856400384" fg:w="4328861"/><text x="91.6679%" y="191.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (4,373,829 samples, 0.03%)</title><rect x="91.4445%" y="181" width="0.0269%" height="15" fill="rgb(231,114,1)" fg:x="14860729245" fg:w="4373829"/><text x="91.6945%" y="191.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (4,373,829 samples, 0.03%)</title><rect x="91.4445%" y="165" width="0.0269%" height="15" fill="rgb(207,184,53)" fg:x="14860729245" fg:w="4373829"/><text x="91.6945%" y="175.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (17,284,842 samples, 0.11%)</title><rect x="91.3919%" y="293" width="0.1064%" height="15" fill="rgb(224,95,51)" fg:x="14852173608" fg:w="17284842"/><text x="91.6419%" y="303.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (17,284,842 samples, 0.11%)</title><rect x="91.3919%" y="277" width="0.1064%" height="15" fill="rgb(212,188,45)" fg:x="14852173608" fg:w="17284842"/><text x="91.6419%" y="287.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (17,284,842 samples, 0.11%)</title><rect x="91.3919%" y="261" width="0.1064%" height="15" fill="rgb(223,154,38)" fg:x="14852173608" fg:w="17284842"/><text x="91.6419%" y="271.50"></text></g><g><title>matrixmultiply::gemm::masked_kernel (8,729,205 samples, 0.05%)</title><rect x="91.4445%" y="245" width="0.0537%" height="15" fill="rgb(251,22,52)" fg:x="14860729245" fg:w="8729205"/><text x="91.6945%" y="255.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (8,729,205 samples, 0.05%)</title><rect x="91.4445%" y="229" width="0.0537%" height="15" fill="rgb(229,209,22)" fg:x="14860729245" fg:w="8729205"/><text x="91.6945%" y="239.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (8,729,205 samples, 0.05%)</title><rect x="91.4445%" y="213" width="0.0537%" height="15" fill="rgb(234,138,34)" fg:x="14860729245" fg:w="8729205"/><text x="91.6945%" y="223.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (8,729,205 samples, 0.05%)</title><rect x="91.4445%" y="197" width="0.0537%" height="15" fill="rgb(212,95,11)" fg:x="14860729245" fg:w="8729205"/><text x="91.6945%" y="207.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (4,355,376 samples, 0.03%)</title><rect x="91.4714%" y="181" width="0.0268%" height="15" fill="rgb(240,179,47)" fg:x="14865103074" fg:w="4355376"/><text x="91.7214%" y="191.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (25,709,127 samples, 0.16%)</title><rect x="91.3919%" y="389" width="0.1582%" height="15" fill="rgb(240,163,11)" fg:x="14852173608" fg:w="25709127"/><text x="91.6419%" y="399.50"></text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (25,709,127 samples, 0.16%)</title><rect x="91.3919%" y="373" width="0.1582%" height="15" fill="rgb(236,37,12)" fg:x="14852173608" fg:w="25709127"/><text x="91.6419%" y="383.50"></text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (25,709,127 samples, 0.16%)</title><rect x="91.3919%" y="357" width="0.1582%" height="15" fill="rgb(232,164,16)" fg:x="14852173608" fg:w="25709127"/><text x="91.6419%" y="367.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (25,709,127 samples, 0.16%)</title><rect x="91.3919%" y="341" width="0.1582%" height="15" fill="rgb(244,205,15)" fg:x="14852173608" fg:w="25709127"/><text x="91.6419%" y="351.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (25,709,127 samples, 0.16%)</title><rect x="91.3919%" y="325" width="0.1582%" height="15" fill="rgb(223,117,47)" fg:x="14852173608" fg:w="25709127"/><text x="91.6419%" y="335.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (25,709,127 samples, 0.16%)</title><rect x="91.3919%" y="309" width="0.1582%" height="15" fill="rgb(244,107,35)" fg:x="14852173608" fg:w="25709127"/><text x="91.6419%" y="319.50"></text></g><g><title>matrixmultiply::gemm::pack (8,424,285 samples, 0.05%)</title><rect x="91.4982%" y="293" width="0.0518%" height="15" fill="rgb(205,140,8)" fg:x="14869458450" fg:w="8424285"/><text x="91.7482%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,424,285 samples, 0.05%)</title><rect x="91.4982%" y="277" width="0.0518%" height="15" fill="rgb(228,84,46)" fg:x="14869458450" fg:w="8424285"/><text x="91.7482%" y="287.50"></text></g><g><title>ndarray::stacking::concatenate (338,828,933 samples, 2.08%)</title><rect x="91.5501%" y="389" width="2.0850%" height="15" fill="rgb(254,188,9)" fg:x="14877882735" fg:w="338828933"/><text x="91.8001%" y="399.50">n..</text></g><g><title>ndarray::impl_owned_array::&lt;impl ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;A&gt;,D&gt;&gt;::append (338,828,933 samples, 2.08%)</title><rect x="91.5501%" y="373" width="2.0850%" height="15" fill="rgb(206,112,54)" fg:x="14877882735" fg:w="338828933"/><text x="91.8001%" y="383.50">n..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (338,828,933 samples, 2.08%)</title><rect x="91.5501%" y="357" width="2.0850%" height="15" fill="rgb(216,84,49)" fg:x="14877882735" fg:w="338828933"/><text x="91.8001%" y="367.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (338,828,933 samples, 2.08%)</title><rect x="91.5501%" y="341" width="2.0850%" height="15" fill="rgb(214,194,35)" fg:x="14877882735" fg:w="338828933"/><text x="91.8001%" y="351.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (338,828,933 samples, 2.08%)</title><rect x="91.5501%" y="325" width="2.0850%" height="15" fill="rgb(249,28,3)" fg:x="14877882735" fg:w="338828933"/><text x="91.8001%" y="335.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (338,828,933 samples, 2.08%)</title><rect x="91.5501%" y="309" width="2.0850%" height="15" fill="rgb(222,56,52)" fg:x="14877882735" fg:w="338828933"/><text x="91.8001%" y="319.50">n..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (334,499,093 samples, 2.06%)</title><rect x="91.5767%" y="293" width="2.0583%" height="15" fill="rgb(245,217,50)" fg:x="14882212575" fg:w="334499093"/><text x="91.8267%" y="303.50">n..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (246,650,994 samples, 1.52%)</title><rect x="92.1173%" y="277" width="1.5178%" height="15" fill="rgb(213,201,24)" fg:x="14970060674" fg:w="246650994"/><text x="92.3673%" y="287.50"></text></g><g><title>ndarray::impl_owned_array::_&lt;impl ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;A&gt;,D&gt;&gt;::append::_{{closure}} (246,650,994 samples, 1.52%)</title><rect x="92.1173%" y="261" width="1.5178%" height="15" fill="rgb(248,116,28)" fg:x="14970060674" fg:w="246650994"/><text x="92.3673%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (246,650,994 samples, 1.52%)</title><rect x="92.1173%" y="245" width="1.5178%" height="15" fill="rgb(219,72,43)" fg:x="14970060674" fg:w="246650994"/><text x="92.3673%" y="255.50"></text></g><g><title>core::ptr::write (246,650,994 samples, 1.52%)</title><rect x="92.1173%" y="229" width="1.5178%" height="15" fill="rgb(209,138,14)" fg:x="14970060674" fg:w="246650994"/><text x="92.3673%" y="239.50"></text></g><g><title>[unknown] (38,790,530 samples, 0.24%)</title><rect x="93.3963%" y="213" width="0.2387%" height="15" fill="rgb(222,18,33)" fg:x="15177921138" fg:w="38790530"/><text x="93.6463%" y="223.50"></text></g><g><title>[unknown] (24,355,187 samples, 0.15%)</title><rect x="93.4852%" y="197" width="0.1499%" height="15" fill="rgb(213,199,7)" fg:x="15192356481" fg:w="24355187"/><text x="93.7352%" y="207.50"></text></g><g><title>core::ptr::write (4,332,061 samples, 0.03%)</title><rect x="93.6616%" y="261" width="0.0267%" height="15" fill="rgb(250,110,10)" fg:x="15221024317" fg:w="4332061"/><text x="93.9116%" y="271.50"></text></g><g><title>[unknown] (4,332,061 samples, 0.03%)</title><rect x="93.6616%" y="245" width="0.0267%" height="15" fill="rgb(248,123,6)" fg:x="15221024317" fg:w="4332061"/><text x="93.9116%" y="255.50"></text></g><g><title>[unknown] (4,332,061 samples, 0.03%)</title><rect x="93.6616%" y="229" width="0.0267%" height="15" fill="rgb(206,91,31)" fg:x="15221024317" fg:w="4332061"/><text x="93.9116%" y="239.50"></text></g><g><title>rkl::core::activations::Activation::forward (140,490,044 samples, 0.86%)</title><rect x="93.6350%" y="389" width="0.8645%" height="15" fill="rgb(211,154,13)" fg:x="15216711668" fg:w="140490044"/><text x="93.8850%" y="399.50"></text></g><g><title>rkl::core::activations::tanh_forward (140,490,044 samples, 0.86%)</title><rect x="93.6350%" y="373" width="0.8645%" height="15" fill="rgb(225,148,7)" fg:x="15216711668" fg:w="140490044"/><text x="93.8850%" y="383.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (140,490,044 samples, 0.86%)</title><rect x="93.6350%" y="357" width="0.8645%" height="15" fill="rgb(220,160,43)" fg:x="15216711668" fg:w="140490044"/><text x="93.8850%" y="367.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (140,490,044 samples, 0.86%)</title><rect x="93.6350%" y="341" width="0.8645%" height="15" fill="rgb(213,52,39)" fg:x="15216711668" fg:w="140490044"/><text x="93.8850%" y="351.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (140,490,044 samples, 0.86%)</title><rect x="93.6350%" y="325" width="0.8645%" height="15" fill="rgb(243,137,7)" fg:x="15216711668" fg:w="140490044"/><text x="93.8850%" y="335.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (140,490,044 samples, 0.86%)</title><rect x="93.6350%" y="309" width="0.8645%" height="15" fill="rgb(230,79,13)" fg:x="15216711668" fg:w="140490044"/><text x="93.8850%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (140,490,044 samples, 0.86%)</title><rect x="93.6350%" y="293" width="0.8645%" height="15" fill="rgb(247,105,23)" fg:x="15216711668" fg:w="140490044"/><text x="93.8850%" y="303.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (140,490,044 samples, 0.86%)</title><rect x="93.6350%" y="277" width="0.8645%" height="15" fill="rgb(223,179,41)" fg:x="15216711668" fg:w="140490044"/><text x="93.8850%" y="287.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (131,845,334 samples, 0.81%)</title><rect x="93.6882%" y="261" width="0.8113%" height="15" fill="rgb(218,9,34)" fg:x="15225356378" fg:w="131845334"/><text x="93.9382%" y="271.50"></text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (131,845,334 samples, 0.81%)</title><rect x="93.6882%" y="245" width="0.8113%" height="15" fill="rgb(222,106,8)" fg:x="15225356378" fg:w="131845334"/><text x="93.9382%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::tanh (131,845,334 samples, 0.81%)</title><rect x="93.6882%" y="229" width="0.8113%" height="15" fill="rgb(211,220,0)" fg:x="15225356378" fg:w="131845334"/><text x="93.9382%" y="239.50"></text></g><g><title>tanhf32x (131,845,334 samples, 0.81%)</title><rect x="93.6882%" y="213" width="0.8113%" height="15" fill="rgb(229,52,16)" fg:x="15225356378" fg:w="131845334"/><text x="93.9382%" y="223.50"></text></g><g><title>[libm.so.6] (85,671,958 samples, 0.53%)</title><rect x="93.9724%" y="197" width="0.5272%" height="15" fill="rgb(212,155,18)" fg:x="15271529754" fg:w="85671958"/><text x="94.2224%" y="207.50"></text></g><g><title>[unknown] (24,854,774 samples, 0.15%)</title><rect x="94.9428%" y="373" width="0.1529%" height="15" fill="rgb(242,21,14)" fg:x="15429243204" fg:w="24854774"/><text x="95.1928%" y="383.50"></text></g><g><title>[unknown] (17,752,388 samples, 0.11%)</title><rect x="94.9865%" y="357" width="0.1092%" height="15" fill="rgb(222,19,48)" fg:x="15436345590" fg:w="17752388"/><text x="95.2365%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (74,906,787 samples, 0.46%)</title><rect x="95.0988%" y="341" width="0.4609%" height="15" fill="rgb(232,45,27)" fg:x="15454585566" fg:w="74906787"/><text x="95.3488%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (74,906,787 samples, 0.46%)</title><rect x="95.0988%" y="325" width="0.4609%" height="15" fill="rgb(249,103,42)" fg:x="15454585566" fg:w="74906787"/><text x="95.3488%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (75,394,377 samples, 0.46%)</title><rect x="95.0958%" y="373" width="0.4639%" height="15" fill="rgb(246,81,33)" fg:x="15454097978" fg:w="75394377"/><text x="95.3458%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (75,394,377 samples, 0.46%)</title><rect x="95.0958%" y="357" width="0.4639%" height="15" fill="rgb(252,33,42)" fg:x="15454097978" fg:w="75394377"/><text x="95.3458%" y="367.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (32,958,373 samples, 0.20%)</title><rect x="95.5597%" y="373" width="0.2028%" height="15" fill="rgb(209,212,41)" fg:x="15529492355" fg:w="32958373"/><text x="95.8097%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (31,458,168 samples, 0.19%)</title><rect x="95.5690%" y="357" width="0.1936%" height="15" fill="rgb(207,154,6)" fg:x="15530992560" fg:w="31458168"/><text x="95.8190%" y="367.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="373" width="0.0381%" height="15" fill="rgb(223,64,47)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="383.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="357" width="0.0381%" height="15" fill="rgb(211,161,38)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="367.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="341" width="0.0381%" height="15" fill="rgb(219,138,40)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="325" width="0.0381%" height="15" fill="rgb(241,228,46)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="309" width="0.0381%" height="15" fill="rgb(223,209,38)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="293" width="0.0381%" height="15" fill="rgb(236,164,45)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="277" width="0.0381%" height="15" fill="rgb(231,15,5)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="261" width="0.0381%" height="15" fill="rgb(252,35,15)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="245" width="0.0381%" height="15" fill="rgb(248,181,18)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="229" width="0.0381%" height="15" fill="rgb(233,39,42)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="239.50"></text></g><g><title>[libc.so.6] (6,190,326 samples, 0.04%)</title><rect x="95.7625%" y="213" width="0.0381%" height="15" fill="rgb(238,110,33)" fg:x="15562450728" fg:w="6190326"/><text x="96.0125%" y="223.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zeros (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="373" width="0.1070%" height="15" fill="rgb(233,195,10)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="383.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_elem (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="357" width="0.1070%" height="15" fill="rgb(254,105,3)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="367.50"></text></g><g><title>alloc::vec::from_elem (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="341" width="0.1070%" height="15" fill="rgb(221,225,9)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="351.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="325" width="0.1070%" height="15" fill="rgb(224,227,45)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="309" width="0.1070%" height="15" fill="rgb(229,198,43)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="293" width="0.1070%" height="15" fill="rgb(206,209,35)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="277" width="0.1070%" height="15" fill="rgb(245,195,53)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="261" width="0.1070%" height="15" fill="rgb(240,92,26)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="245" width="0.1070%" height="15" fill="rgb(207,40,23)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="255.50"></text></g><g><title>alloc::alloc::alloc_zeroed (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="229" width="0.1070%" height="15" fill="rgb(223,111,35)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="239.50"></text></g><g><title>[libc.so.6] (17,385,772 samples, 0.11%)</title><rect x="95.8006%" y="213" width="0.1070%" height="15" fill="rgb(229,147,28)" fg:x="15568641054" fg:w="17385772"/><text x="96.0506%" y="223.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::slice (29,259,909 samples, 0.18%)</title><rect x="95.9076%" y="373" width="0.1800%" height="15" fill="rgb(211,29,28)" fg:x="15586026826" fg:w="29259909"/><text x="96.1576%" y="383.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::slice_move (29,259,909 samples, 0.18%)</title><rect x="95.9076%" y="357" width="0.1800%" height="15" fill="rgb(228,72,33)" fg:x="15586026826" fg:w="29259909"/><text x="96.1576%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (29,259,909 samples, 0.18%)</title><rect x="95.9076%" y="341" width="0.1800%" height="15" fill="rgb(205,214,31)" fg:x="15586026826" fg:w="29259909"/><text x="96.1576%" y="351.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::slice_move::_{{closure}} (29,259,909 samples, 0.18%)</title><rect x="95.9076%" y="325" width="0.1800%" height="15" fill="rgb(224,111,15)" fg:x="15586026826" fg:w="29259909"/><text x="96.1576%" y="335.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::slice_axis_inplace (10,334,068 samples, 0.06%)</title><rect x="96.0241%" y="309" width="0.0636%" height="15" fill="rgb(253,21,26)" fg:x="15604952667" fg:w="10334068"/><text x="96.2741%" y="319.50"></text></g><g><title>ndarray::dimension::do_slice (10,334,068 samples, 0.06%)</title><rect x="96.0241%" y="293" width="0.0636%" height="15" fill="rgb(245,139,43)" fg:x="15604952667" fg:w="10334068"/><text x="96.2741%" y="303.50"></text></g><g><title>ndarray::dimension::to_abs_slice (3,030,242 samples, 0.02%)</title><rect x="96.0690%" y="277" width="0.0186%" height="15" fill="rgb(252,170,7)" fg:x="15612256493" fg:w="3030242"/><text x="96.3190%" y="287.50"></text></g><g><title>ndarray::dimension::abs_index (3,030,242 samples, 0.02%)</title><rect x="96.0690%" y="261" width="0.0186%" height="15" fill="rgb(231,118,14)" fg:x="15612256493" fg:w="3030242"/><text x="96.3190%" y="271.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (11,102,159 samples, 0.07%)</title><rect x="96.0876%" y="181" width="0.0683%" height="15" fill="rgb(238,83,0)" fg:x="15615286735" fg:w="11102159"/><text x="96.3376%" y="191.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (11,102,159 samples, 0.07%)</title><rect x="96.0876%" y="165" width="0.0683%" height="15" fill="rgb(221,39,39)" fg:x="15615286735" fg:w="11102159"/><text x="96.3376%" y="175.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (3,527,002 samples, 0.02%)</title><rect x="96.1560%" y="181" width="0.0217%" height="15" fill="rgb(222,119,46)" fg:x="15626388894" fg:w="3527002"/><text x="96.4060%" y="191.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (12,581,313 samples, 0.08%)</title><rect x="96.1777%" y="181" width="0.0774%" height="15" fill="rgb(222,165,49)" fg:x="15629915896" fg:w="12581313"/><text x="96.4277%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (12,581,313 samples, 0.08%)</title><rect x="96.1777%" y="165" width="0.0774%" height="15" fill="rgb(219,113,52)" fg:x="15629915896" fg:w="12581313"/><text x="96.4277%" y="175.50"></text></g><g><title>core::ptr::write_unaligned (12,581,313 samples, 0.08%)</title><rect x="96.1777%" y="149" width="0.0774%" height="15" fill="rgb(214,7,15)" fg:x="15629915896" fg:w="12581313"/><text x="96.4277%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12,581,313 samples, 0.08%)</title><rect x="96.1777%" y="133" width="0.0774%" height="15" fill="rgb(235,32,4)" fg:x="15629915896" fg:w="12581313"/><text x="96.4277%" y="143.50"></text></g><g><title>[unknown] (12,581,313 samples, 0.08%)</title><rect x="96.1777%" y="117" width="0.0774%" height="15" fill="rgb(238,90,54)" fg:x="15629915896" fg:w="12581313"/><text x="96.4277%" y="127.50"></text></g><g><title>[unknown] (12,581,313 samples, 0.08%)</title><rect x="96.1777%" y="101" width="0.0774%" height="15" fill="rgb(213,208,19)" fg:x="15629915896" fg:w="12581313"/><text x="96.4277%" y="111.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (29,376,918 samples, 0.18%)</title><rect x="96.0876%" y="277" width="0.1808%" height="15" fill="rgb(233,156,4)" fg:x="15615286735" fg:w="29376918"/><text x="96.3376%" y="287.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (29,376,918 samples, 0.18%)</title><rect x="96.0876%" y="261" width="0.1808%" height="15" fill="rgb(207,194,5)" fg:x="15615286735" fg:w="29376918"/><text x="96.3376%" y="271.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (29,376,918 samples, 0.18%)</title><rect x="96.0876%" y="245" width="0.1808%" height="15" fill="rgb(206,111,30)" fg:x="15615286735" fg:w="29376918"/><text x="96.3376%" y="255.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (29,376,918 samples, 0.18%)</title><rect x="96.0876%" y="229" width="0.1808%" height="15" fill="rgb(243,70,54)" fg:x="15615286735" fg:w="29376918"/><text x="96.3376%" y="239.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (29,376,918 samples, 0.18%)</title><rect x="96.0876%" y="213" width="0.1808%" height="15" fill="rgb(242,28,8)" fg:x="15615286735" fg:w="29376918"/><text x="96.3376%" y="223.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (29,376,918 samples, 0.18%)</title><rect x="96.0876%" y="197" width="0.1808%" height="15" fill="rgb(219,106,18)" fg:x="15615286735" fg:w="29376918"/><text x="96.3376%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,166,444 samples, 0.01%)</title><rect x="96.2551%" y="181" width="0.0133%" height="15" fill="rgb(244,222,10)" fg:x="15642497209" fg:w="2166444"/><text x="96.5051%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,166,444 samples, 0.01%)</title><rect x="96.2551%" y="165" width="0.0133%" height="15" fill="rgb(236,179,52)" fg:x="15642497209" fg:w="2166444"/><text x="96.5051%" y="175.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (36,017,274 samples, 0.22%)</title><rect x="96.0876%" y="373" width="0.2216%" height="15" fill="rgb(213,23,39)" fg:x="15615286735" fg:w="36017274"/><text x="96.3376%" y="383.50"></text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (36,017,274 samples, 0.22%)</title><rect x="96.0876%" y="357" width="0.2216%" height="15" fill="rgb(238,48,10)" fg:x="15615286735" fg:w="36017274"/><text x="96.3376%" y="367.50"></text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (36,017,274 samples, 0.22%)</title><rect x="96.0876%" y="341" width="0.2216%" height="15" fill="rgb(251,196,23)" fg:x="15615286735" fg:w="36017274"/><text x="96.3376%" y="351.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (36,017,274 samples, 0.22%)</title><rect x="96.0876%" y="325" width="0.2216%" height="15" fill="rgb(250,152,24)" fg:x="15615286735" fg:w="36017274"/><text x="96.3376%" y="335.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (36,017,274 samples, 0.22%)</title><rect x="96.0876%" y="309" width="0.2216%" height="15" fill="rgb(209,150,17)" fg:x="15615286735" fg:w="36017274"/><text x="96.3376%" y="319.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (36,017,274 samples, 0.22%)</title><rect x="96.0876%" y="293" width="0.2216%" height="15" fill="rgb(234,202,34)" fg:x="15615286735" fg:w="36017274"/><text x="96.3376%" y="303.50"></text></g><g><title>matrixmultiply::gemm::pack (6,640,356 samples, 0.04%)</title><rect x="96.2684%" y="277" width="0.0409%" height="15" fill="rgb(253,148,53)" fg:x="15644663653" fg:w="6640356"/><text x="96.5184%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,031,788 samples, 0.02%)</title><rect x="96.2906%" y="261" width="0.0187%" height="15" fill="rgb(218,129,16)" fg:x="15648272221" fg:w="3031788"/><text x="96.5406%" y="271.50"></text></g><g><title>core::ptr::write (3,487,119 samples, 0.02%)</title><rect x="96.3491%" y="245" width="0.0215%" height="15" fill="rgb(216,85,19)" fg:x="15657769029" fg:w="3487119"/><text x="96.5991%" y="255.50"></text></g><g><title>rkl::core::layers::Dense::backward_jacobian (479,312,142 samples, 2.95%)</title><rect x="94.4995%" y="389" width="2.9494%" height="15" fill="rgb(235,228,7)" fg:x="15357201712" fg:w="479312142"/><text x="94.7495%" y="399.50">rk..</text></g><g><title>rkl::core::activations::Activation::backward (185,209,845 samples, 1.14%)</title><rect x="96.3093%" y="373" width="1.1397%" height="15" fill="rgb(245,175,0)" fg:x="15651304009" fg:w="185209845"/><text x="96.5593%" y="383.50"></text></g><g><title>rkl::core::activations::tanh_backward (181,590,685 samples, 1.12%)</title><rect x="96.3315%" y="357" width="1.1174%" height="15" fill="rgb(208,168,36)" fg:x="15654923169" fg:w="181590685"/><text x="96.5815%" y="367.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (181,590,685 samples, 1.12%)</title><rect x="96.3315%" y="341" width="1.1174%" height="15" fill="rgb(246,171,24)" fg:x="15654923169" fg:w="181590685"/><text x="96.5815%" y="351.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (181,590,685 samples, 1.12%)</title><rect x="96.3315%" y="325" width="1.1174%" height="15" fill="rgb(215,142,24)" fg:x="15654923169" fg:w="181590685"/><text x="96.5815%" y="335.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (181,590,685 samples, 1.12%)</title><rect x="96.3315%" y="309" width="1.1174%" height="15" fill="rgb(250,187,7)" fg:x="15654923169" fg:w="181590685"/><text x="96.5815%" y="319.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (181,590,685 samples, 1.12%)</title><rect x="96.3315%" y="293" width="1.1174%" height="15" fill="rgb(228,66,33)" fg:x="15654923169" fg:w="181590685"/><text x="96.5815%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (181,590,685 samples, 1.12%)</title><rect x="96.3315%" y="277" width="1.1174%" height="15" fill="rgb(234,215,21)" fg:x="15654923169" fg:w="181590685"/><text x="96.5815%" y="287.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (181,590,685 samples, 1.12%)</title><rect x="96.3315%" y="261" width="1.1174%" height="15" fill="rgb(222,191,20)" fg:x="15654923169" fg:w="181590685"/><text x="96.5815%" y="271.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (175,257,706 samples, 1.08%)</title><rect x="96.3705%" y="245" width="1.0784%" height="15" fill="rgb(245,79,54)" fg:x="15661256148" fg:w="175257706"/><text x="96.6205%" y="255.50"></text></g><g><title>rkl::core::activations::tanh_backward::_{{closure}} (175,257,706 samples, 1.08%)</title><rect x="96.3705%" y="229" width="1.0784%" height="15" fill="rgb(240,10,37)" fg:x="15661256148" fg:w="175257706"/><text x="96.6205%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::tanh (175,257,706 samples, 1.08%)</title><rect x="96.3705%" y="213" width="1.0784%" height="15" fill="rgb(214,192,32)" fg:x="15661256148" fg:w="175257706"/><text x="96.6205%" y="223.50"></text></g><g><title>tanhf32x (175,257,706 samples, 1.08%)</title><rect x="96.3705%" y="197" width="1.0784%" height="15" fill="rgb(209,36,54)" fg:x="15661256148" fg:w="175257706"/><text x="96.6205%" y="207.50"></text></g><g><title>[libm.so.6] (96,356,216 samples, 0.59%)</title><rect x="96.8560%" y="181" width="0.5929%" height="15" fill="rgb(220,10,11)" fg:x="15740157638" fg:w="96356216"/><text x="97.1060%" y="191.50"></text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit (16,174,279,976 samples, 99.53%)</title><rect x="0.1953%" y="421" width="99.5274%" height="15" fill="rgb(221,106,17)" fg:x="31741895" fg:w="16174279976"/><text x="0.4453%" y="431.50">rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::backward_jacobian (1,952,763,243 samples, 12.02%)</title><rect x="87.7065%" y="405" width="12.0162%" height="15" fill="rgb(251,142,44)" fg:x="14253258628" fg:w="1952763243"/><text x="87.9565%" y="415.50">rkl::models::Seque..</text></g><g><title>rkl::models::divide_rows_by_last_value (369,508,017 samples, 2.27%)</title><rect x="97.4490%" y="389" width="2.2737%" height="15" fill="rgb(238,13,15)" fg:x="15836513854" fg:w="369508017"/><text x="97.6990%" y="399.50">r..</text></g><g><title>&lt;ndarray::iterators::IterMut&lt;A,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,419,440 samples, 0.16%)</title><rect x="99.5601%" y="373" width="0.1626%" height="15" fill="rgb(208,107,27)" fg:x="16179602431" fg:w="26419440"/><text x="99.8101%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,464,133 samples, 0.11%)</title><rect x="99.6152%" y="357" width="0.1075%" height="15" fill="rgb(205,136,37)" fg:x="16188557738" fg:w="17464133"/><text x="99.8652%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (17,464,133 samples, 0.11%)</title><rect x="99.6152%" y="341" width="0.1075%" height="15" fill="rgb(250,205,27)" fg:x="16188557738" fg:w="17464133"/><text x="99.8652%" y="351.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (17,464,133 samples, 0.11%)</title><rect x="99.6152%" y="325" width="0.1075%" height="15" fill="rgb(210,80,43)" fg:x="16188557738" fg:w="17464133"/><text x="99.8652%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (17,464,133 samples, 0.11%)</title><rect x="99.6152%" y="309" width="0.1075%" height="15" fill="rgb(247,160,36)" fg:x="16188557738" fg:w="17464133"/><text x="99.8652%" y="319.50"></text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="421" width="0.0230%" height="15" fill="rgb(234,13,49)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="431.50"></text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict_with_normalization (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="405" width="0.0230%" height="15" fill="rgb(234,122,0)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="415.50"></text></g><g><title>rkl::core::layers::Dense::forward (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="389" width="0.0230%" height="15" fill="rgb(207,146,38)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="399.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="373" width="0.0230%" height="15" fill="rgb(207,177,25)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="383.50"></text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="357" width="0.0230%" height="15" fill="rgb(211,178,42)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="367.50"></text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="341" width="0.0230%" height="15" fill="rgb(230,69,54)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="351.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="325" width="0.0230%" height="15" fill="rgb(214,135,41)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="335.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="309" width="0.0230%" height="15" fill="rgb(237,67,25)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="319.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="293" width="0.0230%" height="15" fill="rgb(222,189,50)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="303.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="277" width="0.0230%" height="15" fill="rgb(245,148,34)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="287.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="261" width="0.0230%" height="15" fill="rgb(222,29,6)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="271.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="245" width="0.0230%" height="15" fill="rgb(221,189,43)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="255.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="229" width="0.0230%" height="15" fill="rgb(207,36,27)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="239.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="213" width="0.0230%" height="15" fill="rgb(217,90,24)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="223.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="197" width="0.0230%" height="15" fill="rgb(224,66,35)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="181" width="0.0230%" height="15" fill="rgb(221,13,50)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,738,846 samples, 0.02%)</title><rect x="99.7227%" y="165" width="0.0230%" height="15" fill="rgb(236,68,49)" fg:x="16206021871" fg:w="3738846"/><text x="99.9727%" y="175.50"></text></g><g><title>plotters::chart::context::ChartContext&lt;DB,CT&gt;::draw_series (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="405" width="0.0171%" height="15" fill="rgb(229,146,28)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="415.50"></text></g><g><title>plotters::chart::context::ChartContext&lt;DB,CT&gt;::draw_series_impl (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="389" width="0.0171%" height="15" fill="rgb(225,31,38)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="399.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::draw (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="373" width="0.0171%" height="15" fill="rgb(250,208,3)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="383.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="357" width="0.0171%" height="15" fill="rgb(246,54,23)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="367.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::draw::_{{closure}} (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="341" width="0.0171%" height="15" fill="rgb(243,76,11)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="351.50"></text></g><g><title>&lt;plotters::element::dynelem::DynElement&lt;DB,Coord&gt; as plotters::element::Drawable&lt;DB&gt;&gt;::draw (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="325" width="0.0171%" height="15" fill="rgb(245,21,50)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="335.50"></text></g><g><title>&lt;T as plotters::element::dynelem::DynDrawable&lt;DB&gt;&gt;::draw_dyn (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="309" width="0.0171%" height="15" fill="rgb(228,9,43)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="319.50"></text></g><g><title>&lt;plotters::element::basic_shapes::PathElement&lt;Coord&gt; as plotters::element::Drawable&lt;DB&gt;&gt;::draw (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="293" width="0.0171%" height="15" fill="rgb(208,100,47)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="303.50"></text></g><g><title>plotters_backend::DrawingBackend::draw_path (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="277" width="0.0171%" height="15" fill="rgb(232,26,8)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="287.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::draw_line (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="261" width="0.0171%" height="15" fill="rgb(216,166,38)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="271.50"></text></g><g><title>plotters_backend::rasterizer::line::draw_line (2,779,984 samples, 0.02%)</title><rect x="99.7457%" y="245" width="0.0171%" height="15" fill="rgb(251,202,51)" fg:x="16209760717" fg:w="2779984"/><text x="99.9957%" y="255.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::fill (3,742,024 samples, 0.02%)</title><rect x="99.7628%" y="405" width="0.0230%" height="15" fill="rgb(254,216,34)" fg:x="16212540701" fg:w="3742024"/><text x="100.0128%" y="415.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (3,742,024 samples, 0.02%)</title><rect x="99.7628%" y="389" width="0.0230%" height="15" fill="rgb(251,32,27)" fg:x="16212540701" fg:w="3742024"/><text x="100.0128%" y="399.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::fill::_{{closure}} (3,742,024 samples, 0.02%)</title><rect x="99.7628%" y="373" width="0.0230%" height="15" fill="rgb(208,127,28)" fg:x="16212540701" fg:w="3742024"/><text x="100.0128%" y="383.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::draw_rect (3,742,024 samples, 0.02%)</title><rect x="99.7628%" y="357" width="0.0230%" height="15" fill="rgb(224,137,22)" fg:x="16212540701" fg:w="3742024"/><text x="100.0128%" y="367.50"></text></g><g><title>[libc.so.6] (3,742,024 samples, 0.02%)</title><rect x="99.7628%" y="341" width="0.0230%" height="15" fill="rgb(254,70,32)" fg:x="16212540701" fg:w="3742024"/><text x="100.0128%" y="351.50"></text></g><g><title>[unknown] (3,742,024 samples, 0.02%)</title><rect x="99.7628%" y="325" width="0.0230%" height="15" fill="rgb(229,75,37)" fg:x="16212540701" fg:w="3742024"/><text x="100.0128%" y="335.50"></text></g><g><title>rkl::plot::plot_comparision::plot_comparison (9,565,299 samples, 0.06%)</title><rect x="99.7457%" y="421" width="0.0589%" height="15" fill="rgb(252,64,23)" fg:x="16209760717" fg:w="9565299"/><text x="99.9957%" y="431.50"></text></g><g><title>std::io::stdio::_print (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="405" width="0.0187%" height="15" fill="rgb(232,162,48)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="415.50"></text></g><g><title>std::io::stdio::print_to (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="389" width="0.0187%" height="15" fill="rgb(246,160,12)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="399.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="373" width="0.0187%" height="15" fill="rgb(247,166,0)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="383.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="357" width="0.0187%" height="15" fill="rgb(249,219,21)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="341" width="0.0187%" height="15" fill="rgb(205,209,3)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="351.50"></text></g><g><title>core::fmt::write (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="325" width="0.0187%" height="15" fill="rgb(243,44,1)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="335.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="309" width="0.0187%" height="15" fill="rgb(206,159,16)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="319.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="293" width="0.0187%" height="15" fill="rgb(244,77,30)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="303.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="277" width="0.0187%" height="15" fill="rgb(218,69,12)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="287.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="261" width="0.0187%" height="15" fill="rgb(212,87,7)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="271.50"></text></g><g><title>core::slice::memchr::memrchr (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="245" width="0.0187%" height="15" fill="rgb(245,114,25)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="229" width="0.0187%" height="15" fill="rgb(210,61,42)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="239.50"></text></g><g><title>core::slice::memchr::memrchr::_{{closure}} (3,043,291 samples, 0.02%)</title><rect x="99.7858%" y="213" width="0.0187%" height="15" fill="rgb(211,52,33)" fg:x="16216282725" fg:w="3043291"/><text x="100.0358%" y="223.50"></text></g><g><title>_start (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="693" width="99.6289%" height="15" fill="rgb(234,58,33)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="703.50">_start</text></g><g><title>__libc_start_main (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="677" width="99.6289%" height="15" fill="rgb(220,115,36)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="687.50">__libc_start_main</text></g><g><title>[libc.so.6] (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="661" width="99.6289%" height="15" fill="rgb(243,153,54)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="671.50">[libc.so.6]</text></g><g><title>main (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="645" width="99.6289%" height="15" fill="rgb(251,47,18)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="655.50">main</text></g><g><title>std::rt::lang_start_internal (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="629" width="99.6289%" height="15" fill="rgb(242,102,42)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="639.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="613" width="99.6289%" height="15" fill="rgb(234,31,38)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="623.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="597" width="99.6289%" height="15" fill="rgb(221,117,51)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="607.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="581" width="99.6289%" height="15" fill="rgb(212,20,18)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="591.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="565" width="99.6289%" height="15" fill="rgb(245,133,36)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="575.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="549" width="99.6289%" height="15" fill="rgb(212,6,19)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="559.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="533" width="99.6289%" height="15" fill="rgb(218,1,36)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="543.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="517" width="99.6289%" height="15" fill="rgb(246,84,54)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="527.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="501" width="99.6289%" height="15" fill="rgb(242,110,6)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="511.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="485" width="99.6289%" height="15" fill="rgb(214,47,5)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="495.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="469" width="99.6289%" height="15" fill="rgb(218,159,25)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="479.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="453" width="99.6289%" height="15" fill="rgb(215,211,28)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="463.50">core::ops::function::FnOnce::call_once</text></g><g><title>main_benchmark::main (16,190,773,445 samples, 99.63%)</title><rect x="0.1953%" y="437" width="99.6289%" height="15" fill="rgb(238,59,32)" fg:x="31741895" fg:w="16190773445"/><text x="0.4453%" y="447.50">main_benchmark::main</text></g><g><title>rkl::plot::plot_errors_over_epochs::plot_errors_over_epochs (3,189,324 samples, 0.02%)</title><rect x="99.8046%" y="421" width="0.0196%" height="15" fill="rgb(226,82,3)" fg:x="16219326016" fg:w="3189324"/><text x="100.0546%" y="431.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::fill (3,189,324 samples, 0.02%)</title><rect x="99.8046%" y="405" width="0.0196%" height="15" fill="rgb(240,164,32)" fg:x="16219326016" fg:w="3189324"/><text x="100.0546%" y="415.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (3,189,324 samples, 0.02%)</title><rect x="99.8046%" y="389" width="0.0196%" height="15" fill="rgb(232,46,7)" fg:x="16219326016" fg:w="3189324"/><text x="100.0546%" y="399.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::fill::_{{closure}} (3,189,324 samples, 0.02%)</title><rect x="99.8046%" y="373" width="0.0196%" height="15" fill="rgb(229,129,53)" fg:x="16219326016" fg:w="3189324"/><text x="100.0546%" y="383.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::draw_rect (3,189,324 samples, 0.02%)</title><rect x="99.8046%" y="357" width="0.0196%" height="15" fill="rgb(234,188,29)" fg:x="16219326016" fg:w="3189324"/><text x="100.0546%" y="367.50"></text></g><g><title>[libc.so.6] (3,189,324 samples, 0.02%)</title><rect x="99.8046%" y="341" width="0.0196%" height="15" fill="rgb(246,141,4)" fg:x="16219326016" fg:w="3189324"/><text x="100.0546%" y="351.50"></text></g><g><title>plotters::chart::mesh::MeshStyle&lt;X,Y,DB&gt;::draw (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="693" width="0.0762%" height="15" fill="rgb(229,23,39)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="703.50"></text></g><g><title>plotters::chart::context::cartesian2d::draw_impl::&lt;impl plotters::chart::context::ChartContext&lt;DB,plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;&gt;&gt;::draw_mesh (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="677" width="0.0762%" height="15" fill="rgb(206,12,3)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="687.50"></text></g><g><title>plotters::chart::context::cartesian2d::draw_impl::&lt;impl plotters::chart::context::ChartContext&lt;DB,plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;&gt;&gt;::draw_mesh_lines (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="661" width="0.0762%" height="15" fill="rgb(252,226,20)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="671.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;&gt;::draw_mesh (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="645" width="0.0762%" height="15" fill="rgb(216,123,35)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="655.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="629" width="0.0762%" height="15" fill="rgb(212,68,40)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="639.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;&gt;::draw_mesh::_{{closure}} (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="613" width="0.0762%" height="15" fill="rgb(254,125,32)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="623.50"></text></g><g><title>plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;::draw_mesh (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="597" width="0.0762%" height="15" fill="rgb(253,97,22)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="607.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;&gt;::draw_mesh::_{{closure}}::_{{closure}} (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="581" width="0.0762%" height="15" fill="rgb(241,101,14)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="591.50"></text></g><g><title>plotters::chart::context::cartesian2d::draw_impl::_&lt;impl plotters::chart::context::ChartContext&lt;DB,plotters::coord::ranged2d::cartesian::Cartesian2d&lt;X,Y&gt;&gt;&gt;::draw_mesh_lines::_{{closure}} (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="565" width="0.0762%" height="15" fill="rgb(238,103,29)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="575.50"></text></g><g><title>plotters::coord::ranged2d::cartesian::MeshLine&lt;X,Y&gt;::draw (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="549" width="0.0762%" height="15" fill="rgb(233,195,47)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="559.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::draw_line (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="533" width="0.0762%" height="15" fill="rgb(246,218,30)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="543.50"></text></g><g><title>&lt;plotters_bitmap::bitmap_pixel::rgb::RGBPixel as plotters_bitmap::bitmap_pixel::pixel_format::PixelFormat&gt;::blend_rect_fast (12,389,969 samples, 0.08%)</title><rect x="99.8242%" y="517" width="0.0762%" height="15" fill="rgb(219,145,47)" fg:x="16222515340" fg:w="12389969"/><text x="100.0742%" y="527.50"></text></g><g><title>plotters_bitmap::bitmap_pixel::pixel_format::blend (9,467,192 samples, 0.06%)</title><rect x="99.8422%" y="501" width="0.0583%" height="15" fill="rgb(243,12,26)" fg:x="16225438117" fg:w="9467192"/><text x="100.0922%" y="511.50"></text></g><g><title>rkl::plot::plot_comparision::plot_comparison (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="693" width="0.0179%" height="15" fill="rgb(214,87,16)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="703.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="677" width="0.0179%" height="15" fill="rgb(208,99,42)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="687.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="661" width="0.0179%" height="15" fill="rgb(253,99,2)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="671.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present::_{{closure}} (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="645" width="0.0179%" height="15" fill="rgb(220,168,23)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="655.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::present (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="629" width="0.0179%" height="15" fill="rgb(242,38,24)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="639.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="613" width="0.0179%" height="15" fill="rgb(225,182,9)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="623.50"></text></g><g><title>image::dynimage::save_buffer (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="597" width="0.0179%" height="15" fill="rgb(243,178,37)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="607.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="581" width="0.0179%" height="15" fill="rgb(232,139,19)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="591.50"></text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="565" width="0.0179%" height="15" fill="rgb(225,201,24)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="575.50"></text></g><g><title>image::io::free_functions::write_buffer_impl (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="549" width="0.0179%" height="15" fill="rgb(221,47,46)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="559.50"></text></g><g><title>&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="533" width="0.0179%" height="15" fill="rgb(249,23,13)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="543.50"></text></g><g><title>image::codecs::png::PngEncoder&lt;W&gt;::encode_inner (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="517" width="0.0179%" height="15" fill="rgb(219,9,5)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="527.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_image_data (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="501" width="0.0179%" height="15" fill="rgb(254,171,16)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="511.50"></text></g><g><title>png::filter::filter (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="485" width="0.0179%" height="15" fill="rgb(230,171,20)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="495.50"></text></g><g><title>png::filter::filter_internal (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="469" width="0.0179%" height="15" fill="rgb(210,71,41)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="479.50"></text></g><g><title>png::filter::filter_paeth (2,906,659 samples, 0.02%)</title><rect x="99.9004%" y="453" width="0.0179%" height="15" fill="rgb(206,173,20)" fg:x="16234905309" fg:w="2906659"/><text x="100.1504%" y="463.50"></text></g><g><title>plotters::chart::series::SeriesLabelStyle&lt;DB,CT&gt;::draw (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="677" width="0.0205%" height="15" fill="rgb(233,88,34)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="687.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::draw (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="661" width="0.0205%" height="15" fill="rgb(223,209,46)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="671.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="645" width="0.0205%" height="15" fill="rgb(250,43,18)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="655.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::draw::_{{closure}} (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="629" width="0.0205%" height="15" fill="rgb(208,13,10)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="639.50"></text></g><g><title>&lt;plotters::element::text::MultiLineText&lt;Coord,T&gt; as plotters::element::Drawable&lt;DB&gt;&gt;::draw (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="613" width="0.0205%" height="15" fill="rgb(212,200,36)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="623.50"></text></g><g><title>plotters_backend::DrawingBackend::draw_text (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="597" width="0.0205%" height="15" fill="rgb(225,90,30)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="607.50"></text></g><g><title>&lt;plotters::style::text::TextStyle as plotters_backend::text::BackendTextStyle&gt;::layout_box (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="581" width="0.0205%" height="15" fill="rgb(236,182,39)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="591.50"></text></g><g><title>plotters::style::font::font_desc::FontDesc::layout_box (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="565" width="0.0205%" height="15" fill="rgb(212,144,35)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="575.50"></text></g><g><title>&lt;plotters::style::font::ttf::FontDataInternal as plotters::style::font::FontData&gt;::estimate_layout (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="549" width="0.0205%" height="15" fill="rgb(228,63,44)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="559.50"></text></g><g><title>font_kit::loaders::freetype::Font::advance (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="533" width="0.0205%" height="15" fill="rgb(228,109,6)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="543.50"></text></g><g><title>&lt;pathfinder_geometry::vector::Vector2I as font_kit::loaders::freetype::FtFixedToF32&gt;::ft_fixed_26_6_to_f32 (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="517" width="0.0205%" height="15" fill="rgb(238,117,24)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="527.50"></text></g><g><title>pathfinder_geometry::vector::Vector2F::round (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="501" width="0.0205%" height="15" fill="rgb(242,26,26)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="511.50"></text></g><g><title>pathfinder_simd::x86::F32x2::to_i32x2 (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="485" width="0.0205%" height="15" fill="rgb(221,92,48)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="495.50"></text></g><g><title>pathfinder_simd::x86::F32x2::to_i32x4 (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="469" width="0.0205%" height="15" fill="rgb(209,209,32)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="479.50"></text></g><g><title>pathfinder_simd::x86::F32x2::to_f32x4 (3,325,715 samples, 0.02%)</title><rect x="99.9183%" y="453" width="0.0205%" height="15" fill="rgb(221,70,22)" fg:x="16237811968" fg:w="3325715"/><text x="100.1683%" y="463.50"></text></g><g><title>fdeflate::compress::Compressor&lt;W&gt;::write_data (6,876,873 samples, 0.04%)</title><rect x="99.9388%" y="485" width="0.0423%" height="15" fill="rgb(248,145,5)" fg:x="16241137683" fg:w="6876873"/><text x="100.1888%" y="495.50"></text></g><g><title>all (16,251,086,141 samples, 100%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(226,116,26)" fg:x="0" fg:w="16251086141"/><text x="0.2500%" y="735.50"></text></g><g><title>main_benchmark (16,251,086,141 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(244,5,17)" fg:x="0" fg:w="16251086141"/><text x="0.2500%" y="719.50">main_benchmark</text></g><g><title>rkl::plot::plot_errors_over_epochs::plot_errors_over_epochs (13,274,173 samples, 0.08%)</title><rect x="99.9183%" y="693" width="0.0817%" height="15" fill="rgb(252,159,33)" fg:x="16237811968" fg:w="13274173"/><text x="100.1683%" y="703.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="677" width="0.0612%" height="15" fill="rgb(206,71,0)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="687.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="661" width="0.0612%" height="15" fill="rgb(233,118,54)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="671.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::present::_{{closure}} (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="645" width="0.0612%" height="15" fill="rgb(234,83,48)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="655.50"></text></g><g><title>&lt;plotters_bitmap::bitmap::BitMapBackend&lt;P&gt; as plotters_backend::DrawingBackend&gt;::present (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="629" width="0.0612%" height="15" fill="rgb(228,3,54)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="639.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="613" width="0.0612%" height="15" fill="rgb(226,155,13)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="623.50"></text></g><g><title>image::dynimage::save_buffer (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="597" width="0.0612%" height="15" fill="rgb(241,28,37)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="607.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="581" width="0.0612%" height="15" fill="rgb(233,93,10)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="591.50"></text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="565" width="0.0612%" height="15" fill="rgb(225,113,19)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="575.50"></text></g><g><title>image::io::free_functions::write_buffer_impl (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="549" width="0.0612%" height="15" fill="rgb(241,2,18)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="559.50"></text></g><g><title>&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="533" width="0.0612%" height="15" fill="rgb(228,207,21)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="543.50"></text></g><g><title>image::codecs::png::PngEncoder&lt;W&gt;::encode_inner (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="517" width="0.0612%" height="15" fill="rgb(213,211,35)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="527.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_image_data (9,948,458 samples, 0.06%)</title><rect x="99.9388%" y="501" width="0.0612%" height="15" fill="rgb(209,83,10)" fg:x="16241137683" fg:w="9948458"/><text x="100.1888%" y="511.50"></text></g><g><title>png::filter::filter (3,071,585 samples, 0.02%)</title><rect x="99.9811%" y="485" width="0.0189%" height="15" fill="rgb(209,164,1)" fg:x="16248014556" fg:w="3071585"/><text x="100.2311%" y="495.50"></text></g><g><title>png::filter::sum_buffer (3,071,585 samples, 0.02%)</title><rect x="99.9811%" y="469" width="0.0189%" height="15" fill="rgb(213,184,43)" fg:x="16248014556" fg:w="3071585"/><text x="100.2311%" y="479.50"></text></g></svg></svg>