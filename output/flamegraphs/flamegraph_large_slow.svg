<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1094" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1077.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1077.00"> </text><svg id="frames" x="10" width="1180" total_samples="145224465221"><g><title>[libexpat.so.1.9.1] (21,214,165 samples, 0.01%)</title><rect x="0.0171%" y="885" width="0.0146%" height="15" fill="rgb(227,0,7)" fg:x="24764439" fg:w="21214165"/><text x="0.2671%" y="895.50"></text></g><g><title>XML_ParseBuffer (31,825,569 samples, 0.02%)</title><rect x="0.0146%" y="965" width="0.0219%" height="15" fill="rgb(217,0,24)" fg:x="21224153" fg:w="31825569"/><text x="0.2646%" y="975.50"></text></g><g><title>[libexpat.so.1.9.1] (31,825,569 samples, 0.02%)</title><rect x="0.0146%" y="949" width="0.0219%" height="15" fill="rgb(221,193,54)" fg:x="21224153" fg:w="31825569"/><text x="0.2646%" y="959.50"></text></g><g><title>[libexpat.so.1.9.1] (31,825,569 samples, 0.02%)</title><rect x="0.0146%" y="933" width="0.0219%" height="15" fill="rgb(248,212,6)" fg:x="21224153" fg:w="31825569"/><text x="0.2646%" y="943.50"></text></g><g><title>[libexpat.so.1.9.1] (31,825,569 samples, 0.02%)</title><rect x="0.0146%" y="917" width="0.0219%" height="15" fill="rgb(208,68,35)" fg:x="21224153" fg:w="31825569"/><text x="0.2646%" y="927.50"></text></g><g><title>[libexpat.so.1.9.1] (31,825,569 samples, 0.02%)</title><rect x="0.0146%" y="901" width="0.0219%" height="15" fill="rgb(232,128,0)" fg:x="21224153" fg:w="31825569"/><text x="0.2646%" y="911.50"></text></g><g><title>[libfontconfig.so.1.12.1] (49,464,837 samples, 0.03%)</title><rect x="0.0049%" y="981" width="0.0341%" height="15" fill="rgb(207,160,47)" fg:x="7111335" fg:w="49464837"/><text x="0.2549%" y="991.50"></text></g><g><title>[libfontconfig.so.1.12.1] (63,607,073 samples, 0.04%)</title><rect x="0.0025%" y="997" width="0.0438%" height="15" fill="rgb(228,23,34)" fg:x="3572280" fg:w="63607073"/><text x="0.2525%" y="1007.50"></text></g><g><title>[unknown] (118,224,694 samples, 0.08%)</title><rect x="0.0000%" y="1013" width="0.0814%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="118224694"/><text x="0.2500%" y="1023.50"></text></g><g><title>rkl::plot::plot_comparision::plot_comparison (24,046,730 samples, 0.02%)</title><rect x="0.0648%" y="997" width="0.0166%" height="15" fill="rgb(220,122,19)" fg:x="94177964" fg:w="24046730"/><text x="0.3148%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34,343,656 samples, 0.02%)</title><rect x="0.0984%" y="533" width="0.0236%" height="15" fill="rgb(250,228,42)" fg:x="142840403" fg:w="34343656"/><text x="0.3484%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34,343,656 samples, 0.02%)</title><rect x="0.0984%" y="517" width="0.0236%" height="15" fill="rgb(240,193,28)" fg:x="142840403" fg:w="34343656"/><text x="0.3484%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (34,343,656 samples, 0.02%)</title><rect x="0.0984%" y="501" width="0.0236%" height="15" fill="rgb(216,20,37)" fg:x="142840403" fg:w="34343656"/><text x="0.3484%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34,343,656 samples, 0.02%)</title><rect x="0.0984%" y="485" width="0.0236%" height="15" fill="rgb(206,188,39)" fg:x="142840403" fg:w="34343656"/><text x="0.3484%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (27,595,432 samples, 0.02%)</title><rect x="0.1030%" y="469" width="0.0190%" height="15" fill="rgb(217,207,13)" fg:x="149588627" fg:w="27595432"/><text x="0.3530%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27,595,432 samples, 0.02%)</title><rect x="0.1030%" y="453" width="0.0190%" height="15" fill="rgb(231,73,38)" fg:x="149588627" fg:w="27595432"/><text x="0.3530%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (24,160,259 samples, 0.02%)</title><rect x="0.1054%" y="437" width="0.0166%" height="15" fill="rgb(225,20,46)" fg:x="153023800" fg:w="24160259"/><text x="0.3554%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15,674,412 samples, 0.01%)</title><rect x="0.1220%" y="501" width="0.0108%" height="15" fill="rgb(210,31,41)" fg:x="177184059" fg:w="15674412"/><text x="0.3720%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (15,674,412 samples, 0.01%)</title><rect x="0.1220%" y="485" width="0.0108%" height="15" fill="rgb(221,200,47)" fg:x="177184059" fg:w="15674412"/><text x="0.3720%" y="495.50"></text></g><g><title>&lt;rkl::models::Sequential&lt;T&gt; as core::clone::Clone&gt;::clone (42,084,389 samples, 0.03%)</title><rect x="0.1220%" y="533" width="0.0290%" height="15" fill="rgb(226,26,5)" fg:x="177184059" fg:w="42084389"/><text x="0.3720%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42,084,389 samples, 0.03%)</title><rect x="0.1220%" y="517" width="0.0290%" height="15" fill="rgb(249,33,26)" fg:x="177184059" fg:w="42084389"/><text x="0.3720%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="501" width="0.0182%" height="15" fill="rgb(235,183,28)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="485" width="0.0182%" height="15" fill="rgb(221,5,38)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="469" width="0.0182%" height="15" fill="rgb(247,18,42)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="479.50"></text></g><g><title>&lt;rkl::core::layers::Dense as core::clone::Clone&gt;::clone (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="453" width="0.0182%" height="15" fill="rgb(241,131,45)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="463.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="437" width="0.0182%" height="15" fill="rgb(249,31,29)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="447.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="421" width="0.0182%" height="15" fill="rgb(225,111,53)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="431.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="405" width="0.0182%" height="15" fill="rgb(238,160,17)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="389" width="0.0182%" height="15" fill="rgb(214,148,48)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="373" width="0.0182%" height="15" fill="rgb(232,36,49)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="357" width="0.0182%" height="15" fill="rgb(209,103,24)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="341" width="0.0182%" height="15" fill="rgb(229,88,8)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,409,977 samples, 0.02%)</title><rect x="0.1328%" y="325" width="0.0182%" height="15" fill="rgb(213,181,19)" fg:x="192858471" fg:w="26409977"/><text x="0.3828%" y="335.50"></text></g><g><title>__GI___libc_malloc (24,408,477 samples, 0.02%)</title><rect x="0.1510%" y="357" width="0.0168%" height="15" fill="rgb(254,191,54)" fg:x="219268448" fg:w="24408477"/><text x="0.4010%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28,009,766 samples, 0.02%)</title><rect x="0.1510%" y="469" width="0.0193%" height="15" fill="rgb(241,83,37)" fg:x="219268448" fg:w="28009766"/><text x="0.4010%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28,009,766 samples, 0.02%)</title><rect x="0.1510%" y="453" width="0.0193%" height="15" fill="rgb(233,36,39)" fg:x="219268448" fg:w="28009766"/><text x="0.4010%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (28,009,766 samples, 0.02%)</title><rect x="0.1510%" y="437" width="0.0193%" height="15" fill="rgb(226,3,54)" fg:x="219268448" fg:w="28009766"/><text x="0.4010%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (28,009,766 samples, 0.02%)</title><rect x="0.1510%" y="421" width="0.0193%" height="15" fill="rgb(245,192,40)" fg:x="219268448" fg:w="28009766"/><text x="0.4010%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28,009,766 samples, 0.02%)</title><rect x="0.1510%" y="405" width="0.0193%" height="15" fill="rgb(238,167,29)" fg:x="219268448" fg:w="28009766"/><text x="0.4010%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28,009,766 samples, 0.02%)</title><rect x="0.1510%" y="389" width="0.0193%" height="15" fill="rgb(232,182,51)" fg:x="219268448" fg:w="28009766"/><text x="0.4010%" y="399.50"></text></g><g><title>alloc::alloc::alloc (28,009,766 samples, 0.02%)</title><rect x="0.1510%" y="373" width="0.0193%" height="15" fill="rgb(231,60,39)" fg:x="219268448" fg:w="28009766"/><text x="0.4010%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (59,674,066 samples, 0.04%)</title><rect x="0.1510%" y="533" width="0.0411%" height="15" fill="rgb(208,69,12)" fg:x="219268448" fg:w="59674066"/><text x="0.4010%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59,674,066 samples, 0.04%)</title><rect x="0.1510%" y="517" width="0.0411%" height="15" fill="rgb(235,93,37)" fg:x="219268448" fg:w="59674066"/><text x="0.4010%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (59,674,066 samples, 0.04%)</title><rect x="0.1510%" y="501" width="0.0411%" height="15" fill="rgb(213,116,39)" fg:x="219268448" fg:w="59674066"/><text x="0.4010%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59,674,066 samples, 0.04%)</title><rect x="0.1510%" y="485" width="0.0411%" height="15" fill="rgb(222,207,29)" fg:x="219268448" fg:w="59674066"/><text x="0.4010%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (31,664,300 samples, 0.02%)</title><rect x="0.1703%" y="469" width="0.0218%" height="15" fill="rgb(206,96,30)" fg:x="247278214" fg:w="31664300"/><text x="0.4203%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (31,664,300 samples, 0.02%)</title><rect x="0.1703%" y="453" width="0.0218%" height="15" fill="rgb(218,138,4)" fg:x="247278214" fg:w="31664300"/><text x="0.4203%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (31,664,300 samples, 0.02%)</title><rect x="0.1703%" y="437" width="0.0218%" height="15" fill="rgb(250,191,14)" fg:x="247278214" fg:w="31664300"/><text x="0.4203%" y="447.50"></text></g><g><title>__GI___libc_free (21,441,617 samples, 0.01%)</title><rect x="0.1944%" y="389" width="0.0148%" height="15" fill="rgb(239,60,40)" fg:x="282351537" fg:w="21441617"/><text x="0.4444%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (24,768,664 samples, 0.02%)</title><rect x="0.1944%" y="533" width="0.0171%" height="15" fill="rgb(206,27,48)" fg:x="282351537" fg:w="24768664"/><text x="0.4444%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (24,768,664 samples, 0.02%)</title><rect x="0.1944%" y="517" width="0.0171%" height="15" fill="rgb(225,35,8)" fg:x="282351537" fg:w="24768664"/><text x="0.4444%" y="527.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (24,768,664 samples, 0.02%)</title><rect x="0.1944%" y="501" width="0.0171%" height="15" fill="rgb(250,213,24)" fg:x="282351537" fg:w="24768664"/><text x="0.4444%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (24,768,664 samples, 0.02%)</title><rect x="0.1944%" y="485" width="0.0171%" height="15" fill="rgb(247,123,22)" fg:x="282351537" fg:w="24768664"/><text x="0.4444%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (24,768,664 samples, 0.02%)</title><rect x="0.1944%" y="469" width="0.0171%" height="15" fill="rgb(231,138,38)" fg:x="282351537" fg:w="24768664"/><text x="0.4444%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,768,664 samples, 0.02%)</title><rect x="0.1944%" y="453" width="0.0171%" height="15" fill="rgb(231,145,46)" fg:x="282351537" fg:w="24768664"/><text x="0.4444%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (24,768,664 samples, 0.02%)</title><rect x="0.1944%" y="437" width="0.0171%" height="15" fill="rgb(251,118,11)" fg:x="282351537" fg:w="24768664"/><text x="0.4444%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24,768,664 samples, 0.02%)</title><rect x="0.1944%" y="421" width="0.0171%" height="15" fill="rgb(217,147,25)" fg:x="282351537" fg:w="24768664"/><text x="0.4444%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (24,768,664 samples, 0.02%)</title><rect x="0.1944%" y="405" width="0.0171%" height="15" fill="rgb(247,81,37)" fg:x="282351537" fg:w="24768664"/><text x="0.4444%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="501" width="0.0164%" height="15" fill="rgb(209,12,38)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rkl::core::layers::Dense]&gt; (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="485" width="0.0164%" height="15" fill="rgb(227,1,9)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;rkl::core::layers::Dense&gt; (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="469" width="0.0164%" height="15" fill="rgb(248,47,43)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="453" width="0.0164%" height="15" fill="rgb(221,10,30)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="437" width="0.0164%" height="15" fill="rgb(210,229,1)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="447.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="421" width="0.0164%" height="15" fill="rgb(222,148,37)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="405" width="0.0164%" height="15" fill="rgb(234,67,33)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="389" width="0.0164%" height="15" fill="rgb(247,98,35)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="373" width="0.0164%" height="15" fill="rgb(247,138,52)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="357" width="0.0164%" height="15" fill="rgb(213,79,30)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="341" width="0.0164%" height="15" fill="rgb(246,177,23)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="325" width="0.0164%" height="15" fill="rgb(230,62,27)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="335.50"></text></g><g><title>__GI___libc_free (23,876,360 samples, 0.02%)</title><rect x="0.2115%" y="309" width="0.0164%" height="15" fill="rgb(216,154,8)" fg:x="307120201" fg:w="23876360"/><text x="0.4615%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;&gt; (31,012,280 samples, 0.02%)</title><rect x="0.2115%" y="533" width="0.0214%" height="15" fill="rgb(244,35,45)" fg:x="307120201" fg:w="31012280"/><text x="0.4615%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rkl::core::layers::Dense&gt;&gt; (31,012,280 samples, 0.02%)</title><rect x="0.2115%" y="517" width="0.0214%" height="15" fill="rgb(251,115,12)" fg:x="307120201" fg:w="31012280"/><text x="0.4615%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (45,561,251 samples, 0.03%)</title><rect x="0.2423%" y="405" width="0.0314%" height="15" fill="rgb(240,54,50)" fg:x="351838749" fg:w="45561251"/><text x="0.4923%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (45,561,251 samples, 0.03%)</title><rect x="0.2423%" y="389" width="0.0314%" height="15" fill="rgb(233,84,52)" fg:x="351838749" fg:w="45561251"/><text x="0.4923%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (45,561,251 samples, 0.03%)</title><rect x="0.2423%" y="373" width="0.0314%" height="15" fill="rgb(207,117,47)" fg:x="351838749" fg:w="45561251"/><text x="0.4923%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (45,561,251 samples, 0.03%)</title><rect x="0.2423%" y="357" width="0.0314%" height="15" fill="rgb(249,43,39)" fg:x="351838749" fg:w="45561251"/><text x="0.4923%" y="367.50"></text></g><g><title>alloc::raw_vec::layout_array (35,400,570 samples, 0.02%)</title><rect x="0.2493%" y="341" width="0.0244%" height="15" fill="rgb(209,38,44)" fg:x="361999430" fg:w="35400570"/><text x="0.4993%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::repeat (35,400,570 samples, 0.02%)</title><rect x="0.2493%" y="325" width="0.0244%" height="15" fill="rgb(236,212,23)" fg:x="361999430" fg:w="35400570"/><text x="0.4993%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (35,400,570 samples, 0.02%)</title><rect x="0.2493%" y="309" width="0.0244%" height="15" fill="rgb(242,79,21)" fg:x="361999430" fg:w="35400570"/><text x="0.4993%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (35,400,570 samples, 0.02%)</title><rect x="0.2493%" y="293" width="0.0244%" height="15" fill="rgb(211,96,35)" fg:x="361999430" fg:w="35400570"/><text x="0.4993%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (35,400,570 samples, 0.02%)</title><rect x="0.2493%" y="277" width="0.0244%" height="15" fill="rgb(253,215,40)" fg:x="361999430" fg:w="35400570"/><text x="0.4993%" y="287.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (141,419,936 samples, 0.10%)</title><rect x="0.2423%" y="533" width="0.0974%" height="15" fill="rgb(211,81,21)" fg:x="351838749" fg:w="141419936"/><text x="0.4923%" y="543.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (141,419,936 samples, 0.10%)</title><rect x="0.2423%" y="517" width="0.0974%" height="15" fill="rgb(208,190,38)" fg:x="351838749" fg:w="141419936"/><text x="0.4923%" y="527.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (141,419,936 samples, 0.10%)</title><rect x="0.2423%" y="501" width="0.0974%" height="15" fill="rgb(235,213,38)" fg:x="351838749" fg:w="141419936"/><text x="0.4923%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (141,419,936 samples, 0.10%)</title><rect x="0.2423%" y="485" width="0.0974%" height="15" fill="rgb(237,122,38)" fg:x="351838749" fg:w="141419936"/><text x="0.4923%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (141,419,936 samples, 0.10%)</title><rect x="0.2423%" y="469" width="0.0974%" height="15" fill="rgb(244,218,35)" fg:x="351838749" fg:w="141419936"/><text x="0.4923%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (141,419,936 samples, 0.10%)</title><rect x="0.2423%" y="453" width="0.0974%" height="15" fill="rgb(240,68,47)" fg:x="351838749" fg:w="141419936"/><text x="0.4923%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (141,419,936 samples, 0.10%)</title><rect x="0.2423%" y="437" width="0.0974%" height="15" fill="rgb(210,16,53)" fg:x="351838749" fg:w="141419936"/><text x="0.4923%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (141,419,936 samples, 0.10%)</title><rect x="0.2423%" y="421" width="0.0974%" height="15" fill="rgb(235,124,12)" fg:x="351838749" fg:w="141419936"/><text x="0.4923%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (95,858,685 samples, 0.07%)</title><rect x="0.2736%" y="405" width="0.0660%" height="15" fill="rgb(224,169,11)" fg:x="397400000" fg:w="95858685"/><text x="0.5236%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (95,858,685 samples, 0.07%)</title><rect x="0.2736%" y="389" width="0.0660%" height="15" fill="rgb(250,166,2)" fg:x="397400000" fg:w="95858685"/><text x="0.5236%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (92,539,446 samples, 0.06%)</title><rect x="0.2759%" y="373" width="0.0637%" height="15" fill="rgb(242,216,29)" fg:x="400719239" fg:w="92539446"/><text x="0.5259%" y="383.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign (44,687,313 samples, 0.03%)</title><rect x="0.3445%" y="533" width="0.0308%" height="15" fill="rgb(230,116,27)" fg:x="500257934" fg:w="44687313"/><text x="0.5945%" y="543.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (41,137,031 samples, 0.03%)</title><rect x="0.3469%" y="517" width="0.0283%" height="15" fill="rgb(228,99,48)" fg:x="503808216" fg:w="41137031"/><text x="0.5969%" y="527.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign::_{{closure}} (17,588,456 samples, 0.01%)</title><rect x="0.3631%" y="501" width="0.0121%" height="15" fill="rgb(253,11,6)" fg:x="527356791" fg:w="17588456"/><text x="0.6131%" y="511.50"></text></g><g><title>core::clone::Clone::clone_from (17,588,456 samples, 0.01%)</title><rect x="0.3631%" y="485" width="0.0121%" height="15" fill="rgb(247,143,39)" fg:x="527356791" fg:w="17588456"/><text x="0.6131%" y="495.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Div&lt;B&gt; for &amp;ndarray::ArrayBase&lt;S,D&gt;&gt;::div (93,730,424 samples, 0.06%)</title><rect x="0.3801%" y="533" width="0.0645%" height="15" fill="rgb(236,97,10)" fg:x="551926040" fg:w="93730424"/><text x="0.6301%" y="543.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (93,730,424 samples, 0.06%)</title><rect x="0.3801%" y="517" width="0.0645%" height="15" fill="rgb(233,208,19)" fg:x="551926040" fg:w="93730424"/><text x="0.6301%" y="527.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (93,730,424 samples, 0.06%)</title><rect x="0.3801%" y="501" width="0.0645%" height="15" fill="rgb(216,164,2)" fg:x="551926040" fg:w="93730424"/><text x="0.6301%" y="511.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (93,730,424 samples, 0.06%)</title><rect x="0.3801%" y="485" width="0.0645%" height="15" fill="rgb(220,129,5)" fg:x="551926040" fg:w="93730424"/><text x="0.6301%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (90,397,311 samples, 0.06%)</title><rect x="0.3823%" y="469" width="0.0622%" height="15" fill="rgb(242,17,10)" fg:x="555259153" fg:w="90397311"/><text x="0.6323%" y="479.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (90,397,311 samples, 0.06%)</title><rect x="0.3823%" y="453" width="0.0622%" height="15" fill="rgb(242,107,0)" fg:x="555259153" fg:w="90397311"/><text x="0.6323%" y="463.50"></text></g><g><title>core::ptr::write (90,397,311 samples, 0.06%)</title><rect x="0.3823%" y="437" width="0.0622%" height="15" fill="rgb(251,28,31)" fg:x="555259153" fg:w="90397311"/><text x="0.6323%" y="447.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Sub&lt;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::sub (50,831,977 samples, 0.04%)</title><rect x="0.4446%" y="533" width="0.0350%" height="15" fill="rgb(233,223,10)" fg:x="645656464" fg:w="50831977"/><text x="0.6946%" y="543.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Sub&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::sub (40,277,024 samples, 0.03%)</title><rect x="0.4519%" y="517" width="0.0277%" height="15" fill="rgb(215,21,27)" fg:x="656211417" fg:w="40277024"/><text x="0.7019%" y="527.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (29,871,804 samples, 0.02%)</title><rect x="0.4590%" y="501" width="0.0206%" height="15" fill="rgb(232,23,21)" fg:x="666616637" fg:w="29871804"/><text x="0.7090%" y="511.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::clone_iopf::_{{closure}} (15,718,798 samples, 0.01%)</title><rect x="0.4688%" y="485" width="0.0108%" height="15" fill="rgb(244,5,23)" fg:x="680769643" fg:w="15718798"/><text x="0.7188%" y="495.50"></text></g><g><title>__GI___libc_free (17,782,654 samples, 0.01%)</title><rect x="0.4904%" y="373" width="0.0122%" height="15" fill="rgb(226,81,46)" fg:x="712111629" fg:w="17782654"/><text x="0.7404%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (24,719,117 samples, 0.02%)</title><rect x="0.4879%" y="517" width="0.0170%" height="15" fill="rgb(247,70,30)" fg:x="708582791" fg:w="24719117"/><text x="0.7379%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (24,719,117 samples, 0.02%)</title><rect x="0.4879%" y="501" width="0.0170%" height="15" fill="rgb(212,68,19)" fg:x="708582791" fg:w="24719117"/><text x="0.7379%" y="511.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (24,719,117 samples, 0.02%)</title><rect x="0.4879%" y="485" width="0.0170%" height="15" fill="rgb(240,187,13)" fg:x="708582791" fg:w="24719117"/><text x="0.7379%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (24,719,117 samples, 0.02%)</title><rect x="0.4879%" y="469" width="0.0170%" height="15" fill="rgb(223,113,26)" fg:x="708582791" fg:w="24719117"/><text x="0.7379%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (24,719,117 samples, 0.02%)</title><rect x="0.4879%" y="453" width="0.0170%" height="15" fill="rgb(206,192,2)" fg:x="708582791" fg:w="24719117"/><text x="0.7379%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,719,117 samples, 0.02%)</title><rect x="0.4879%" y="437" width="0.0170%" height="15" fill="rgb(241,108,4)" fg:x="708582791" fg:w="24719117"/><text x="0.7379%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (24,719,117 samples, 0.02%)</title><rect x="0.4879%" y="421" width="0.0170%" height="15" fill="rgb(247,173,49)" fg:x="708582791" fg:w="24719117"/><text x="0.7379%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24,719,117 samples, 0.02%)</title><rect x="0.4879%" y="405" width="0.0170%" height="15" fill="rgb(224,114,35)" fg:x="708582791" fg:w="24719117"/><text x="0.7379%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (24,719,117 samples, 0.02%)</title><rect x="0.4879%" y="389" width="0.0170%" height="15" fill="rgb(245,159,27)" fg:x="708582791" fg:w="24719117"/><text x="0.7379%" y="399.50"></text></g><g><title>__GI___libc_free (205,837,029 samples, 0.14%)</title><rect x="0.5228%" y="357" width="0.1417%" height="15" fill="rgb(245,172,44)" fg:x="759279429" fg:w="205837029"/><text x="0.7728%" y="367.50"></text></g><g><title>systrim (202,321,068 samples, 0.14%)</title><rect x="0.5253%" y="341" width="0.1393%" height="15" fill="rgb(236,23,11)" fg:x="762795390" fg:w="202321068"/><text x="0.7753%" y="351.50"></text></g><g><title>__glibc_morecore (202,321,068 samples, 0.14%)</title><rect x="0.5253%" y="325" width="0.1393%" height="15" fill="rgb(205,117,38)" fg:x="762795390" fg:w="202321068"/><text x="0.7753%" y="335.50"></text></g><g><title>__GI___sbrk (202,321,068 samples, 0.14%)</title><rect x="0.5253%" y="309" width="0.1393%" height="15" fill="rgb(237,72,25)" fg:x="762795390" fg:w="202321068"/><text x="0.7753%" y="319.50"></text></g><g><title>__brk (202,321,068 samples, 0.14%)</title><rect x="0.5253%" y="293" width="0.1393%" height="15" fill="rgb(244,70,9)" fg:x="762795390" fg:w="202321068"/><text x="0.7753%" y="303.50"></text></g><g><title>[unknown] (202,321,068 samples, 0.14%)</title><rect x="0.5253%" y="277" width="0.1393%" height="15" fill="rgb(217,125,39)" fg:x="762795390" fg:w="202321068"/><text x="0.7753%" y="287.50"></text></g><g><title>[unknown] (202,321,068 samples, 0.14%)</title><rect x="0.5253%" y="261" width="0.1393%" height="15" fill="rgb(235,36,10)" fg:x="762795390" fg:w="202321068"/><text x="0.7753%" y="271.50"></text></g><g><title>[unknown] (202,321,068 samples, 0.14%)</title><rect x="0.5253%" y="245" width="0.1393%" height="15" fill="rgb(251,123,47)" fg:x="762795390" fg:w="202321068"/><text x="0.7753%" y="255.50"></text></g><g><title>[unknown] (202,321,068 samples, 0.14%)</title><rect x="0.5253%" y="229" width="0.1393%" height="15" fill="rgb(221,13,13)" fg:x="762795390" fg:w="202321068"/><text x="0.7753%" y="239.50"></text></g><g><title>[unknown] (202,321,068 samples, 0.14%)</title><rect x="0.5253%" y="213" width="0.1393%" height="15" fill="rgb(238,131,9)" fg:x="762795390" fg:w="202321068"/><text x="0.7753%" y="223.50"></text></g><g><title>[unknown] (198,733,478 samples, 0.14%)</title><rect x="0.5277%" y="197" width="0.1368%" height="15" fill="rgb(211,50,8)" fg:x="766382980" fg:w="198733478"/><text x="0.7777%" y="207.50"></text></g><g><title>[unknown] (198,733,478 samples, 0.14%)</title><rect x="0.5277%" y="181" width="0.1368%" height="15" fill="rgb(245,182,24)" fg:x="766382980" fg:w="198733478"/><text x="0.7777%" y="191.50"></text></g><g><title>[unknown] (184,519,156 samples, 0.13%)</title><rect x="0.5375%" y="165" width="0.1271%" height="15" fill="rgb(242,14,37)" fg:x="780597302" fg:w="184519156"/><text x="0.7875%" y="175.50"></text></g><g><title>[unknown] (169,915,388 samples, 0.12%)</title><rect x="0.5476%" y="149" width="0.1170%" height="15" fill="rgb(246,228,12)" fg:x="795201070" fg:w="169915388"/><text x="0.7976%" y="159.50"></text></g><g><title>[unknown] (162,807,703 samples, 0.11%)</title><rect x="0.5525%" y="133" width="0.1121%" height="15" fill="rgb(213,55,15)" fg:x="802308755" fg:w="162807703"/><text x="0.8025%" y="143.50"></text></g><g><title>[unknown] (145,112,381 samples, 0.10%)</title><rect x="0.5646%" y="117" width="0.0999%" height="15" fill="rgb(209,9,3)" fg:x="820004077" fg:w="145112381"/><text x="0.8146%" y="127.50"></text></g><g><title>[unknown] (134,649,387 samples, 0.09%)</title><rect x="0.5719%" y="101" width="0.0927%" height="15" fill="rgb(230,59,30)" fg:x="830467071" fg:w="134649387"/><text x="0.8219%" y="111.50"></text></g><g><title>[unknown] (77,729,534 samples, 0.05%)</title><rect x="0.6110%" y="85" width="0.0535%" height="15" fill="rgb(209,121,21)" fg:x="887386924" fg:w="77729534"/><text x="0.8610%" y="95.50"></text></g><g><title>[unknown] (53,073,395 samples, 0.04%)</title><rect x="0.6280%" y="69" width="0.0365%" height="15" fill="rgb(220,109,13)" fg:x="912043063" fg:w="53073395"/><text x="0.8780%" y="79.50"></text></g><g><title>[unknown] (21,145,697 samples, 0.01%)</title><rect x="0.6500%" y="53" width="0.0146%" height="15" fill="rgb(232,18,1)" fg:x="943970761" fg:w="21145697"/><text x="0.9000%" y="63.50"></text></g><g><title>[unknown] (17,574,208 samples, 0.01%)</title><rect x="0.6525%" y="37" width="0.0121%" height="15" fill="rgb(215,41,42)" fg:x="947542250" fg:w="17574208"/><text x="0.9025%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (209,356,366 samples, 0.14%)</title><rect x="0.5228%" y="501" width="0.1442%" height="15" fill="rgb(224,123,36)" fg:x="759279429" fg:w="209356366"/><text x="0.7728%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (209,356,366 samples, 0.14%)</title><rect x="0.5228%" y="485" width="0.1442%" height="15" fill="rgb(240,125,3)" fg:x="759279429" fg:w="209356366"/><text x="0.7728%" y="495.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (209,356,366 samples, 0.14%)</title><rect x="0.5228%" y="469" width="0.1442%" height="15" fill="rgb(205,98,50)" fg:x="759279429" fg:w="209356366"/><text x="0.7728%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (209,356,366 samples, 0.14%)</title><rect x="0.5228%" y="453" width="0.1442%" height="15" fill="rgb(205,185,37)" fg:x="759279429" fg:w="209356366"/><text x="0.7728%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (209,356,366 samples, 0.14%)</title><rect x="0.5228%" y="437" width="0.1442%" height="15" fill="rgb(238,207,15)" fg:x="759279429" fg:w="209356366"/><text x="0.7728%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (209,356,366 samples, 0.14%)</title><rect x="0.5228%" y="421" width="0.1442%" height="15" fill="rgb(213,199,42)" fg:x="759279429" fg:w="209356366"/><text x="0.7728%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (209,356,366 samples, 0.14%)</title><rect x="0.5228%" y="405" width="0.1442%" height="15" fill="rgb(235,201,11)" fg:x="759279429" fg:w="209356366"/><text x="0.7728%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (209,356,366 samples, 0.14%)</title><rect x="0.5228%" y="389" width="0.1442%" height="15" fill="rgb(207,46,11)" fg:x="759279429" fg:w="209356366"/><text x="0.7728%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (209,356,366 samples, 0.14%)</title><rect x="0.5228%" y="373" width="0.1442%" height="15" fill="rgb(241,35,35)" fg:x="759279429" fg:w="209356366"/><text x="0.7728%" y="383.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (1,486,606,010 samples, 1.02%)</title><rect x="0.6694%" y="485" width="1.0237%" height="15" fill="rgb(243,32,47)" fg:x="972178116" fg:w="1486606010"/><text x="0.9194%" y="495.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (1,483,209,011 samples, 1.02%)</title><rect x="0.6718%" y="469" width="1.0213%" height="15" fill="rgb(247,202,23)" fg:x="975575115" fg:w="1483209011"/><text x="0.9218%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,483,209,011 samples, 1.02%)</title><rect x="0.6718%" y="453" width="1.0213%" height="15" fill="rgb(219,102,11)" fg:x="975575115" fg:w="1483209011"/><text x="0.9218%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,483,209,011 samples, 1.02%)</title><rect x="0.6718%" y="437" width="1.0213%" height="15" fill="rgb(243,110,44)" fg:x="975575115" fg:w="1483209011"/><text x="0.9218%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,483,209,011 samples, 1.02%)</title><rect x="0.6718%" y="421" width="1.0213%" height="15" fill="rgb(222,74,54)" fg:x="975575115" fg:w="1483209011"/><text x="0.9218%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1,483,209,011 samples, 1.02%)</title><rect x="0.6718%" y="405" width="1.0213%" height="15" fill="rgb(216,99,12)" fg:x="975575115" fg:w="1483209011"/><text x="0.9218%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,483,209,011 samples, 1.02%)</title><rect x="0.6718%" y="389" width="1.0213%" height="15" fill="rgb(226,22,26)" fg:x="975575115" fg:w="1483209011"/><text x="0.9218%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,472,681,160 samples, 1.01%)</title><rect x="0.6790%" y="373" width="1.0141%" height="15" fill="rgb(217,163,10)" fg:x="986102966" fg:w="1472681160"/><text x="0.9290%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,472,681,160 samples, 1.01%)</title><rect x="0.6790%" y="357" width="1.0141%" height="15" fill="rgb(213,25,53)" fg:x="986102966" fg:w="1472681160"/><text x="0.9290%" y="367.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,469,092,756 samples, 1.01%)</title><rect x="0.6815%" y="341" width="1.0116%" height="15" fill="rgb(252,105,26)" fg:x="989691370" fg:w="1469092756"/><text x="0.9315%" y="351.50"></text></g><g><title>[unknown] (191,619,096 samples, 0.13%)</title><rect x="1.5611%" y="325" width="0.1319%" height="15" fill="rgb(220,39,43)" fg:x="2267165030" fg:w="191619096"/><text x="1.8111%" y="335.50"></text></g><g><title>[unknown] (177,664,654 samples, 0.12%)</title><rect x="1.5708%" y="309" width="0.1223%" height="15" fill="rgb(229,68,48)" fg:x="2281119472" fg:w="177664654"/><text x="1.8208%" y="319.50"></text></g><g><title>[unknown] (174,091,701 samples, 0.12%)</title><rect x="1.5732%" y="293" width="0.1199%" height="15" fill="rgb(252,8,32)" fg:x="2284692425" fg:w="174091701"/><text x="1.8232%" y="303.50"></text></g><g><title>[unknown] (159,899,975 samples, 0.11%)</title><rect x="1.5830%" y="277" width="0.1101%" height="15" fill="rgb(223,20,43)" fg:x="2298884151" fg:w="159899975"/><text x="1.8330%" y="287.50"></text></g><g><title>[unknown] (138,651,953 samples, 0.10%)</title><rect x="1.5976%" y="261" width="0.0955%" height="15" fill="rgb(229,81,49)" fg:x="2320132173" fg:w="138651953"/><text x="1.8476%" y="271.50"></text></g><g><title>[unknown] (131,549,122 samples, 0.09%)</title><rect x="1.6025%" y="245" width="0.0906%" height="15" fill="rgb(236,28,36)" fg:x="2327235004" fg:w="131549122"/><text x="1.8525%" y="255.50"></text></g><g><title>[unknown] (124,446,494 samples, 0.09%)</title><rect x="1.6074%" y="229" width="0.0857%" height="15" fill="rgb(249,185,26)" fg:x="2334337632" fg:w="124446494"/><text x="1.8574%" y="239.50"></text></g><g><title>[unknown] (102,137,285 samples, 0.07%)</title><rect x="1.6228%" y="213" width="0.0703%" height="15" fill="rgb(249,174,33)" fg:x="2356646841" fg:w="102137285"/><text x="1.8728%" y="223.50"></text></g><g><title>[unknown] (91,559,264 samples, 0.06%)</title><rect x="1.6300%" y="197" width="0.0630%" height="15" fill="rgb(233,201,37)" fg:x="2367224862" fg:w="91559264"/><text x="1.8800%" y="207.50"></text></g><g><title>[unknown] (73,185,604 samples, 0.05%)</title><rect x="1.6427%" y="181" width="0.0504%" height="15" fill="rgb(221,78,26)" fg:x="2385598522" fg:w="73185604"/><text x="1.8927%" y="191.50"></text></g><g><title>[unknown] (63,617,480 samples, 0.04%)</title><rect x="1.6493%" y="165" width="0.0438%" height="15" fill="rgb(250,127,30)" fg:x="2395166646" fg:w="63617480"/><text x="1.8993%" y="175.50"></text></g><g><title>[unknown] (53,007,871 samples, 0.04%)</title><rect x="1.6566%" y="149" width="0.0365%" height="15" fill="rgb(230,49,44)" fg:x="2405776255" fg:w="53007871"/><text x="1.9066%" y="159.50"></text></g><g><title>[unknown] (24,725,075 samples, 0.02%)</title><rect x="1.6761%" y="133" width="0.0170%" height="15" fill="rgb(229,67,23)" fg:x="2434059051" fg:w="24725075"/><text x="1.9261%" y="143.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (1,493,688,618 samples, 1.03%)</title><rect x="0.6670%" y="501" width="1.0285%" height="15" fill="rgb(249,83,47)" fg:x="968635795" fg:w="1493688618"/><text x="0.9170%" y="511.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (465,595,395 samples, 0.32%)</title><rect x="2.4494%" y="229" width="0.3206%" height="15" fill="rgb(215,43,3)" fg:x="3557111052" fg:w="465595395"/><text x="2.6994%" y="239.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::&lt;impl core::ops::arith::Add&lt;&amp;ndarray::ArrayBase&lt;S2,E&gt;&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::add (1,915,228,008 samples, 1.32%)</title><rect x="1.6955%" y="501" width="1.3188%" height="15" fill="rgb(238,154,13)" fg:x="2462324413" fg:w="1915228008"/><text x="1.9455%" y="511.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (1,881,682,950 samples, 1.30%)</title><rect x="1.7186%" y="485" width="1.2957%" height="15" fill="rgb(219,56,2)" fg:x="2495869471" fg:w="1881682950"/><text x="1.9686%" y="495.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (1,881,682,950 samples, 1.30%)</title><rect x="1.7186%" y="469" width="1.2957%" height="15" fill="rgb(233,0,4)" fg:x="2495869471" fg:w="1881682950"/><text x="1.9686%" y="479.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (1,881,682,950 samples, 1.30%)</title><rect x="1.7186%" y="453" width="1.2957%" height="15" fill="rgb(235,30,7)" fg:x="2495869471" fg:w="1881682950"/><text x="1.9686%" y="463.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (1,881,682,950 samples, 1.30%)</title><rect x="1.7186%" y="437" width="1.2957%" height="15" fill="rgb(250,79,13)" fg:x="2495869471" fg:w="1881682950"/><text x="1.9686%" y="447.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (1,881,682,950 samples, 1.30%)</title><rect x="1.7186%" y="421" width="1.2957%" height="15" fill="rgb(211,146,34)" fg:x="2495869471" fg:w="1881682950"/><text x="1.9686%" y="431.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (1,881,682,950 samples, 1.30%)</title><rect x="1.7186%" y="405" width="1.2957%" height="15" fill="rgb(228,22,38)" fg:x="2495869471" fg:w="1881682950"/><text x="1.9686%" y="415.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (1,881,682,950 samples, 1.30%)</title><rect x="1.7186%" y="389" width="1.2957%" height="15" fill="rgb(235,168,5)" fg:x="2495869471" fg:w="1881682950"/><text x="1.9686%" y="399.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (1,744,756,799 samples, 1.20%)</title><rect x="1.8129%" y="373" width="1.2014%" height="15" fill="rgb(221,155,16)" fg:x="2632795622" fg:w="1744756799"/><text x="2.0629%" y="383.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (1,744,756,799 samples, 1.20%)</title><rect x="1.8129%" y="357" width="1.2014%" height="15" fill="rgb(215,215,53)" fg:x="2632795622" fg:w="1744756799"/><text x="2.0629%" y="367.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (1,744,756,799 samples, 1.20%)</title><rect x="1.8129%" y="341" width="1.2014%" height="15" fill="rgb(223,4,10)" fg:x="2632795622" fg:w="1744756799"/><text x="2.0629%" y="351.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (1,744,756,799 samples, 1.20%)</title><rect x="1.8129%" y="325" width="1.2014%" height="15" fill="rgb(234,103,6)" fg:x="2632795622" fg:w="1744756799"/><text x="2.0629%" y="335.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_contiguous (1,744,756,799 samples, 1.20%)</title><rect x="1.8129%" y="309" width="1.2014%" height="15" fill="rgb(227,97,0)" fg:x="2632795622" fg:w="1744756799"/><text x="2.0629%" y="319.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (1,744,756,799 samples, 1.20%)</title><rect x="1.8129%" y="293" width="1.2014%" height="15" fill="rgb(234,150,53)" fg:x="2632795622" fg:w="1744756799"/><text x="2.0629%" y="303.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (1,434,647,058 samples, 0.99%)</title><rect x="2.0265%" y="277" width="0.9879%" height="15" fill="rgb(228,201,54)" fg:x="2942905363" fg:w="1434647058"/><text x="2.2765%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,434,647,058 samples, 0.99%)</title><rect x="2.0265%" y="261" width="0.9879%" height="15" fill="rgb(222,22,37)" fg:x="2942905363" fg:w="1434647058"/><text x="2.2765%" y="271.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::clone_iopf::_{{closure}} (1,246,616,424 samples, 0.86%)</title><rect x="2.1559%" y="245" width="0.8584%" height="15" fill="rgb(237,53,32)" fg:x="3130935997" fg:w="1246616424"/><text x="2.4059%" y="255.50"></text></g><g><title>core::ops::function::Fn::call (354,845,974 samples, 0.24%)</title><rect x="2.7700%" y="229" width="0.2443%" height="15" fill="rgb(233,25,53)" fg:x="4022706447" fg:w="354845974"/><text x="3.0200%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (354,845,974 samples, 0.24%)</title><rect x="2.7700%" y="213" width="0.2443%" height="15" fill="rgb(210,40,34)" fg:x="4022706447" fg:w="354845974"/><text x="3.0200%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (44,136,901 samples, 0.03%)</title><rect x="3.0168%" y="469" width="0.0304%" height="15" fill="rgb(241,220,44)" fg:x="4381119475" fg:w="44136901"/><text x="3.2668%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44,136,901 samples, 0.03%)</title><rect x="3.0168%" y="453" width="0.0304%" height="15" fill="rgb(235,28,35)" fg:x="4381119475" fg:w="44136901"/><text x="3.2668%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44,136,901 samples, 0.03%)</title><rect x="3.0168%" y="437" width="0.0304%" height="15" fill="rgb(210,56,17)" fg:x="4381119475" fg:w="44136901"/><text x="3.2668%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (44,136,901 samples, 0.03%)</title><rect x="3.0168%" y="421" width="0.0304%" height="15" fill="rgb(224,130,29)" fg:x="4381119475" fg:w="44136901"/><text x="3.2668%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (44,136,901 samples, 0.03%)</title><rect x="3.0168%" y="405" width="0.0304%" height="15" fill="rgb(235,212,8)" fg:x="4381119475" fg:w="44136901"/><text x="3.2668%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37,159,771 samples, 0.03%)</title><rect x="3.0216%" y="389" width="0.0256%" height="15" fill="rgb(223,33,50)" fg:x="4388096605" fg:w="37159771"/><text x="3.2716%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37,159,771 samples, 0.03%)</title><rect x="3.0216%" y="373" width="0.0256%" height="15" fill="rgb(219,149,13)" fg:x="4388096605" fg:w="37159771"/><text x="3.2716%" y="383.50"></text></g><g><title>alloc::alloc::alloc (37,159,771 samples, 0.03%)</title><rect x="3.0216%" y="357" width="0.0256%" height="15" fill="rgb(250,156,29)" fg:x="4388096605" fg:w="37159771"/><text x="3.2716%" y="367.50"></text></g><g><title>__GI___libc_malloc (37,159,771 samples, 0.03%)</title><rect x="3.0216%" y="341" width="0.0256%" height="15" fill="rgb(216,193,19)" fg:x="4388096605" fg:w="37159771"/><text x="3.2716%" y="351.50"></text></g><g><title>_int_malloc (37,159,771 samples, 0.03%)</title><rect x="3.0216%" y="325" width="0.0256%" height="15" fill="rgb(216,135,14)" fg:x="4388096605" fg:w="37159771"/><text x="3.2716%" y="335.50"></text></g><g><title>sysmalloc (17,789,306 samples, 0.01%)</title><rect x="3.0349%" y="309" width="0.0122%" height="15" fill="rgb(241,47,5)" fg:x="4407467070" fg:w="17789306"/><text x="3.2849%" y="319.50"></text></g><g><title>matrixmultiply::gemm::make_packing_buffer (20,752,979 samples, 0.01%)</title><rect x="3.0748%" y="437" width="0.0143%" height="15" fill="rgb(233,42,35)" fg:x="4465401900" fg:w="20752979"/><text x="3.3248%" y="447.50"></text></g><g><title>matrixmultiply::aligned_alloc::Alloc&lt;T&gt;::new (20,752,979 samples, 0.01%)</title><rect x="3.0748%" y="421" width="0.0143%" height="15" fill="rgb(231,13,6)" fg:x="4465401900" fg:w="20752979"/><text x="3.3248%" y="431.50"></text></g><g><title>alloc::alloc::alloc (20,752,979 samples, 0.01%)</title><rect x="3.0748%" y="405" width="0.0143%" height="15" fill="rgb(207,181,40)" fg:x="4465401900" fg:w="20752979"/><text x="3.3248%" y="415.50"></text></g><g><title>__rdl_alloc (20,752,979 samples, 0.01%)</title><rect x="3.0748%" y="389" width="0.0143%" height="15" fill="rgb(254,173,49)" fg:x="4465401900" fg:w="20752979"/><text x="3.3248%" y="399.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (20,752,979 samples, 0.01%)</title><rect x="3.0748%" y="373" width="0.0143%" height="15" fill="rgb(221,1,38)" fg:x="4465401900" fg:w="20752979"/><text x="3.3248%" y="383.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (20,752,979 samples, 0.01%)</title><rect x="3.0748%" y="357" width="0.0143%" height="15" fill="rgb(206,124,46)" fg:x="4465401900" fg:w="20752979"/><text x="3.3248%" y="367.50"></text></g><g><title>__posix_memalign (20,752,979 samples, 0.01%)</title><rect x="3.0748%" y="341" width="0.0143%" height="15" fill="rgb(249,21,11)" fg:x="4465401900" fg:w="20752979"/><text x="3.3248%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30,923,329 samples, 0.02%)</title><rect x="3.0963%" y="421" width="0.0213%" height="15" fill="rgb(222,201,40)" fg:x="4496614759" fg:w="30923329"/><text x="3.3463%" y="431.50"></text></g><g><title>matrixmultiply::gemm::pack (47,770,069 samples, 0.03%)</title><rect x="3.0891%" y="437" width="0.0329%" height="15" fill="rgb(235,61,29)" fg:x="4486154879" fg:w="47770069"/><text x="3.3391%" y="447.50"></text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (89,768,720 samples, 0.06%)</title><rect x="3.2152%" y="373" width="0.0618%" height="15" fill="rgb(219,207,3)" fg:x="4669276059" fg:w="89768720"/><text x="3.4652%" y="383.50"></text></g><g><title>core::cmp::min (20,771,024 samples, 0.01%)</title><rect x="3.2627%" y="357" width="0.0143%" height="15" fill="rgb(222,56,46)" fg:x="4738273755" fg:w="20771024"/><text x="3.5127%" y="367.50"></text></g><g><title>core::cmp::Ord::min (20,771,024 samples, 0.01%)</title><rect x="3.2627%" y="341" width="0.0143%" height="15" fill="rgb(239,76,54)" fg:x="4738273755" fg:w="20771024"/><text x="3.5127%" y="351.50"></text></g><g><title>core::cmp::min_by (20,771,024 samples, 0.01%)</title><rect x="3.2627%" y="325" width="0.0143%" height="15" fill="rgb(231,124,27)" fg:x="4738273755" fg:w="20771024"/><text x="3.5127%" y="335.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (3,902,738,574 samples, 2.69%)</title><rect x="4.3012%" y="309" width="2.6874%" height="15" fill="rgb(249,195,6)" fg:x="6246379067" fg:w="3902738574"/><text x="4.5512%" y="319.50">&lt;m..</text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (3,902,738,574 samples, 2.69%)</title><rect x="4.3012%" y="293" width="2.6874%" height="15" fill="rgb(237,174,47)" fg:x="6246379067" fg:w="3902738574"/><text x="4.5512%" y="303.50">co..</text></g><g><title>[unknown] (20,875,664 samples, 0.01%)</title><rect x="6.9742%" y="277" width="0.0144%" height="15" fill="rgb(206,201,31)" fg:x="10128241977" fg:w="20875664"/><text x="7.2242%" y="287.50"></text></g><g><title>[unknown] (20,875,664 samples, 0.01%)</title><rect x="6.9742%" y="261" width="0.0144%" height="15" fill="rgb(231,57,52)" fg:x="10128241977" fg:w="20875664"/><text x="7.2242%" y="271.50"></text></g><g><title>[unknown] (20,875,664 samples, 0.01%)</title><rect x="6.9742%" y="245" width="0.0144%" height="15" fill="rgb(248,177,22)" fg:x="10128241977" fg:w="20875664"/><text x="7.2242%" y="255.50"></text></g><g><title>[unknown] (20,875,664 samples, 0.01%)</title><rect x="6.9742%" y="229" width="0.0144%" height="15" fill="rgb(215,211,37)" fg:x="10128241977" fg:w="20875664"/><text x="7.2242%" y="239.50"></text></g><g><title>[unknown] (20,875,664 samples, 0.01%)</title><rect x="6.9742%" y="213" width="0.0144%" height="15" fill="rgb(241,128,51)" fg:x="10128241977" fg:w="20875664"/><text x="7.2242%" y="223.50"></text></g><g><title>[unknown] (20,875,664 samples, 0.01%)</title><rect x="6.9742%" y="197" width="0.0144%" height="15" fill="rgb(227,165,31)" fg:x="10128241977" fg:w="20875664"/><text x="7.2242%" y="207.50"></text></g><g><title>[unknown] (20,875,664 samples, 0.01%)</title><rect x="6.9742%" y="181" width="0.0144%" height="15" fill="rgb(228,167,24)" fg:x="10128241977" fg:w="20875664"/><text x="7.2242%" y="191.50"></text></g><g><title>[unknown] (20,875,664 samples, 0.01%)</title><rect x="6.9742%" y="165" width="0.0144%" height="15" fill="rgb(228,143,12)" fg:x="10128241977" fg:w="20875664"/><text x="7.2242%" y="175.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_broadcast_sd (28,533,906 samples, 0.02%)</title><rect x="6.9910%" y="309" width="0.0196%" height="15" fill="rgb(249,149,8)" fg:x="10152669486" fg:w="28533906"/><text x="7.2410%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_pd (28,533,906 samples, 0.02%)</title><rect x="6.9910%" y="293" width="0.0196%" height="15" fill="rgb(243,35,44)" fg:x="10152669486" fg:w="28533906"/><text x="7.2410%" y="303.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_pd (28,533,906 samples, 0.02%)</title><rect x="6.9910%" y="277" width="0.0196%" height="15" fill="rgb(246,89,9)" fg:x="10152669486" fg:w="28533906"/><text x="7.2410%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (955,729,994 samples, 0.66%)</title><rect x="7.0107%" y="309" width="0.6581%" height="15" fill="rgb(233,213,13)" fg:x="10181203392" fg:w="955729994"/><text x="7.2607%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (2,549,435,043 samples, 1.76%)</title><rect x="7.6688%" y="309" width="1.7555%" height="15" fill="rgb(233,141,41)" fg:x="11136933386" fg:w="2549435043"/><text x="7.9188%" y="319.50"></text></g><g><title>[unknown] (20,646,314 samples, 0.01%)</title><rect x="9.4101%" y="293" width="0.0142%" height="15" fill="rgb(239,167,4)" fg:x="13665722115" fg:w="20646314"/><text x="9.6601%" y="303.50"></text></g><g><title>[unknown] (20,646,314 samples, 0.01%)</title><rect x="9.4101%" y="277" width="0.0142%" height="15" fill="rgb(209,217,16)" fg:x="13665722115" fg:w="20646314"/><text x="9.6601%" y="287.50"></text></g><g><title>[unknown] (20,646,314 samples, 0.01%)</title><rect x="9.4101%" y="261" width="0.0142%" height="15" fill="rgb(219,88,35)" fg:x="13665722115" fg:w="20646314"/><text x="9.6601%" y="271.50"></text></g><g><title>[unknown] (17,096,146 samples, 0.01%)</title><rect x="9.4125%" y="245" width="0.0118%" height="15" fill="rgb(220,193,23)" fg:x="13669272283" fg:w="17096146"/><text x="9.6625%" y="255.50"></text></g><g><title>[unknown] (17,096,146 samples, 0.01%)</title><rect x="9.4125%" y="229" width="0.0118%" height="15" fill="rgb(230,90,52)" fg:x="13669272283" fg:w="17096146"/><text x="9.6625%" y="239.50"></text></g><g><title>[unknown] (17,096,146 samples, 0.01%)</title><rect x="9.4125%" y="213" width="0.0118%" height="15" fill="rgb(252,106,19)" fg:x="13669272283" fg:w="17096146"/><text x="9.6625%" y="223.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (368,532,737 samples, 0.25%)</title><rect x="9.4243%" y="309" width="0.2538%" height="15" fill="rgb(206,74,20)" fg:x="13686368429" fg:w="368532737"/><text x="9.6743%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (60,316,506 samples, 0.04%)</title><rect x="9.6781%" y="309" width="0.0415%" height="15" fill="rgb(230,138,44)" fg:x="14054901166" fg:w="60316506"/><text x="9.9281%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (60,316,506 samples, 0.04%)</title><rect x="9.6781%" y="293" width="0.0415%" height="15" fill="rgb(235,182,43)" fg:x="14054901166" fg:w="60316506"/><text x="9.9281%" y="303.50"></text></g><g><title>core::ptr::write_unaligned (60,316,506 samples, 0.04%)</title><rect x="9.6781%" y="277" width="0.0415%" height="15" fill="rgb(242,16,51)" fg:x="14054901166" fg:w="60316506"/><text x="9.9281%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (60,316,506 samples, 0.04%)</title><rect x="9.6781%" y="261" width="0.0415%" height="15" fill="rgb(248,9,4)" fg:x="14054901166" fg:w="60316506"/><text x="9.9281%" y="271.50"></text></g><g><title>[unknown] (36,982,834 samples, 0.03%)</title><rect x="9.6941%" y="245" width="0.0255%" height="15" fill="rgb(210,31,22)" fg:x="14078234838" fg:w="36982834"/><text x="9.9441%" y="255.50"></text></g><g><title>[unknown] (33,391,728 samples, 0.02%)</title><rect x="9.6966%" y="229" width="0.0230%" height="15" fill="rgb(239,54,39)" fg:x="14081825944" fg:w="33391728"/><text x="9.9466%" y="239.50"></text></g><g><title>[unknown] (29,906,482 samples, 0.02%)</title><rect x="9.6990%" y="213" width="0.0206%" height="15" fill="rgb(230,99,41)" fg:x="14085311190" fg:w="29906482"/><text x="9.9490%" y="223.50"></text></g><g><title>[unknown] (29,906,482 samples, 0.02%)</title><rect x="9.6990%" y="197" width="0.0206%" height="15" fill="rgb(253,106,12)" fg:x="14085311190" fg:w="29906482"/><text x="9.9490%" y="207.50"></text></g><g><title>[unknown] (29,906,482 samples, 0.02%)</title><rect x="9.6990%" y="181" width="0.0206%" height="15" fill="rgb(213,46,41)" fg:x="14085311190" fg:w="29906482"/><text x="9.9490%" y="191.50"></text></g><g><title>[unknown] (22,765,084 samples, 0.02%)</title><rect x="9.7039%" y="165" width="0.0157%" height="15" fill="rgb(215,133,35)" fg:x="14092452588" fg:w="22765084"/><text x="9.9539%" y="175.50"></text></g><g><title>[unknown] (22,765,084 samples, 0.02%)</title><rect x="9.7039%" y="149" width="0.0157%" height="15" fill="rgb(213,28,5)" fg:x="14092452588" fg:w="22765084"/><text x="9.9539%" y="159.50"></text></g><g><title>[unknown] (22,765,084 samples, 0.02%)</title><rect x="9.7039%" y="133" width="0.0157%" height="15" fill="rgb(215,77,49)" fg:x="14092452588" fg:w="22765084"/><text x="9.9539%" y="143.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (153,950,463 samples, 0.11%)</title><rect x="9.7196%" y="309" width="0.1060%" height="15" fill="rgb(248,100,22)" fg:x="14115217672" fg:w="153950463"/><text x="9.9696%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (153,950,463 samples, 0.11%)</title><rect x="9.7196%" y="293" width="0.1060%" height="15" fill="rgb(208,67,9)" fg:x="14115217672" fg:w="153950463"/><text x="9.9696%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (84,122,195 samples, 0.06%)</title><rect x="9.7677%" y="277" width="0.0579%" height="15" fill="rgb(219,133,21)" fg:x="14185045940" fg:w="84122195"/><text x="10.0177%" y="287.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (9,612,593,788 samples, 6.62%)</title><rect x="3.3724%" y="357" width="6.6191%" height="15" fill="rgb(246,46,29)" fg:x="4897582092" fg:w="9612593788"/><text x="3.6224%" y="367.50">&lt;matrixmu..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (9,496,109,416 samples, 6.54%)</title><rect x="3.4526%" y="341" width="6.5389%" height="15" fill="rgb(246,185,52)" fg:x="5014066464" fg:w="9496109416"/><text x="3.7026%" y="351.50">matrixmul..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (9,107,519,106 samples, 6.27%)</title><rect x="3.7202%" y="325" width="6.2713%" height="15" fill="rgb(252,136,11)" fg:x="5402656774" fg:w="9107519106"/><text x="3.9702%" y="335.50">matrixmu..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (241,007,745 samples, 0.17%)</title><rect x="9.8256%" y="309" width="0.1660%" height="15" fill="rgb(219,138,53)" fg:x="14269168135" fg:w="241007745"/><text x="10.0756%" y="319.50"></text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (44,697,597 samples, 0.03%)</title><rect x="9.9916%" y="357" width="0.0308%" height="15" fill="rgb(211,51,23)" fg:x="14510175880" fg:w="44697597"/><text x="10.2416%" y="367.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (788,404,898 samples, 0.54%)</title><rect x="10.2096%" y="293" width="0.5429%" height="15" fill="rgb(247,221,28)" fg:x="14826773309" fg:w="788404898"/><text x="10.4596%" y="303.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (788,404,898 samples, 0.54%)</title><rect x="10.2096%" y="277" width="0.5429%" height="15" fill="rgb(251,222,45)" fg:x="14826773309" fg:w="788404898"/><text x="10.4596%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_blend_pd (50,414,303 samples, 0.03%)</title><rect x="10.7524%" y="293" width="0.0347%" height="15" fill="rgb(217,162,53)" fg:x="15615178207" fg:w="50414303"/><text x="11.0024%" y="303.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (188,617,346 samples, 0.13%)</title><rect x="10.7945%" y="293" width="0.1299%" height="15" fill="rgb(229,93,14)" fg:x="15676282575" fg:w="188617346"/><text x="11.0445%" y="303.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (536,205,959 samples, 0.37%)</title><rect x="10.9244%" y="293" width="0.3692%" height="15" fill="rgb(209,67,49)" fg:x="15864899921" fg:w="536205959"/><text x="11.1744%" y="303.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (31,525,232 samples, 0.02%)</title><rect x="11.2936%" y="293" width="0.0217%" height="15" fill="rgb(213,87,29)" fg:x="16401105880" fg:w="31525232"/><text x="11.5436%" y="303.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (15,426,919 samples, 0.01%)</title><rect x="11.3153%" y="293" width="0.0106%" height="15" fill="rgb(205,151,52)" fg:x="16432631112" fg:w="15426919"/><text x="11.5653%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (15,426,919 samples, 0.01%)</title><rect x="11.3153%" y="277" width="0.0106%" height="15" fill="rgb(253,215,39)" fg:x="16432631112" fg:w="15426919"/><text x="11.5653%" y="287.50"></text></g><g><title>core::ptr::write_unaligned (15,426,919 samples, 0.01%)</title><rect x="11.3153%" y="261" width="0.0106%" height="15" fill="rgb(221,220,41)" fg:x="16432631112" fg:w="15426919"/><text x="11.5653%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15,426,919 samples, 0.01%)</title><rect x="11.3153%" y="245" width="0.0106%" height="15" fill="rgb(218,133,21)" fg:x="16432631112" fg:w="15426919"/><text x="11.5653%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (49,049,521 samples, 0.03%)</title><rect x="11.3260%" y="293" width="0.0338%" height="15" fill="rgb(221,193,43)" fg:x="16448058031" fg:w="49049521"/><text x="11.5760%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (49,049,521 samples, 0.03%)</title><rect x="11.3260%" y="277" width="0.0338%" height="15" fill="rgb(240,128,52)" fg:x="16448058031" fg:w="49049521"/><text x="11.5760%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (31,520,952 samples, 0.02%)</title><rect x="11.3380%" y="261" width="0.0217%" height="15" fill="rgb(253,114,12)" fg:x="16465586600" fg:w="31520952"/><text x="11.5880%" y="271.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (1,893,387,264 samples, 1.30%)</title><rect x="10.0609%" y="341" width="1.3038%" height="15" fill="rgb(215,223,47)" fg:x="14610852119" fg:w="1893387264"/><text x="10.3109%" y="351.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (1,848,750,437 samples, 1.27%)</title><rect x="10.0916%" y="325" width="1.2730%" height="15" fill="rgb(248,225,23)" fg:x="14655488946" fg:w="1848750437"/><text x="10.3416%" y="335.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (1,828,215,342 samples, 1.26%)</title><rect x="10.1058%" y="309" width="1.2589%" height="15" fill="rgb(250,108,0)" fg:x="14676024041" fg:w="1828215342"/><text x="10.3558%" y="319.50"></text></g><g><title>matrixmultiply::gemm::masked_kernel (2,036,153,438 samples, 1.40%)</title><rect x="10.0223%" y="357" width="1.4021%" height="15" fill="rgb(228,208,7)" fg:x="14554873477" fg:w="2036153438"/><text x="10.2723%" y="367.50"></text></g><g><title>matrixmultiply::gemm::c_to_masked_ab_beta_c (86,787,532 samples, 0.06%)</title><rect x="11.3646%" y="341" width="0.0598%" height="15" fill="rgb(244,45,10)" fg:x="16504239383" fg:w="86787532"/><text x="11.6146%" y="351.50"></text></g><g><title>rawpointer::PointerExt::stride_offset (24,657,835 samples, 0.02%)</title><rect x="11.4244%" y="357" width="0.0170%" height="15" fill="rgb(207,125,25)" fg:x="16591026915" fg:w="24657835"/><text x="11.6744%" y="367.50"></text></g><g><title>&lt;matrixmultiply::ptr::Ptr&lt;*const T&gt; as rawpointer::PointerExt&gt;::offset (24,657,835 samples, 0.02%)</title><rect x="11.4244%" y="341" width="0.0170%" height="15" fill="rgb(210,195,18)" fg:x="16591026915" fg:w="24657835"/><text x="11.6744%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (24,657,835 samples, 0.02%)</title><rect x="11.4244%" y="325" width="0.0170%" height="15" fill="rgb(249,80,12)" fg:x="16591026915" fg:w="24657835"/><text x="11.6744%" y="335.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (12,060,284,516 samples, 8.30%)</title><rect x="3.1474%" y="389" width="8.3046%" height="15" fill="rgb(221,65,9)" fg:x="4570726197" fg:w="12060284516"/><text x="3.3974%" y="399.50">matrixmultip..</text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (11,871,965,934 samples, 8.17%)</title><rect x="3.2770%" y="373" width="8.1749%" height="15" fill="rgb(235,49,36)" fg:x="4759044779" fg:w="11871965934"/><text x="3.5270%" y="383.50">matrixmulti..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,325,963 samples, 0.01%)</title><rect x="11.4414%" y="357" width="0.0106%" height="15" fill="rgb(225,32,20)" fg:x="16615684750" fg:w="15325963"/><text x="11.6914%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,325,963 samples, 0.01%)</title><rect x="11.4414%" y="341" width="0.0106%" height="15" fill="rgb(215,141,46)" fg:x="16615684750" fg:w="15325963"/><text x="11.6914%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15,325,963 samples, 0.01%)</title><rect x="11.4414%" y="325" width="0.0106%" height="15" fill="rgb(250,160,47)" fg:x="16615684750" fg:w="15325963"/><text x="11.6914%" y="335.50"></text></g><g><title>matrixmultiply::gemm::MASK_BUF::_{{constant}}::_{{closure}} (15,325,963 samples, 0.01%)</title><rect x="11.4414%" y="309" width="0.0106%" height="15" fill="rgb(216,222,40)" fg:x="16615684750" fg:w="15325963"/><text x="11.6914%" y="319.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (15,325,963 samples, 0.01%)</title><rect x="11.4414%" y="293" width="0.0106%" height="15" fill="rgb(234,217,39)" fg:x="16615684750" fg:w="15325963"/><text x="11.6914%" y="303.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (12,093,508,526 samples, 8.33%)</title><rect x="3.1317%" y="405" width="8.3275%" height="15" fill="rgb(207,178,40)" fg:x="4548017923" fg:w="12093508526"/><text x="3.3817%" y="415.50">matrixmultip..</text></g><g><title>core::intrinsics::copy_nonoverlapping (2,016,147,790 samples, 1.39%)</title><rect x="11.5979%" y="389" width="1.3883%" height="15" fill="rgb(221,136,13)" fg:x="16843035539" fg:w="2016147790"/><text x="11.8479%" y="399.50"></text></g><g><title>[unknown] (17,443,952 samples, 0.01%)</title><rect x="12.9742%" y="373" width="0.0120%" height="15" fill="rgb(249,199,10)" fg:x="18841739377" fg:w="17443952"/><text x="13.2242%" y="383.50"></text></g><g><title>[unknown] (17,443,952 samples, 0.01%)</title><rect x="12.9742%" y="357" width="0.0120%" height="15" fill="rgb(249,222,13)" fg:x="18841739377" fg:w="17443952"/><text x="13.2242%" y="367.50"></text></g><g><title>[unknown] (17,443,952 samples, 0.01%)</title><rect x="12.9742%" y="341" width="0.0120%" height="15" fill="rgb(244,185,38)" fg:x="18841739377" fg:w="17443952"/><text x="13.2242%" y="351.50"></text></g><g><title>[unknown] (17,443,952 samples, 0.01%)</title><rect x="12.9742%" y="325" width="0.0120%" height="15" fill="rgb(236,202,9)" fg:x="18841739377" fg:w="17443952"/><text x="13.2242%" y="335.50"></text></g><g><title>[unknown] (17,443,952 samples, 0.01%)</title><rect x="12.9742%" y="309" width="0.0120%" height="15" fill="rgb(250,229,37)" fg:x="18841739377" fg:w="17443952"/><text x="13.2242%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (120,256,290 samples, 0.08%)</title><rect x="12.9862%" y="389" width="0.0828%" height="15" fill="rgb(206,174,23)" fg:x="18859183329" fg:w="120256290"/><text x="13.2362%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (120,256,290 samples, 0.08%)</title><rect x="12.9862%" y="373" width="0.0828%" height="15" fill="rgb(211,33,43)" fg:x="18859183329" fg:w="120256290"/><text x="13.2362%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (47,238,601 samples, 0.03%)</title><rect x="13.0365%" y="357" width="0.0325%" height="15" fill="rgb(245,58,50)" fg:x="18932201018" fg:w="47238601"/><text x="13.2865%" y="367.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (14,670,228,228 samples, 10.10%)</title><rect x="3.0143%" y="501" width="10.1018%" height="15" fill="rgb(244,68,36)" fg:x="4377552421" fg:w="14670228228"/><text x="3.2643%" y="511.50">ndarray::linalg..</text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (14,670,228,228 samples, 10.10%)</title><rect x="3.0143%" y="485" width="10.1018%" height="15" fill="rgb(232,229,15)" fg:x="4377552421" fg:w="14670228228"/><text x="3.2643%" y="495.50">&lt;ndarray::Array..</text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (14,622,524,273 samples, 10.07%)</title><rect x="3.0472%" y="469" width="10.0689%" height="15" fill="rgb(254,30,23)" fg:x="4425256376" fg:w="14622524273"/><text x="3.2972%" y="479.50">ndarray::linalg..</text></g><g><title>matrixmultiply::gemm::gemm_loop (14,596,249,535 samples, 10.05%)</title><rect x="3.0653%" y="453" width="10.0508%" height="15" fill="rgb(235,160,14)" fg:x="4451531114" fg:w="14596249535"/><text x="3.3153%" y="463.50">matrixmultiply:..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (14,513,855,701 samples, 9.99%)</title><rect x="3.1220%" y="437" width="9.9941%" height="15" fill="rgb(212,155,44)" fg:x="4533924948" fg:w="14513855701"/><text x="3.3720%" y="447.50">matrixmultiply..</text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (14,503,187,067 samples, 9.99%)</title><rect x="3.1294%" y="421" width="9.9867%" height="15" fill="rgb(226,2,50)" fg:x="4544593582" fg:w="14503187067"/><text x="3.3794%" y="431.50">matrixmultiply..</text></g><g><title>matrixmultiply::gemm::pack (2,406,254,200 samples, 1.66%)</title><rect x="11.4592%" y="405" width="1.6569%" height="15" fill="rgb(234,177,6)" fg:x="16641526449" fg:w="2406254200"/><text x="11.7092%" y="415.50"></text></g><g><title>rawpointer::PointerExt::stride_offset (68,341,030 samples, 0.05%)</title><rect x="13.0690%" y="389" width="0.0471%" height="15" fill="rgb(217,24,9)" fg:x="18979439619" fg:w="68341030"/><text x="13.3190%" y="399.50"></text></g><g><title>__GI___libc_free (24,573,569 samples, 0.02%)</title><rect x="13.1269%" y="485" width="0.0169%" height="15" fill="rgb(220,13,46)" fg:x="19063510749" fg:w="24573569"/><text x="13.3769%" y="495.50"></text></g><g><title>core::ptr::write (1,072,216,233 samples, 0.74%)</title><rect x="13.8921%" y="373" width="0.7383%" height="15" fill="rgb(239,221,27)" fg:x="20174765441" fg:w="1072216233"/><text x="14.1421%" y="383.50"></text></g><g><title>[unknown] (616,375,884 samples, 0.42%)</title><rect x="14.2060%" y="357" width="0.4244%" height="15" fill="rgb(222,198,25)" fg:x="20630605790" fg:w="616375884"/><text x="14.4560%" y="367.50"></text></g><g><title>[unknown] (567,207,853 samples, 0.39%)</title><rect x="14.2399%" y="341" width="0.3906%" height="15" fill="rgb(211,99,13)" fg:x="20679773821" fg:w="567207853"/><text x="14.4899%" y="351.50"></text></g><g><title>[unknown] (545,987,199 samples, 0.38%)</title><rect x="14.2545%" y="325" width="0.3760%" height="15" fill="rgb(232,111,31)" fg:x="20700994475" fg:w="545987199"/><text x="14.5045%" y="335.50"></text></g><g><title>[unknown] (531,828,892 samples, 0.37%)</title><rect x="14.2642%" y="309" width="0.3662%" height="15" fill="rgb(245,82,37)" fg:x="20715152782" fg:w="531828892"/><text x="14.5142%" y="319.50"></text></g><g><title>[unknown] (480,152,332 samples, 0.33%)</title><rect x="14.2998%" y="293" width="0.3306%" height="15" fill="rgb(227,149,46)" fg:x="20766829342" fg:w="480152332"/><text x="14.5498%" y="303.50"></text></g><g><title>[unknown] (432,745,469 samples, 0.30%)</title><rect x="14.3325%" y="277" width="0.2980%" height="15" fill="rgb(218,36,50)" fg:x="20814236205" fg:w="432745469"/><text x="14.5825%" y="287.50"></text></g><g><title>[unknown] (404,831,259 samples, 0.28%)</title><rect x="14.3517%" y="261" width="0.2788%" height="15" fill="rgb(226,80,48)" fg:x="20842150415" fg:w="404831259"/><text x="14.6017%" y="271.50"></text></g><g><title>[unknown] (355,481,812 samples, 0.24%)</title><rect x="14.3857%" y="245" width="0.2448%" height="15" fill="rgb(238,224,15)" fg:x="20891499862" fg:w="355481812"/><text x="14.6357%" y="255.50"></text></g><g><title>[unknown] (288,166,627 samples, 0.20%)</title><rect x="14.4320%" y="229" width="0.1984%" height="15" fill="rgb(241,136,10)" fg:x="20958815047" fg:w="288166627"/><text x="14.6820%" y="239.50"></text></g><g><title>[unknown] (204,291,499 samples, 0.14%)</title><rect x="14.4898%" y="213" width="0.1407%" height="15" fill="rgb(208,32,45)" fg:x="21042690175" fg:w="204291499"/><text x="14.7398%" y="223.50"></text></g><g><title>[unknown] (162,652,792 samples, 0.11%)</title><rect x="14.5184%" y="197" width="0.1120%" height="15" fill="rgb(207,135,9)" fg:x="21084328882" fg:w="162652792"/><text x="14.7684%" y="207.50"></text></g><g><title>[unknown] (120,444,392 samples, 0.08%)</title><rect x="14.5475%" y="181" width="0.0829%" height="15" fill="rgb(206,86,44)" fg:x="21126537282" fg:w="120444392"/><text x="14.7975%" y="191.50"></text></g><g><title>[unknown] (99,006,089 samples, 0.07%)</title><rect x="14.5623%" y="165" width="0.0682%" height="15" fill="rgb(245,177,15)" fg:x="21147975585" fg:w="99006089"/><text x="14.8123%" y="175.50"></text></g><g><title>__GI___libc_malloc (22,516,930 samples, 0.02%)</title><rect x="14.6793%" y="325" width="0.0155%" height="15" fill="rgb(206,64,50)" fg:x="21317925596" fg:w="22516930"/><text x="14.9293%" y="335.50"></text></g><g><title>_int_malloc (22,516,930 samples, 0.02%)</title><rect x="14.6793%" y="309" width="0.0155%" height="15" fill="rgb(234,36,40)" fg:x="21317925596" fg:w="22516930"/><text x="14.9293%" y="319.50"></text></g><g><title>[unknown] (273,224,911 samples, 0.19%)</title><rect x="41.6762%" y="309" width="0.1881%" height="15" fill="rgb(213,64,8)" fg:x="60524094771" fg:w="273224911"/><text x="41.9262%" y="319.50"></text></g><g><title>[unknown] (259,042,357 samples, 0.18%)</title><rect x="41.6860%" y="293" width="0.1784%" height="15" fill="rgb(210,75,36)" fg:x="60538277325" fg:w="259042357"/><text x="41.9360%" y="303.50"></text></g><g><title>[unknown] (248,743,156 samples, 0.17%)</title><rect x="41.6931%" y="277" width="0.1713%" height="15" fill="rgb(229,88,21)" fg:x="60548576526" fg:w="248743156"/><text x="41.9431%" y="287.50"></text></g><g><title>[unknown] (245,951,055 samples, 0.17%)</title><rect x="41.6950%" y="261" width="0.1694%" height="15" fill="rgb(252,204,47)" fg:x="60551368627" fg:w="245951055"/><text x="41.9450%" y="271.50"></text></g><g><title>[unknown] (235,343,989 samples, 0.16%)</title><rect x="41.7023%" y="245" width="0.1621%" height="15" fill="rgb(208,77,27)" fg:x="60561975693" fg:w="235343989"/><text x="41.9523%" y="255.50"></text></g><g><title>[unknown] (221,127,587 samples, 0.15%)</title><rect x="41.7121%" y="229" width="0.1523%" height="15" fill="rgb(221,76,26)" fg:x="60576192095" fg:w="221127587"/><text x="41.9621%" y="239.50"></text></g><g><title>[unknown] (194,244,354 samples, 0.13%)</title><rect x="41.7306%" y="213" width="0.1338%" height="15" fill="rgb(225,139,18)" fg:x="60603075328" fg:w="194244354"/><text x="41.9806%" y="223.50"></text></g><g><title>[unknown] (170,047,634 samples, 0.12%)</title><rect x="41.7473%" y="197" width="0.1171%" height="15" fill="rgb(230,137,11)" fg:x="60627272048" fg:w="170047634"/><text x="41.9973%" y="207.50"></text></g><g><title>[unknown] (166,452,771 samples, 0.11%)</title><rect x="41.7498%" y="181" width="0.1146%" height="15" fill="rgb(212,28,1)" fg:x="60630866911" fg:w="166452771"/><text x="41.9998%" y="191.50"></text></g><g><title>[unknown] (149,618,230 samples, 0.10%)</title><rect x="41.7614%" y="165" width="0.1030%" height="15" fill="rgb(248,164,17)" fg:x="60647701452" fg:w="149618230"/><text x="42.0114%" y="175.50"></text></g><g><title>[unknown] (114,506,767 samples, 0.08%)</title><rect x="41.7855%" y="149" width="0.0788%" height="15" fill="rgb(222,171,42)" fg:x="60682812915" fg:w="114506767"/><text x="42.0355%" y="159.50"></text></g><g><title>[unknown] (83,382,188 samples, 0.06%)</title><rect x="41.8070%" y="133" width="0.0574%" height="15" fill="rgb(243,84,45)" fg:x="60713937494" fg:w="83382188"/><text x="42.0570%" y="143.50"></text></g><g><title>[unknown] (49,164,144 samples, 0.03%)</title><rect x="41.8305%" y="117" width="0.0339%" height="15" fill="rgb(252,49,23)" fg:x="60748155538" fg:w="49164144"/><text x="42.0805%" y="127.50"></text></g><g><title>[unknown] (42,220,644 samples, 0.03%)</title><rect x="41.8353%" y="101" width="0.0291%" height="15" fill="rgb(215,19,7)" fg:x="60755099038" fg:w="42220644"/><text x="42.0853%" y="111.50"></text></g><g><title>[unknown] (28,165,131 samples, 0.02%)</title><rect x="41.8450%" y="85" width="0.0194%" height="15" fill="rgb(238,81,41)" fg:x="60769154551" fg:w="28165131"/><text x="42.0950%" y="95.50"></text></g><g><title>__expm1_fma (63,518,165,451 samples, 43.74%)</title><rect x="41.8644%" y="309" width="43.7379%" height="15" fill="rgb(210,199,37)" fg:x="60797319682" fg:w="63518165451"/><text x="42.1144%" y="319.50">__expm1_fma</text></g><g><title>[unknown] (418,089,763 samples, 0.29%)</title><rect x="85.3144%" y="293" width="0.2879%" height="15" fill="rgb(244,192,49)" fg:x="123897395370" fg:w="418089763"/><text x="85.5644%" y="303.50"></text></g><g><title>[unknown] (407,524,944 samples, 0.28%)</title><rect x="85.3217%" y="277" width="0.2806%" height="15" fill="rgb(226,211,11)" fg:x="123907960189" fg:w="407524944"/><text x="85.5717%" y="287.50"></text></g><g><title>[unknown] (403,984,413 samples, 0.28%)</title><rect x="85.3241%" y="261" width="0.2782%" height="15" fill="rgb(236,162,54)" fg:x="123911500720" fg:w="403984413"/><text x="85.5741%" y="271.50"></text></g><g><title>[unknown] (389,998,081 samples, 0.27%)</title><rect x="85.3338%" y="245" width="0.2685%" height="15" fill="rgb(220,229,9)" fg:x="123925487052" fg:w="389998081"/><text x="85.5838%" y="255.50"></text></g><g><title>[unknown] (375,857,366 samples, 0.26%)</title><rect x="85.3435%" y="229" width="0.2588%" height="15" fill="rgb(250,87,22)" fg:x="123939627767" fg:w="375857366"/><text x="85.5935%" y="239.50"></text></g><g><title>[unknown] (358,429,321 samples, 0.25%)</title><rect x="85.3555%" y="213" width="0.2468%" height="15" fill="rgb(239,43,17)" fg:x="123957055812" fg:w="358429321"/><text x="85.6055%" y="223.50"></text></g><g><title>[unknown] (331,710,365 samples, 0.23%)</title><rect x="85.3739%" y="197" width="0.2284%" height="15" fill="rgb(231,177,25)" fg:x="123983774768" fg:w="331710365"/><text x="85.6239%" y="207.50"></text></g><g><title>[unknown] (324,633,357 samples, 0.22%)</title><rect x="85.3788%" y="181" width="0.2235%" height="15" fill="rgb(219,179,1)" fg:x="123990851776" fg:w="324633357"/><text x="85.6288%" y="191.50"></text></g><g><title>[unknown] (306,970,388 samples, 0.21%)</title><rect x="85.3909%" y="165" width="0.2114%" height="15" fill="rgb(238,219,53)" fg:x="124008514745" fg:w="306970388"/><text x="85.6409%" y="175.50"></text></g><g><title>[unknown] (286,277,871 samples, 0.20%)</title><rect x="85.4052%" y="149" width="0.1971%" height="15" fill="rgb(232,167,36)" fg:x="124029207262" fg:w="286277871"/><text x="85.6552%" y="159.50"></text></g><g><title>[unknown] (230,051,584 samples, 0.16%)</title><rect x="85.4439%" y="133" width="0.1584%" height="15" fill="rgb(244,19,51)" fg:x="124085433549" fg:w="230051584"/><text x="85.6939%" y="143.50"></text></g><g><title>[unknown] (129,697,728 samples, 0.09%)</title><rect x="85.5130%" y="117" width="0.0893%" height="15" fill="rgb(224,6,22)" fg:x="124185787405" fg:w="129697728"/><text x="85.7630%" y="127.50"></text></g><g><title>[unknown] (87,019,101 samples, 0.06%)</title><rect x="85.5424%" y="101" width="0.0599%" height="15" fill="rgb(224,145,5)" fg:x="124228466032" fg:w="87019101"/><text x="85.7924%" y="111.50"></text></g><g><title>[unknown] (45,796,598 samples, 0.03%)</title><rect x="85.5708%" y="85" width="0.0315%" height="15" fill="rgb(234,130,49)" fg:x="124269688535" fg:w="45796598"/><text x="85.8208%" y="95.50"></text></g><g><title>[unknown] (21,175,806 samples, 0.01%)</title><rect x="85.5877%" y="69" width="0.0146%" height="15" fill="rgb(254,6,2)" fg:x="124294309327" fg:w="21175806"/><text x="85.8377%" y="79.50"></text></g><g><title>__tanh (103,054,326,268 samples, 70.96%)</title><rect x="14.6948%" y="325" width="70.9621%" height="15" fill="rgb(208,96,46)" fg:x="21340442526" fg:w="103054326268"/><text x="14.9448%" y="335.50">__tanh</text></g><g><title>__expm1_ifunc@plt (79,283,661 samples, 0.05%)</title><rect x="85.6023%" y="309" width="0.0546%" height="15" fill="rgb(239,3,39)" fg:x="124315485133" fg:w="79283661"/><text x="85.8523%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (105,303,879,266 samples, 72.51%)</title><rect x="13.1483%" y="405" width="72.5111%" height="15" fill="rgb(233,210,1)" fg:x="19094480914" fg:w="105303879266"/><text x="13.3983%" y="415.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (105,195,650,535 samples, 72.44%)</title><rect x="13.2228%" y="389" width="72.4366%" height="15" fill="rgb(244,137,37)" fg:x="19202709645" fg:w="105195650535"/><text x="13.4728%" y="399.50">ndarray::iterators::to_vec_mapped::_{{closure}}</text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (103,151,378,506 samples, 71.03%)</title><rect x="14.6304%" y="373" width="71.0289%" height="15" fill="rgb(240,136,2)" fg:x="21246981674" fg:w="103151378506"/><text x="14.8804%" y="383.50">ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}}</text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (103,151,378,506 samples, 71.03%)</title><rect x="14.6304%" y="357" width="71.0289%" height="15" fill="rgb(239,18,37)" fg:x="21246981674" fg:w="103151378506"/><text x="14.8804%" y="367.50">rkl::core::activations::tanh_forward::_{{closure}}</text></g><g><title>std::f64::&lt;impl f64&gt;::tanh (103,151,378,506 samples, 71.03%)</title><rect x="14.6304%" y="341" width="71.0289%" height="15" fill="rgb(218,185,22)" fg:x="21246981674" fg:w="103151378506"/><text x="14.8804%" y="351.50">std::f64::&lt;impl f64&gt;::tanh</text></g><g><title>[unknown] (298,739,524 samples, 0.21%)</title><rect x="85.6738%" y="245" width="0.2057%" height="15" fill="rgb(225,218,4)" fg:x="124419354910" fg:w="298739524"/><text x="85.9238%" y="255.50"></text></g><g><title>[unknown] (291,986,544 samples, 0.20%)</title><rect x="85.6785%" y="229" width="0.2011%" height="15" fill="rgb(230,182,32)" fg:x="124426107890" fg:w="291986544"/><text x="85.9285%" y="239.50"></text></g><g><title>[unknown] (284,950,559 samples, 0.20%)</title><rect x="85.6833%" y="213" width="0.1962%" height="15" fill="rgb(242,56,43)" fg:x="124433143875" fg:w="284950559"/><text x="85.9333%" y="223.50"></text></g><g><title>[unknown] (246,290,414 samples, 0.17%)</title><rect x="85.7099%" y="197" width="0.1696%" height="15" fill="rgb(233,99,24)" fg:x="124471804020" fg:w="246290414"/><text x="85.9599%" y="207.50"></text></g><g><title>[unknown] (222,343,705 samples, 0.15%)</title><rect x="85.7264%" y="181" width="0.1531%" height="15" fill="rgb(234,209,42)" fg:x="124495750729" fg:w="222343705"/><text x="85.9764%" y="191.50"></text></g><g><title>[unknown] (187,798,065 samples, 0.13%)</title><rect x="85.7502%" y="165" width="0.1293%" height="15" fill="rgb(227,7,12)" fg:x="124530296369" fg:w="187798065"/><text x="86.0002%" y="175.50"></text></g><g><title>[unknown] (184,317,192 samples, 0.13%)</title><rect x="85.7526%" y="149" width="0.1269%" height="15" fill="rgb(245,203,43)" fg:x="124533777242" fg:w="184317192"/><text x="86.0026%" y="159.50"></text></g><g><title>[unknown] (164,156,913 samples, 0.11%)</title><rect x="85.7665%" y="133" width="0.1130%" height="15" fill="rgb(238,205,33)" fg:x="124553937521" fg:w="164156913"/><text x="86.0165%" y="143.50"></text></g><g><title>[unknown] (150,101,166 samples, 0.10%)</title><rect x="85.7762%" y="117" width="0.1034%" height="15" fill="rgb(231,56,7)" fg:x="124567993268" fg:w="150101166"/><text x="86.0262%" y="127.50"></text></g><g><title>[unknown] (110,550,885 samples, 0.08%)</title><rect x="85.8034%" y="101" width="0.0761%" height="15" fill="rgb(244,186,29)" fg:x="124607543549" fg:w="110550885"/><text x="86.0534%" y="111.50"></text></g><g><title>[unknown] (80,972,457 samples, 0.06%)</title><rect x="85.8238%" y="85" width="0.0558%" height="15" fill="rgb(234,111,31)" fg:x="124637121977" fg:w="80972457"/><text x="86.0738%" y="95.50"></text></g><g><title>[unknown] (60,189,210 samples, 0.04%)</title><rect x="85.8381%" y="69" width="0.0414%" height="15" fill="rgb(241,149,10)" fg:x="124657905224" fg:w="60189210"/><text x="86.0881%" y="79.50"></text></g><g><title>[unknown] (53,087,563 samples, 0.04%)</title><rect x="85.8430%" y="53" width="0.0366%" height="15" fill="rgb(249,206,44)" fg:x="124665006871" fg:w="53087563"/><text x="86.0930%" y="63.50"></text></g><g><title>[unknown] (28,350,579 samples, 0.02%)</title><rect x="85.8820%" y="229" width="0.0195%" height="15" fill="rgb(251,153,30)" fg:x="124721662638" fg:w="28350579"/><text x="86.1320%" y="239.50"></text></g><g><title>[unknown] (24,785,171 samples, 0.02%)</title><rect x="85.8844%" y="213" width="0.0171%" height="15" fill="rgb(239,152,38)" fg:x="124725228046" fg:w="24785171"/><text x="86.1344%" y="223.50"></text></g><g><title>[unknown] (24,785,171 samples, 0.02%)</title><rect x="85.8844%" y="197" width="0.0171%" height="15" fill="rgb(249,139,47)" fg:x="124725228046" fg:w="24785171"/><text x="86.1344%" y="207.50"></text></g><g><title>[unknown] (24,785,171 samples, 0.02%)</title><rect x="85.8844%" y="181" width="0.0171%" height="15" fill="rgb(244,64,35)" fg:x="124725228046" fg:w="24785171"/><text x="86.1344%" y="191.50"></text></g><g><title>[unknown] (24,785,171 samples, 0.02%)</title><rect x="85.8844%" y="165" width="0.0171%" height="15" fill="rgb(216,46,15)" fg:x="124725228046" fg:w="24785171"/><text x="86.1344%" y="175.50"></text></g><g><title>[unknown] (21,453,505 samples, 0.01%)</title><rect x="85.8867%" y="149" width="0.0148%" height="15" fill="rgb(250,74,19)" fg:x="124728559712" fg:w="21453505"/><text x="86.1367%" y="159.50"></text></g><g><title>[unknown] (17,900,539 samples, 0.01%)</title><rect x="85.8892%" y="133" width="0.0123%" height="15" fill="rgb(249,42,33)" fg:x="124732112678" fg:w="17900539"/><text x="86.1392%" y="143.50"></text></g><g><title>[unknown] (17,900,539 samples, 0.01%)</title><rect x="85.8892%" y="117" width="0.0123%" height="15" fill="rgb(242,149,17)" fg:x="124732112678" fg:w="17900539"/><text x="86.1392%" y="127.50"></text></g><g><title>[unknown] (62,368,337 samples, 0.04%)</title><rect x="85.9015%" y="181" width="0.0429%" height="15" fill="rgb(244,29,21)" fg:x="124750013217" fg:w="62368337"/><text x="86.1515%" y="191.50"></text></g><g><title>[unknown] (62,368,337 samples, 0.04%)</title><rect x="85.9015%" y="165" width="0.0429%" height="15" fill="rgb(220,130,37)" fg:x="124750013217" fg:w="62368337"/><text x="86.1515%" y="175.50"></text></g><g><title>[unknown] (55,298,307 samples, 0.04%)</title><rect x="85.9064%" y="149" width="0.0381%" height="15" fill="rgb(211,67,2)" fg:x="124757083247" fg:w="55298307"/><text x="86.1564%" y="159.50"></text></g><g><title>[unknown] (55,298,307 samples, 0.04%)</title><rect x="85.9064%" y="133" width="0.0381%" height="15" fill="rgb(235,68,52)" fg:x="124757083247" fg:w="55298307"/><text x="86.1564%" y="143.50"></text></g><g><title>[unknown] (55,298,307 samples, 0.04%)</title><rect x="85.9064%" y="117" width="0.0381%" height="15" fill="rgb(246,142,3)" fg:x="124757083247" fg:w="55298307"/><text x="86.1564%" y="127.50"></text></g><g><title>[unknown] (48,153,788 samples, 0.03%)</title><rect x="85.9113%" y="101" width="0.0332%" height="15" fill="rgb(241,25,7)" fg:x="124764227766" fg:w="48153788"/><text x="86.1613%" y="111.50"></text></g><g><title>[unknown] (41,517,071 samples, 0.03%)</title><rect x="85.9159%" y="85" width="0.0286%" height="15" fill="rgb(242,119,39)" fg:x="124770864483" fg:w="41517071"/><text x="86.1659%" y="95.50"></text></g><g><title>[unknown] (31,626,413 samples, 0.02%)</title><rect x="85.9227%" y="69" width="0.0218%" height="15" fill="rgb(241,98,45)" fg:x="124780755141" fg:w="31626413"/><text x="86.1727%" y="79.50"></text></g><g><title>__GI___libc_malloc (408,558,375 samples, 0.28%)</title><rect x="85.6666%" y="277" width="0.2813%" height="15" fill="rgb(254,28,30)" fg:x="124408847801" fg:w="408558375"/><text x="85.9166%" y="287.50"></text></g><g><title>_int_malloc (408,558,375 samples, 0.28%)</title><rect x="85.6666%" y="261" width="0.2813%" height="15" fill="rgb(241,142,54)" fg:x="124408847801" fg:w="408558375"/><text x="85.9166%" y="271.50"></text></g><g><title>sysmalloc (99,311,742 samples, 0.07%)</title><rect x="85.8795%" y="245" width="0.0684%" height="15" fill="rgb(222,85,15)" fg:x="124718094434" fg:w="99311742"/><text x="86.1295%" y="255.50"></text></g><g><title>__glibc_morecore (67,392,959 samples, 0.05%)</title><rect x="85.9015%" y="229" width="0.0464%" height="15" fill="rgb(210,85,47)" fg:x="124750013217" fg:w="67392959"/><text x="86.1515%" y="239.50"></text></g><g><title>__GI___sbrk (67,392,959 samples, 0.05%)</title><rect x="85.9015%" y="213" width="0.0464%" height="15" fill="rgb(224,206,25)" fg:x="124750013217" fg:w="67392959"/><text x="86.1515%" y="223.50"></text></g><g><title>__brk (67,392,959 samples, 0.05%)</title><rect x="85.9015%" y="197" width="0.0464%" height="15" fill="rgb(243,201,19)" fg:x="124750013217" fg:w="67392959"/><text x="86.1515%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="709" width="85.8592%" height="15" fill="rgb(236,59,4)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="719.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="693" width="85.8592%" height="15" fill="rgb(254,179,45)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="677" width="85.8592%" height="15" fill="rgb(226,14,10)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="661" width="85.8592%" height="15" fill="rgb(244,27,41)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="645" width="85.8592%" height="15" fill="rgb(235,35,32)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="655.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="629" width="85.8592%" height="15" fill="rgb(218,68,31)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="639.50">alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="613" width="85.8592%" height="15" fill="rgb(207,120,37)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="623.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="597" width="85.8592%" height="15" fill="rgb(227,98,0)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="607.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="581" width="85.8592%" height="15" fill="rgb(207,7,3)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="591.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="565" width="85.8592%" height="15" fill="rgb(206,98,19)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="575.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::compute_jacobian::_{{closure}} (124,688,578,946 samples, 85.86%)</title><rect x="0.0936%" y="549" width="85.8592%" height="15" fill="rgb(217,5,26)" fg:x="135908093" fg:w="124688578946"/><text x="0.3436%" y="559.50">rkl::core::optimizers::MarquardtOptimizer::compute_jacobian::_{{closure}}</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (124,127,998,598 samples, 85.47%)</title><rect x="0.4796%" y="533" width="85.4732%" height="15" fill="rgb(235,190,38)" fg:x="696488441" fg:w="124127998598"/><text x="0.7296%" y="543.50">rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict</text></g><g><title>rkl::core::layers::Dense::forward (124,091,185,131 samples, 85.45%)</title><rect x="0.5049%" y="517" width="85.4479%" height="15" fill="rgb(247,86,24)" fg:x="733301908" fg:w="124091185131"/><text x="0.7549%" y="527.50">rkl::core::layers::Dense::forward</text></g><g><title>rkl::core::activations::Activation::forward (105,776,706,390 samples, 72.84%)</title><rect x="13.1161%" y="501" width="72.8367%" height="15" fill="rgb(205,101,16)" fg:x="19047780649" fg:w="105776706390"/><text x="13.3661%" y="511.50">rkl::core::activations::Activation::forward</text></g><g><title>rkl::core::activations::tanh_forward (105,733,556,839 samples, 72.81%)</title><rect x="13.1458%" y="485" width="72.8070%" height="15" fill="rgb(246,168,33)" fg:x="19090930200" fg:w="105733556839"/><text x="13.3958%" y="495.50">rkl::core::activations::tanh_forward</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (105,733,556,839 samples, 72.81%)</title><rect x="13.1458%" y="469" width="72.8070%" height="15" fill="rgb(231,114,1)" fg:x="19090930200" fg:w="105733556839"/><text x="13.3958%" y="479.50">ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv</text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (105,733,556,839 samples, 72.81%)</title><rect x="13.1458%" y="453" width="72.8070%" height="15" fill="rgb(207,184,53)" fg:x="19090930200" fg:w="105733556839"/><text x="13.3958%" y="463.50">ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map</text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (105,730,006,125 samples, 72.80%)</title><rect x="13.1483%" y="437" width="72.8045%" height="15" fill="rgb(224,95,51)" fg:x="19094480914" fg:w="105730006125"/><text x="13.3983%" y="447.50">ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked</text></g><g><title>ndarray::iterators::to_vec_mapped (105,730,006,125 samples, 72.80%)</title><rect x="13.1483%" y="421" width="72.8045%" height="15" fill="rgb(212,188,45)" fg:x="19094480914" fg:w="105730006125"/><text x="13.3983%" y="431.50">ndarray::iterators::to_vec_mapped</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (426,126,859 samples, 0.29%)</title><rect x="85.6594%" y="405" width="0.2934%" height="15" fill="rgb(223,154,38)" fg:x="124398360180" fg:w="426126859"/><text x="85.9094%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (426,126,859 samples, 0.29%)</title><rect x="85.6594%" y="389" width="0.2934%" height="15" fill="rgb(251,22,52)" fg:x="124398360180" fg:w="426126859"/><text x="85.9094%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (426,126,859 samples, 0.29%)</title><rect x="85.6594%" y="373" width="0.2934%" height="15" fill="rgb(229,209,22)" fg:x="124398360180" fg:w="426126859"/><text x="85.9094%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (426,126,859 samples, 0.29%)</title><rect x="85.6594%" y="357" width="0.2934%" height="15" fill="rgb(234,138,34)" fg:x="124398360180" fg:w="426126859"/><text x="85.9094%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (426,126,859 samples, 0.29%)</title><rect x="85.6594%" y="341" width="0.2934%" height="15" fill="rgb(212,95,11)" fg:x="124398360180" fg:w="426126859"/><text x="85.9094%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (422,574,588 samples, 0.29%)</title><rect x="85.6618%" y="325" width="0.2910%" height="15" fill="rgb(240,179,47)" fg:x="124401912451" fg:w="422574588"/><text x="85.9118%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (422,574,588 samples, 0.29%)</title><rect x="85.6618%" y="309" width="0.2910%" height="15" fill="rgb(240,163,11)" fg:x="124401912451" fg:w="422574588"/><text x="85.9118%" y="319.50"></text></g><g><title>alloc::alloc::alloc (422,574,588 samples, 0.29%)</title><rect x="85.6618%" y="293" width="0.2910%" height="15" fill="rgb(236,37,12)" fg:x="124401912451" fg:w="422574588"/><text x="85.9118%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 1]&gt;&gt;&gt; (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="709" width="0.0121%" height="15" fill="rgb(232,164,16)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="693" width="0.0121%" height="15" fill="rgb(244,205,15)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="703.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="677" width="0.0121%" height="15" fill="rgb(223,117,47)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="661" width="0.0121%" height="15" fill="rgb(244,107,35)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="645" width="0.0121%" height="15" fill="rgb(205,140,8)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="629" width="0.0121%" height="15" fill="rgb(228,84,46)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="613" width="0.0121%" height="15" fill="rgb(254,188,9)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="597" width="0.0121%" height="15" fill="rgb(206,112,54)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="581" width="0.0121%" height="15" fill="rgb(216,84,49)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="591.50"></text></g><g><title>__GI___libc_free (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="565" width="0.0121%" height="15" fill="rgb(214,194,35)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="575.50"></text></g><g><title>_int_free_merge_chunk (17,595,150 samples, 0.01%)</title><rect x="85.9552%" y="549" width="0.0121%" height="15" fill="rgb(249,28,3)" fg:x="124827982906" fg:w="17595150"/><text x="86.2052%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::ArrayBase&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt; (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="709" width="0.0120%" height="15" fill="rgb(222,56,52)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;ndarray::data_repr::OwnedRepr&lt;f64&gt;&gt; (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="693" width="0.0120%" height="15" fill="rgb(245,217,50)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="703.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::ops::drop::Drop&gt;::drop (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="677" width="0.0120%" height="15" fill="rgb(213,201,24)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="661" width="0.0120%" height="15" fill="rgb(248,116,28)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="645" width="0.0120%" height="15" fill="rgb(219,72,43)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="629" width="0.0120%" height="15" fill="rgb(209,138,14)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="613" width="0.0120%" height="15" fill="rgb(222,18,33)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="597" width="0.0120%" height="15" fill="rgb(213,199,7)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="581" width="0.0120%" height="15" fill="rgb(250,110,10)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="591.50"></text></g><g><title>__GI___libc_free (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="565" width="0.0120%" height="15" fill="rgb(248,123,6)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="575.50"></text></g><g><title>systrim (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="549" width="0.0120%" height="15" fill="rgb(206,91,31)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="559.50"></text></g><g><title>__glibc_morecore (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="533" width="0.0120%" height="15" fill="rgb(211,154,13)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="543.50"></text></g><g><title>__GI___sbrk (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="517" width="0.0120%" height="15" fill="rgb(225,148,7)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="527.50"></text></g><g><title>__brk (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="501" width="0.0120%" height="15" fill="rgb(220,160,43)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="511.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="485" width="0.0120%" height="15" fill="rgb(213,52,39)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="495.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="469" width="0.0120%" height="15" fill="rgb(243,137,7)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="479.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="453" width="0.0120%" height="15" fill="rgb(230,79,13)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="463.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="437" width="0.0120%" height="15" fill="rgb(247,105,23)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="447.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="421" width="0.0120%" height="15" fill="rgb(223,179,41)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="431.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="405" width="0.0120%" height="15" fill="rgb(218,9,34)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="415.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="389" width="0.0120%" height="15" fill="rgb(222,106,8)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="399.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="373" width="0.0120%" height="15" fill="rgb(211,220,0)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="383.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="357" width="0.0120%" height="15" fill="rgb(229,52,16)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="367.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="341" width="0.0120%" height="15" fill="rgb(212,155,18)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="351.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="325" width="0.0120%" height="15" fill="rgb(242,21,14)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="335.50"></text></g><g><title>[unknown] (17,436,658 samples, 0.01%)</title><rect x="85.9673%" y="309" width="0.0120%" height="15" fill="rgb(222,19,48)" fg:x="124845578056" fg:w="17436658"/><text x="86.2173%" y="319.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zeros (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="709" width="0.0953%" height="15" fill="rgb(232,45,27)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="719.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_elem (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="693" width="0.0953%" height="15" fill="rgb(249,103,42)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="703.50"></text></g><g><title>alloc::vec::from_elem (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="677" width="0.0953%" height="15" fill="rgb(246,81,33)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="687.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="661" width="0.0953%" height="15" fill="rgb(252,33,42)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="645" width="0.0953%" height="15" fill="rgb(209,212,41)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="629" width="0.0953%" height="15" fill="rgb(207,154,6)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="613" width="0.0953%" height="15" fill="rgb(223,64,47)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="597" width="0.0953%" height="15" fill="rgb(211,161,38)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="581" width="0.0953%" height="15" fill="rgb(219,138,40)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="591.50"></text></g><g><title>alloc::alloc::alloc_zeroed (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="565" width="0.0953%" height="15" fill="rgb(241,228,46)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="575.50"></text></g><g><title>__memset_avx2_unaligned_erms (138,365,385 samples, 0.10%)</title><rect x="85.9793%" y="549" width="0.0953%" height="15" fill="rgb(223,209,38)" fg:x="124863014714" fg:w="138365385"/><text x="86.2293%" y="559.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign (271,219,536 samples, 0.19%)</title><rect x="86.0746%" y="709" width="0.1868%" height="15" fill="rgb(236,164,45)" fg:x="125001380099" fg:w="271219536"/><text x="86.3246%" y="719.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with (271,219,536 samples, 0.19%)</title><rect x="86.0746%" y="693" width="0.1868%" height="15" fill="rgb(231,15,5)" fg:x="125001380099" fg:w="271219536"/><text x="86.3246%" y="703.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_same_shape (271,219,536 samples, 0.19%)</title><rect x="86.0746%" y="677" width="0.1868%" height="15" fill="rgb(252,35,15)" fg:x="125001380099" fg:w="271219536"/><text x="86.3246%" y="687.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows (267,745,002 samples, 0.18%)</title><rect x="86.0770%" y="661" width="0.1844%" height="15" fill="rgb(248,181,18)" fg:x="125004854633" fg:w="267745002"/><text x="86.3270%" y="671.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (267,745,002 samples, 0.18%)</title><rect x="86.0770%" y="645" width="0.1844%" height="15" fill="rgb(233,39,42)" fg:x="125004854633" fg:w="267745002"/><text x="86.3270%" y="655.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (267,745,002 samples, 0.18%)</title><rect x="86.0770%" y="629" width="0.1844%" height="15" fill="rgb(238,110,33)" fg:x="125004854633" fg:w="267745002"/><text x="86.3270%" y="639.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (267,745,002 samples, 0.18%)</title><rect x="86.0770%" y="613" width="0.1844%" height="15" fill="rgb(233,195,10)" fg:x="125004854633" fg:w="267745002"/><text x="86.3270%" y="623.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::zip_mut_with_by_rows::_{{closure}} (267,745,002 samples, 0.18%)</title><rect x="86.0770%" y="597" width="0.1844%" height="15" fill="rgb(254,105,3)" fg:x="125004854633" fg:w="267745002"/><text x="86.3270%" y="607.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (267,745,002 samples, 0.18%)</title><rect x="86.0770%" y="581" width="0.1844%" height="15" fill="rgb(221,225,9)" fg:x="125004854633" fg:w="267745002"/><text x="86.3270%" y="591.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (267,745,002 samples, 0.18%)</title><rect x="86.0770%" y="565" width="0.1844%" height="15" fill="rgb(224,227,45)" fg:x="125004854633" fg:w="267745002"/><text x="86.3270%" y="575.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (267,745,002 samples, 0.18%)</title><rect x="86.0770%" y="549" width="0.1844%" height="15" fill="rgb(229,198,43)" fg:x="125004854633" fg:w="267745002"/><text x="86.3270%" y="559.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (267,745,002 samples, 0.18%)</title><rect x="86.0770%" y="533" width="0.1844%" height="15" fill="rgb(206,209,35)" fg:x="125004854633" fg:w="267745002"/><text x="86.3270%" y="543.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (267,745,002 samples, 0.18%)</title><rect x="86.0770%" y="517" width="0.1844%" height="15" fill="rgb(245,195,53)" fg:x="125004854633" fg:w="267745002"/><text x="86.3270%" y="527.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (246,432,043 samples, 0.17%)</title><rect x="86.0917%" y="501" width="0.1697%" height="15" fill="rgb(240,92,26)" fg:x="125026167592" fg:w="246432043"/><text x="86.3417%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (246,432,043 samples, 0.17%)</title><rect x="86.0917%" y="485" width="0.1697%" height="15" fill="rgb(207,40,23)" fg:x="125026167592" fg:w="246432043"/><text x="86.3417%" y="495.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::assign::_{{closure}} (185,000,082 samples, 0.13%)</title><rect x="86.1340%" y="469" width="0.1274%" height="15" fill="rgb(223,111,35)" fg:x="125087599553" fg:w="185000082"/><text x="86.3840%" y="479.50"></text></g><g><title>core::clone::Clone::clone_from (185,000,082 samples, 0.13%)</title><rect x="86.1340%" y="453" width="0.1274%" height="15" fill="rgb(229,147,28)" fg:x="125087599553" fg:w="185000082"/><text x="86.3840%" y="463.50"></text></g><g><title>[unknown] (28,453,604 samples, 0.02%)</title><rect x="86.2418%" y="437" width="0.0196%" height="15" fill="rgb(211,29,28)" fg:x="125244146031" fg:w="28453604"/><text x="86.4918%" y="447.50"></text></g><g><title>[unknown] (24,942,286 samples, 0.02%)</title><rect x="86.2442%" y="421" width="0.0172%" height="15" fill="rgb(228,72,33)" fg:x="125247657349" fg:w="24942286"/><text x="86.4942%" y="431.50"></text></g><g><title>[unknown] (24,942,286 samples, 0.02%)</title><rect x="86.2442%" y="405" width="0.0172%" height="15" fill="rgb(205,214,31)" fg:x="125247657349" fg:w="24942286"/><text x="86.4942%" y="415.50"></text></g><g><title>[unknown] (24,942,286 samples, 0.02%)</title><rect x="86.2442%" y="389" width="0.0172%" height="15" fill="rgb(224,111,15)" fg:x="125247657349" fg:w="24942286"/><text x="86.4942%" y="399.50"></text></g><g><title>[unknown] (24,942,286 samples, 0.02%)</title><rect x="86.2442%" y="373" width="0.0172%" height="15" fill="rgb(253,21,26)" fg:x="125247657349" fg:w="24942286"/><text x="86.4942%" y="383.50"></text></g><g><title>[unknown] (24,942,286 samples, 0.02%)</title><rect x="86.2442%" y="357" width="0.0172%" height="15" fill="rgb(245,139,43)" fg:x="125247657349" fg:w="24942286"/><text x="86.4942%" y="367.50"></text></g><g><title>[unknown] (24,942,286 samples, 0.02%)</title><rect x="86.2442%" y="341" width="0.0172%" height="15" fill="rgb(252,170,7)" fg:x="125247657349" fg:w="24942286"/><text x="86.4942%" y="351.50"></text></g><g><title>[unknown] (24,942,286 samples, 0.02%)</title><rect x="86.2442%" y="325" width="0.0172%" height="15" fill="rgb(231,118,14)" fg:x="125247657349" fg:w="24942286"/><text x="86.4942%" y="335.50"></text></g><g><title>[unknown] (24,942,286 samples, 0.02%)</title><rect x="86.2442%" y="309" width="0.0172%" height="15" fill="rgb(238,83,0)" fg:x="125247657349" fg:w="24942286"/><text x="86.4942%" y="319.50"></text></g><g><title>[unknown] (21,357,199 samples, 0.01%)</title><rect x="86.2467%" y="293" width="0.0147%" height="15" fill="rgb(221,39,39)" fg:x="125251242436" fg:w="21357199"/><text x="86.4967%" y="303.50"></text></g><g><title>[unknown] (17,780,475 samples, 0.01%)</title><rect x="86.2491%" y="277" width="0.0122%" height="15" fill="rgb(222,119,46)" fg:x="125254819160" fg:w="17780475"/><text x="86.4991%" y="287.50"></text></g><g><title>ndarray::impl_clone::&lt;impl core::clone::Clone for ndarray::ArrayBase&lt;S,D&gt;&gt;::clone (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="677" width="0.0110%" height="15" fill="rgb(222,165,49)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="687.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as ndarray::data_traits::RawDataClone&gt;::clone_with_ptr (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="661" width="0.0110%" height="15" fill="rgb(219,113,52)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="671.50"></text></g><g><title>&lt;ndarray::data_repr::OwnedRepr&lt;A&gt; as core::clone::Clone&gt;::clone (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="645" width="0.0110%" height="15" fill="rgb(214,7,15)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="629" width="0.0110%" height="15" fill="rgb(235,32,4)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="613" width="0.0110%" height="15" fill="rgb(238,90,54)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="597" width="0.0110%" height="15" fill="rgb(213,208,19)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="581" width="0.0110%" height="15" fill="rgb(233,156,4)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="565" width="0.0110%" height="15" fill="rgb(207,194,5)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="549" width="0.0110%" height="15" fill="rgb(206,111,30)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="533" width="0.0110%" height="15" fill="rgb(243,70,54)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15,946,377 samples, 0.01%)</title><rect x="86.2614%" y="517" width="0.0110%" height="15" fill="rgb(242,28,8)" fg:x="125272599635" fg:w="15946377"/><text x="86.5114%" y="527.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (31,422,237 samples, 0.02%)</title><rect x="86.2817%" y="533" width="0.0216%" height="15" fill="rgb(219,106,18)" fg:x="125302187287" fg:w="31422237"/><text x="86.5317%" y="543.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (27,904,963 samples, 0.02%)</title><rect x="86.2842%" y="517" width="0.0192%" height="15" fill="rgb(244,222,10)" fg:x="125305704561" fg:w="27904963"/><text x="86.5342%" y="527.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (27,904,963 samples, 0.02%)</title><rect x="86.2842%" y="501" width="0.0192%" height="15" fill="rgb(236,179,52)" fg:x="125305704561" fg:w="27904963"/><text x="86.5342%" y="511.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (33,197,180 samples, 0.02%)</title><rect x="86.2817%" y="581" width="0.0229%" height="15" fill="rgb(213,23,39)" fg:x="125302187287" fg:w="33197180"/><text x="86.5317%" y="591.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (33,197,180 samples, 0.02%)</title><rect x="86.2817%" y="565" width="0.0229%" height="15" fill="rgb(238,48,10)" fg:x="125302187287" fg:w="33197180"/><text x="86.5317%" y="575.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (33,197,180 samples, 0.02%)</title><rect x="86.2817%" y="549" width="0.0229%" height="15" fill="rgb(251,196,23)" fg:x="125302187287" fg:w="33197180"/><text x="86.5317%" y="559.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (50,332,437 samples, 0.03%)</title><rect x="86.2748%" y="677" width="0.0347%" height="15" fill="rgb(250,152,24)" fg:x="125292108971" fg:w="50332437"/><text x="86.5248%" y="687.50"></text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (50,332,437 samples, 0.03%)</title><rect x="86.2748%" y="661" width="0.0347%" height="15" fill="rgb(209,150,17)" fg:x="125292108971" fg:w="50332437"/><text x="86.5248%" y="671.50"></text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (43,769,792 samples, 0.03%)</title><rect x="86.2793%" y="645" width="0.0301%" height="15" fill="rgb(234,202,34)" fg:x="125298671616" fg:w="43769792"/><text x="86.5293%" y="655.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (43,769,792 samples, 0.03%)</title><rect x="86.2793%" y="629" width="0.0301%" height="15" fill="rgb(253,148,53)" fg:x="125298671616" fg:w="43769792"/><text x="86.5293%" y="639.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (40,254,121 samples, 0.03%)</title><rect x="86.2817%" y="613" width="0.0277%" height="15" fill="rgb(218,129,16)" fg:x="125302187287" fg:w="40254121"/><text x="86.5317%" y="623.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (40,254,121 samples, 0.03%)</title><rect x="86.2817%" y="597" width="0.0277%" height="15" fill="rgb(216,85,19)" fg:x="125302187287" fg:w="40254121"/><text x="86.5317%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (173,895,380 samples, 0.12%)</title><rect x="86.3095%" y="581" width="0.1197%" height="15" fill="rgb(235,228,7)" fg:x="125342441408" fg:w="173895380"/><text x="86.5595%" y="591.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (173,895,380 samples, 0.12%)</title><rect x="86.3095%" y="565" width="0.1197%" height="15" fill="rgb(245,175,0)" fg:x="125342441408" fg:w="173895380"/><text x="86.5595%" y="575.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (166,972,796 samples, 0.11%)</title><rect x="86.3142%" y="549" width="0.1150%" height="15" fill="rgb(208,168,36)" fg:x="125349363992" fg:w="166972796"/><text x="86.5642%" y="559.50"></text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (166,972,796 samples, 0.11%)</title><rect x="86.3142%" y="533" width="0.1150%" height="15" fill="rgb(246,171,24)" fg:x="125349363992" fg:w="166972796"/><text x="86.5642%" y="543.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::tanh (166,972,796 samples, 0.11%)</title><rect x="86.3142%" y="517" width="0.1150%" height="15" fill="rgb(215,142,24)" fg:x="125349363992" fg:w="166972796"/><text x="86.5642%" y="527.50"></text></g><g><title>__tanh (166,972,796 samples, 0.11%)</title><rect x="86.3142%" y="501" width="0.1150%" height="15" fill="rgb(250,187,7)" fg:x="125349363992" fg:w="166972796"/><text x="86.5642%" y="511.50"></text></g><g><title>__expm1_fma (110,906,894 samples, 0.08%)</title><rect x="86.3528%" y="485" width="0.0764%" height="15" fill="rgb(228,66,33)" fg:x="125405429894" fg:w="110906894"/><text x="86.6028%" y="495.50"></text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::compute_jacobian (125,385,736,116 samples, 86.34%)</title><rect x="0.0936%" y="725" width="86.3393%" height="15" fill="rgb(234,215,21)" fg:x="135908093" fg:w="125385736116"/><text x="0.3436%" y="735.50">rkl::core::optimizers::MarquardtOptimizer::compute_jacobian</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (249,044,574 samples, 0.17%)</title><rect x="86.2614%" y="709" width="0.1715%" height="15" fill="rgb(222,191,20)" fg:x="125272599635" fg:w="249044574"/><text x="86.5114%" y="719.50"></text></g><g><title>rkl::core::layers::Dense::forward (249,044,574 samples, 0.17%)</title><rect x="86.2614%" y="693" width="0.1715%" height="15" fill="rgb(245,79,54)" fg:x="125272599635" fg:w="249044574"/><text x="86.5114%" y="703.50"></text></g><g><title>rkl::core::activations::Activation::forward (179,202,801 samples, 0.12%)</title><rect x="86.3095%" y="677" width="0.1234%" height="15" fill="rgb(240,10,37)" fg:x="125342441408" fg:w="179202801"/><text x="86.5595%" y="687.50"></text></g><g><title>rkl::core::activations::tanh_forward (179,202,801 samples, 0.12%)</title><rect x="86.3095%" y="661" width="0.1234%" height="15" fill="rgb(214,192,32)" fg:x="125342441408" fg:w="179202801"/><text x="86.5595%" y="671.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (179,202,801 samples, 0.12%)</title><rect x="86.3095%" y="645" width="0.1234%" height="15" fill="rgb(209,36,54)" fg:x="125342441408" fg:w="179202801"/><text x="86.5595%" y="655.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (179,202,801 samples, 0.12%)</title><rect x="86.3095%" y="629" width="0.1234%" height="15" fill="rgb(220,10,11)" fg:x="125342441408" fg:w="179202801"/><text x="86.5595%" y="639.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (179,202,801 samples, 0.12%)</title><rect x="86.3095%" y="613" width="0.1234%" height="15" fill="rgb(221,106,17)" fg:x="125342441408" fg:w="179202801"/><text x="86.5595%" y="623.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (179,202,801 samples, 0.12%)</title><rect x="86.3095%" y="597" width="0.1234%" height="15" fill="rgb(251,142,44)" fg:x="125342441408" fg:w="179202801"/><text x="86.5595%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19,783,384 samples, 0.01%)</title><rect x="86.4329%" y="613" width="0.0136%" height="15" fill="rgb(238,13,15)" fg:x="125521644209" fg:w="19783384"/><text x="86.6829%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19,783,384 samples, 0.01%)</title><rect x="86.4329%" y="597" width="0.0136%" height="15" fill="rgb(208,107,27)" fg:x="125521644209" fg:w="19783384"/><text x="86.6829%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (19,783,384 samples, 0.01%)</title><rect x="86.4329%" y="581" width="0.0136%" height="15" fill="rgb(205,136,37)" fg:x="125521644209" fg:w="19783384"/><text x="86.6829%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (19,783,384 samples, 0.01%)</title><rect x="86.4329%" y="565" width="0.0136%" height="15" fill="rgb(250,205,27)" fg:x="125521644209" fg:w="19783384"/><text x="86.6829%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19,783,384 samples, 0.01%)</title><rect x="86.4329%" y="549" width="0.0136%" height="15" fill="rgb(210,80,43)" fg:x="125521644209" fg:w="19783384"/><text x="86.6829%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19,783,384 samples, 0.01%)</title><rect x="86.4329%" y="533" width="0.0136%" height="15" fill="rgb(247,160,36)" fg:x="125521644209" fg:w="19783384"/><text x="86.6829%" y="543.50"></text></g><g><title>alloc::alloc::alloc (19,783,384 samples, 0.01%)</title><rect x="86.4329%" y="517" width="0.0136%" height="15" fill="rgb(234,13,49)" fg:x="125521644209" fg:w="19783384"/><text x="86.6829%" y="527.50"></text></g><g><title>__GI___libc_malloc (19,783,384 samples, 0.01%)</title><rect x="86.4329%" y="501" width="0.0136%" height="15" fill="rgb(234,122,0)" fg:x="125521644209" fg:w="19783384"/><text x="86.6829%" y="511.50"></text></g><g><title>_int_malloc (19,783,384 samples, 0.01%)</title><rect x="86.4329%" y="485" width="0.0136%" height="15" fill="rgb(207,146,38)" fg:x="125521644209" fg:w="19783384"/><text x="86.6829%" y="495.50"></text></g><g><title>sysmalloc (19,783,384 samples, 0.01%)</title><rect x="86.4329%" y="469" width="0.0136%" height="15" fill="rgb(207,177,25)" fg:x="125521644209" fg:w="19783384"/><text x="86.6829%" y="479.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (328,669,132 samples, 0.23%)</title><rect x="86.4329%" y="709" width="0.2263%" height="15" fill="rgb(211,178,42)" fg:x="125521644209" fg:w="328669132"/><text x="86.6829%" y="719.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (328,669,132 samples, 0.23%)</title><rect x="86.4329%" y="693" width="0.2263%" height="15" fill="rgb(230,69,54)" fg:x="125521644209" fg:w="328669132"/><text x="86.6829%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (328,669,132 samples, 0.23%)</title><rect x="86.4329%" y="677" width="0.2263%" height="15" fill="rgb(214,135,41)" fg:x="125521644209" fg:w="328669132"/><text x="86.6829%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (328,669,132 samples, 0.23%)</title><rect x="86.4329%" y="661" width="0.2263%" height="15" fill="rgb(237,67,25)" fg:x="125521644209" fg:w="328669132"/><text x="86.6829%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (328,669,132 samples, 0.23%)</title><rect x="86.4329%" y="645" width="0.2263%" height="15" fill="rgb(222,189,50)" fg:x="125521644209" fg:w="328669132"/><text x="86.6829%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (328,669,132 samples, 0.23%)</title><rect x="86.4329%" y="629" width="0.2263%" height="15" fill="rgb(245,148,34)" fg:x="125521644209" fg:w="328669132"/><text x="86.6829%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (308,885,748 samples, 0.21%)</title><rect x="86.4465%" y="613" width="0.2127%" height="15" fill="rgb(222,29,6)" fg:x="125541427593" fg:w="308885748"/><text x="86.6965%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (308,885,748 samples, 0.21%)</title><rect x="86.4465%" y="597" width="0.2127%" height="15" fill="rgb(221,189,43)" fg:x="125541427593" fg:w="308885748"/><text x="86.6965%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (308,885,748 samples, 0.21%)</title><rect x="86.4465%" y="581" width="0.2127%" height="15" fill="rgb(207,36,27)" fg:x="125541427593" fg:w="308885748"/><text x="86.6965%" y="591.50"></text></g><g><title>[unknown] (233,044,874 samples, 0.16%)</title><rect x="86.4987%" y="565" width="0.1605%" height="15" fill="rgb(217,90,24)" fg:x="125617268467" fg:w="233044874"/><text x="86.7487%" y="575.50"></text></g><g><title>[unknown] (208,317,601 samples, 0.14%)</title><rect x="86.5157%" y="549" width="0.1434%" height="15" fill="rgb(224,66,35)" fg:x="125641995740" fg:w="208317601"/><text x="86.7657%" y="559.50"></text></g><g><title>[unknown] (204,791,227 samples, 0.14%)</title><rect x="86.5182%" y="533" width="0.1410%" height="15" fill="rgb(221,13,50)" fg:x="125645522114" fg:w="204791227"/><text x="86.7682%" y="543.50"></text></g><g><title>[unknown] (201,302,891 samples, 0.14%)</title><rect x="86.5206%" y="517" width="0.1386%" height="15" fill="rgb(236,68,49)" fg:x="125649010450" fg:w="201302891"/><text x="86.7706%" y="527.50"></text></g><g><title>[unknown] (184,743,652 samples, 0.13%)</title><rect x="86.5320%" y="501" width="0.1272%" height="15" fill="rgb(229,146,28)" fg:x="125665569689" fg:w="184743652"/><text x="86.7820%" y="511.50"></text></g><g><title>[unknown] (153,508,692 samples, 0.11%)</title><rect x="86.5535%" y="485" width="0.1057%" height="15" fill="rgb(225,31,38)" fg:x="125696804649" fg:w="153508692"/><text x="86.8035%" y="495.50"></text></g><g><title>[unknown] (153,508,692 samples, 0.11%)</title><rect x="86.5535%" y="469" width="0.1057%" height="15" fill="rgb(250,208,3)" fg:x="125696804649" fg:w="153508692"/><text x="86.8035%" y="479.50"></text></g><g><title>[unknown] (135,819,618 samples, 0.09%)</title><rect x="86.5656%" y="453" width="0.0935%" height="15" fill="rgb(246,54,23)" fg:x="125714493723" fg:w="135819618"/><text x="86.8156%" y="463.50"></text></g><g><title>[unknown] (121,928,721 samples, 0.08%)</title><rect x="86.5752%" y="437" width="0.0840%" height="15" fill="rgb(243,76,11)" fg:x="125728384620" fg:w="121928721"/><text x="86.8252%" y="447.50"></text></g><g><title>[unknown] (77,787,547 samples, 0.05%)</title><rect x="86.6056%" y="421" width="0.0536%" height="15" fill="rgb(245,21,50)" fg:x="125772525794" fg:w="77787547"/><text x="86.8556%" y="431.50"></text></g><g><title>[unknown] (74,286,447 samples, 0.05%)</title><rect x="86.6080%" y="405" width="0.0512%" height="15" fill="rgb(228,9,43)" fg:x="125776026894" fg:w="74286447"/><text x="86.8580%" y="415.50"></text></g><g><title>[unknown] (57,289,476 samples, 0.04%)</title><rect x="86.6197%" y="389" width="0.0394%" height="15" fill="rgb(208,100,47)" fg:x="125793023865" fg:w="57289476"/><text x="86.8697%" y="399.50"></text></g><g><title>[unknown] (53,783,243 samples, 0.04%)</title><rect x="86.6221%" y="373" width="0.0370%" height="15" fill="rgb(232,26,8)" fg:x="125796530098" fg:w="53783243"/><text x="86.8721%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;&gt; (226,951,062 samples, 0.16%)</title><rect x="86.6616%" y="709" width="0.1563%" height="15" fill="rgb(216,166,38)" fg:x="125853864771" fg:w="226951062"/><text x="86.9116%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt; (226,951,062 samples, 0.16%)</title><rect x="86.6616%" y="693" width="0.1563%" height="15" fill="rgb(251,202,51)" fg:x="125853864771" fg:w="226951062"/><text x="86.9116%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (226,951,062 samples, 0.16%)</title><rect x="86.6616%" y="677" width="0.1563%" height="15" fill="rgb(254,216,34)" fg:x="125853864771" fg:w="226951062"/><text x="86.9116%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (226,951,062 samples, 0.16%)</title><rect x="86.6616%" y="661" width="0.1563%" height="15" fill="rgb(251,32,27)" fg:x="125853864771" fg:w="226951062"/><text x="86.9116%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (226,951,062 samples, 0.16%)</title><rect x="86.6616%" y="645" width="0.1563%" height="15" fill="rgb(208,127,28)" fg:x="125853864771" fg:w="226951062"/><text x="86.9116%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (226,951,062 samples, 0.16%)</title><rect x="86.6616%" y="629" width="0.1563%" height="15" fill="rgb(224,137,22)" fg:x="125853864771" fg:w="226951062"/><text x="86.9116%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (226,951,062 samples, 0.16%)</title><rect x="86.6616%" y="613" width="0.1563%" height="15" fill="rgb(254,70,32)" fg:x="125853864771" fg:w="226951062"/><text x="86.9116%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (226,951,062 samples, 0.16%)</title><rect x="86.6616%" y="597" width="0.1563%" height="15" fill="rgb(229,75,37)" fg:x="125853864771" fg:w="226951062"/><text x="86.9116%" y="607.50"></text></g><g><title>__GI___libc_free (226,951,062 samples, 0.16%)</title><rect x="86.6616%" y="581" width="0.1563%" height="15" fill="rgb(252,64,23)" fg:x="125853864771" fg:w="226951062"/><text x="86.9116%" y="591.50"></text></g><g><title>systrim (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="565" width="0.1490%" height="15" fill="rgb(232,162,48)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="575.50"></text></g><g><title>__glibc_morecore (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="549" width="0.1490%" height="15" fill="rgb(246,160,12)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="559.50"></text></g><g><title>__GI___sbrk (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="533" width="0.1490%" height="15" fill="rgb(247,166,0)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="543.50"></text></g><g><title>__brk (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="517" width="0.1490%" height="15" fill="rgb(249,219,21)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="527.50"></text></g><g><title>[unknown] (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="501" width="0.1490%" height="15" fill="rgb(205,209,3)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="511.50"></text></g><g><title>[unknown] (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="485" width="0.1490%" height="15" fill="rgb(243,44,1)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="495.50"></text></g><g><title>[unknown] (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="469" width="0.1490%" height="15" fill="rgb(206,159,16)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="479.50"></text></g><g><title>[unknown] (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="453" width="0.1490%" height="15" fill="rgb(244,77,30)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="463.50"></text></g><g><title>[unknown] (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="437" width="0.1490%" height="15" fill="rgb(218,69,12)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="447.50"></text></g><g><title>[unknown] (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="421" width="0.1490%" height="15" fill="rgb(212,87,7)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="431.50"></text></g><g><title>[unknown] (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="405" width="0.1490%" height="15" fill="rgb(245,114,25)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="415.50"></text></g><g><title>[unknown] (216,440,932 samples, 0.15%)</title><rect x="86.6689%" y="389" width="0.1490%" height="15" fill="rgb(210,61,42)" fg:x="125864374901" fg:w="216440932"/><text x="86.9189%" y="399.50"></text></g><g><title>[unknown] (212,894,916 samples, 0.15%)</title><rect x="86.6713%" y="373" width="0.1466%" height="15" fill="rgb(211,52,33)" fg:x="125867920917" fg:w="212894916"/><text x="86.9213%" y="383.50"></text></g><g><title>[unknown] (209,370,493 samples, 0.14%)</title><rect x="86.6737%" y="357" width="0.1442%" height="15" fill="rgb(234,58,33)" fg:x="125871445340" fg:w="209370493"/><text x="86.9237%" y="367.50"></text></g><g><title>[unknown] (198,800,249 samples, 0.14%)</title><rect x="86.6810%" y="341" width="0.1369%" height="15" fill="rgb(220,115,36)" fg:x="125882015584" fg:w="198800249"/><text x="86.9310%" y="351.50"></text></g><g><title>[unknown] (184,765,348 samples, 0.13%)</title><rect x="86.6907%" y="325" width="0.1272%" height="15" fill="rgb(243,153,54)" fg:x="125896050485" fg:w="184765348"/><text x="86.9407%" y="335.50"></text></g><g><title>[unknown] (80,026,519 samples, 0.06%)</title><rect x="86.7628%" y="309" width="0.0551%" height="15" fill="rgb(251,47,18)" fg:x="126000789314" fg:w="80026519"/><text x="87.0128%" y="319.50"></text></g><g><title>[unknown] (44,938,894 samples, 0.03%)</title><rect x="86.7869%" y="293" width="0.0309%" height="15" fill="rgb(242,102,42)" fg:x="126035876939" fg:w="44938894"/><text x="87.0369%" y="303.50"></text></g><g><title>[unknown] (27,856,974 samples, 0.02%)</title><rect x="86.7987%" y="277" width="0.0192%" height="15" fill="rgb(234,31,38)" fg:x="126052958859" fg:w="27856974"/><text x="87.0487%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (133,454,860 samples, 0.09%)</title><rect x="86.8372%" y="677" width="0.0919%" height="15" fill="rgb(221,117,51)" fg:x="126108800996" fg:w="133454860"/><text x="87.0872%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (102,012,902 samples, 0.07%)</title><rect x="86.8588%" y="661" width="0.0702%" height="15" fill="rgb(212,20,18)" fg:x="126140242954" fg:w="102012902"/><text x="87.1088%" y="671.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (102,012,902 samples, 0.07%)</title><rect x="86.8588%" y="645" width="0.0702%" height="15" fill="rgb(245,133,36)" fg:x="126140242954" fg:w="102012902"/><text x="87.1088%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (102,012,902 samples, 0.07%)</title><rect x="86.8588%" y="629" width="0.0702%" height="15" fill="rgb(212,6,19)" fg:x="126140242954" fg:w="102012902"/><text x="87.1088%" y="639.50"></text></g><g><title>[unknown] (38,668,854 samples, 0.03%)</title><rect x="86.9291%" y="677" width="0.0266%" height="15" fill="rgb(218,1,36)" fg:x="126242255856" fg:w="38668854"/><text x="87.1791%" y="687.50"></text></g><g><title>[unknown] (35,023,926 samples, 0.02%)</title><rect x="86.9316%" y="661" width="0.0241%" height="15" fill="rgb(246,84,54)" fg:x="126245900784" fg:w="35023926"/><text x="87.1816%" y="671.50"></text></g><g><title>[unknown] (35,023,926 samples, 0.02%)</title><rect x="86.9316%" y="645" width="0.0241%" height="15" fill="rgb(242,110,6)" fg:x="126245900784" fg:w="35023926"/><text x="87.1816%" y="655.50"></text></g><g><title>[unknown] (35,023,926 samples, 0.02%)</title><rect x="86.9316%" y="629" width="0.0241%" height="15" fill="rgb(214,47,5)" fg:x="126245900784" fg:w="35023926"/><text x="87.1816%" y="639.50"></text></g><g><title>[unknown] (28,122,725 samples, 0.02%)</title><rect x="86.9363%" y="613" width="0.0194%" height="15" fill="rgb(218,159,25)" fg:x="126252801985" fg:w="28122725"/><text x="87.1863%" y="623.50"></text></g><g><title>[unknown] (21,223,006 samples, 0.01%)</title><rect x="86.9411%" y="597" width="0.0146%" height="15" fill="rgb(215,211,28)" fg:x="126259701704" fg:w="21223006"/><text x="87.1911%" y="607.50"></text></g><g><title>[unknown] (17,637,234 samples, 0.01%)</title><rect x="86.9435%" y="581" width="0.0121%" height="15" fill="rgb(238,59,32)" fg:x="126263287476" fg:w="17637234"/><text x="87.1935%" y="591.50"></text></g><g><title>[unknown] (17,637,234 samples, 0.01%)</title><rect x="86.9435%" y="565" width="0.0121%" height="15" fill="rgb(226,82,3)" fg:x="126263287476" fg:w="17637234"/><text x="87.1935%" y="575.50"></text></g><g><title>[unknown] (17,637,234 samples, 0.01%)</title><rect x="86.9435%" y="549" width="0.0121%" height="15" fill="rgb(240,164,32)" fg:x="126263287476" fg:w="17637234"/><text x="87.1935%" y="559.50"></text></g><g><title>[unknown] (17,637,234 samples, 0.01%)</title><rect x="86.9435%" y="533" width="0.0121%" height="15" fill="rgb(232,46,7)" fg:x="126263287476" fg:w="17637234"/><text x="87.1935%" y="543.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_row_slice (297,364,347 samples, 0.20%)</title><rect x="86.8226%" y="709" width="0.2048%" height="15" fill="rgb(229,129,53)" fg:x="126087688709" fg:w="297364347"/><text x="87.0726%" y="719.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_row_slice_generic (297,364,347 samples, 0.20%)</title><rect x="86.8226%" y="693" width="0.2048%" height="15" fill="rgb(234,188,29)" fg:x="126087688709" fg:w="297364347"/><text x="87.0726%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (104,128,346 samples, 0.07%)</title><rect x="86.9557%" y="677" width="0.0717%" height="15" fill="rgb(246,141,4)" fg:x="126280924710" fg:w="104128346"/><text x="87.2057%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (104,128,346 samples, 0.07%)</title><rect x="86.9557%" y="661" width="0.0717%" height="15" fill="rgb(229,23,39)" fg:x="126280924710" fg:w="104128346"/><text x="87.2057%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (100,580,576 samples, 0.07%)</title><rect x="86.9581%" y="645" width="0.0693%" height="15" fill="rgb(206,12,3)" fg:x="126284472480" fg:w="100580576"/><text x="87.2081%" y="655.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::identity (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="709" width="0.0571%" height="15" fill="rgb(252,226,20)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="719.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::identity_generic (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="693" width="0.0571%" height="15" fill="rgb(216,123,35)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="703.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_diagonal_element_generic (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="677" width="0.0571%" height="15" fill="rgb(212,68,40)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="687.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros_generic (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="661" width="0.0571%" height="15" fill="rgb(254,125,32)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="671.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_element_generic (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="645" width="0.0571%" height="15" fill="rgb(253,97,22)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="655.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_iterator_generic (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="629" width="0.0571%" height="15" fill="rgb(241,101,14)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="639.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::allocate_from_iterator (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="613" width="0.0571%" height="15" fill="rgb(238,103,29)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="597" width="0.0571%" height="15" fill="rgb(233,195,47)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="581" width="0.0571%" height="15" fill="rgb(246,218,30)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="565" width="0.0571%" height="15" fill="rgb(219,145,47)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="549" width="0.0571%" height="15" fill="rgb(243,12,26)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="533" width="0.0571%" height="15" fill="rgb(214,87,16)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="517" width="0.0571%" height="15" fill="rgb(208,99,42)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="501" width="0.0571%" height="15" fill="rgb(253,99,2)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="485" width="0.0571%" height="15" fill="rgb(220,168,23)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="469" width="0.0571%" height="15" fill="rgb(242,38,24)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="453" width="0.0571%" height="15" fill="rgb(225,182,9)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="437" width="0.0571%" height="15" fill="rgb(243,178,37)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="447.50"></text></g><g><title>core::ptr::write (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="421" width="0.0571%" height="15" fill="rgb(232,139,19)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="431.50"></text></g><g><title>__memset_avx2_unaligned_erms (82,931,785 samples, 0.06%)</title><rect x="87.0274%" y="405" width="0.0571%" height="15" fill="rgb(225,201,24)" fg:x="126385053056" fg:w="82931785"/><text x="87.2774%" y="415.50"></text></g><g><title>&lt;nalgebra::base::uninit::Uninit as nalgebra::base::uninit::InitStatus&lt;T&gt;&gt;::init (496,073,048 samples, 0.34%)</title><rect x="87.0845%" y="677" width="0.3416%" height="15" fill="rgb(221,47,46)" fg:x="126467984841" fg:w="496073048"/><text x="87.3345%" y="687.50"></text></g><g><title>[unknown] (87,794,564 samples, 0.06%)</title><rect x="87.3656%" y="661" width="0.0605%" height="15" fill="rgb(249,23,13)" fg:x="126876263325" fg:w="87794564"/><text x="87.6156%" y="671.50"></text></g><g><title>[unknown] (80,611,259 samples, 0.06%)</title><rect x="87.3706%" y="645" width="0.0555%" height="15" fill="rgb(219,9,5)" fg:x="126883446630" fg:w="80611259"/><text x="87.6206%" y="655.50"></text></g><g><title>[unknown] (77,047,760 samples, 0.05%)</title><rect x="87.3730%" y="629" width="0.0531%" height="15" fill="rgb(254,171,16)" fg:x="126887010129" fg:w="77047760"/><text x="87.6230%" y="639.50"></text></g><g><title>[unknown] (77,047,760 samples, 0.05%)</title><rect x="87.3730%" y="613" width="0.0531%" height="15" fill="rgb(230,171,20)" fg:x="126887010129" fg:w="77047760"/><text x="87.6230%" y="623.50"></text></g><g><title>[unknown] (70,145,792 samples, 0.05%)</title><rect x="87.3778%" y="597" width="0.0483%" height="15" fill="rgb(210,71,41)" fg:x="126893912097" fg:w="70145792"/><text x="87.6278%" y="607.50"></text></g><g><title>[unknown] (70,145,792 samples, 0.05%)</title><rect x="87.3778%" y="581" width="0.0483%" height="15" fill="rgb(206,173,20)" fg:x="126893912097" fg:w="70145792"/><text x="87.6278%" y="591.50"></text></g><g><title>[unknown] (63,253,075 samples, 0.04%)</title><rect x="87.3825%" y="565" width="0.0436%" height="15" fill="rgb(233,88,34)" fg:x="126900804814" fg:w="63253075"/><text x="87.6325%" y="575.50"></text></g><g><title>[unknown] (63,253,075 samples, 0.04%)</title><rect x="87.3825%" y="549" width="0.0436%" height="15" fill="rgb(223,209,46)" fg:x="126900804814" fg:w="63253075"/><text x="87.6325%" y="559.50"></text></g><g><title>[unknown] (59,929,818 samples, 0.04%)</title><rect x="87.3848%" y="533" width="0.0413%" height="15" fill="rgb(250,43,18)" fg:x="126904128071" fg:w="59929818"/><text x="87.6348%" y="543.50"></text></g><g><title>[unknown] (52,851,246 samples, 0.04%)</title><rect x="87.3897%" y="517" width="0.0364%" height="15" fill="rgb(208,13,10)" fg:x="126911206643" fg:w="52851246"/><text x="87.6397%" y="527.50"></text></g><g><title>[unknown] (38,602,283 samples, 0.03%)</title><rect x="87.3995%" y="501" width="0.0266%" height="15" fill="rgb(212,200,36)" fg:x="126925455606" fg:w="38602283"/><text x="87.6495%" y="511.50"></text></g><g><title>[unknown] (31,486,053 samples, 0.02%)</title><rect x="87.4044%" y="485" width="0.0217%" height="15" fill="rgb(225,90,30)" fg:x="126932571836" fg:w="31486053"/><text x="87.6544%" y="495.50"></text></g><g><title>[unknown] (31,486,053 samples, 0.02%)</title><rect x="87.4044%" y="469" width="0.0217%" height="15" fill="rgb(236,182,39)" fg:x="126932571836" fg:w="31486053"/><text x="87.6544%" y="479.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (48,215,466 samples, 0.03%)</title><rect x="87.4261%" y="677" width="0.0332%" height="15" fill="rgb(212,144,35)" fg:x="126964057889" fg:w="48215466"/><text x="87.6761%" y="687.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose (558,433,297 samples, 0.38%)</title><rect x="87.0845%" y="709" width="0.3845%" height="15" fill="rgb(228,63,44)" fg:x="126467984841" fg:w="558433297"/><text x="87.3345%" y="719.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose_to_uninit (558,433,297 samples, 0.38%)</title><rect x="87.0845%" y="693" width="0.3845%" height="15" fill="rgb(228,109,6)" fg:x="126467984841" fg:w="558433297"/><text x="87.3345%" y="703.50"></text></g><g><title>&lt;f64 as core::ops::arith::AddAssign&gt;::add_assign (79,614,584 samples, 0.05%)</title><rect x="87.4690%" y="661" width="0.0548%" height="15" fill="rgb(238,117,24)" fg:x="127026418138" fg:w="79614584"/><text x="87.7190%" y="671.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (142,561,119 samples, 0.10%)</title><rect x="87.4690%" y="709" width="0.0982%" height="15" fill="rgb(242,26,26)" fg:x="127026418138" fg:w="142561119"/><text x="87.7190%" y="719.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (142,561,119 samples, 0.10%)</title><rect x="87.4690%" y="693" width="0.0982%" height="15" fill="rgb(221,92,48)" fg:x="127026418138" fg:w="142561119"/><text x="87.7190%" y="703.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (142,561,119 samples, 0.10%)</title><rect x="87.4690%" y="677" width="0.0982%" height="15" fill="rgb(209,209,32)" fg:x="127026418138" fg:w="142561119"/><text x="87.7190%" y="687.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (62,946,535 samples, 0.04%)</title><rect x="87.5238%" y="661" width="0.0433%" height="15" fill="rgb(221,70,22)" fg:x="127106032722" fg:w="62946535"/><text x="87.7738%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (287,880,249 samples, 0.20%)</title><rect x="87.5721%" y="645" width="0.1982%" height="15" fill="rgb(248,145,5)" fg:x="127176048041" fg:w="287880249"/><text x="87.8221%" y="655.50"></text></g><g><title>[unknown] (141,538,391 samples, 0.10%)</title><rect x="87.6728%" y="629" width="0.0975%" height="15" fill="rgb(226,116,26)" fg:x="127322389899" fg:w="141538391"/><text x="87.9228%" y="639.50"></text></g><g><title>[unknown] (127,407,790 samples, 0.09%)</title><rect x="87.6826%" y="613" width="0.0877%" height="15" fill="rgb(244,5,17)" fg:x="127336520500" fg:w="127407790"/><text x="87.9326%" y="623.50"></text></g><g><title>[unknown] (127,407,790 samples, 0.09%)</title><rect x="87.6826%" y="597" width="0.0877%" height="15" fill="rgb(252,159,33)" fg:x="127336520500" fg:w="127407790"/><text x="87.9326%" y="607.50"></text></g><g><title>[unknown] (116,995,557 samples, 0.08%)</title><rect x="87.6897%" y="581" width="0.0806%" height="15" fill="rgb(206,71,0)" fg:x="127346932733" fg:w="116995557"/><text x="87.9397%" y="591.50"></text></g><g><title>[unknown] (109,930,262 samples, 0.08%)</title><rect x="87.6946%" y="565" width="0.0757%" height="15" fill="rgb(233,118,54)" fg:x="127353998028" fg:w="109930262"/><text x="87.9446%" y="575.50"></text></g><g><title>[unknown] (102,840,525 samples, 0.07%)</title><rect x="87.6995%" y="549" width="0.0708%" height="15" fill="rgb(234,83,48)" fg:x="127361087765" fg:w="102840525"/><text x="87.9495%" y="559.50"></text></g><g><title>[unknown] (93,151,022 samples, 0.06%)</title><rect x="87.7061%" y="533" width="0.0641%" height="15" fill="rgb(228,3,54)" fg:x="127370777268" fg:w="93151022"/><text x="87.9561%" y="543.50"></text></g><g><title>[unknown] (75,532,205 samples, 0.05%)</title><rect x="87.7183%" y="517" width="0.0520%" height="15" fill="rgb(226,155,13)" fg:x="127388396085" fg:w="75532205"/><text x="87.9683%" y="527.50"></text></g><g><title>[unknown] (68,398,694 samples, 0.05%)</title><rect x="87.7232%" y="501" width="0.0471%" height="15" fill="rgb(241,28,37)" fg:x="127395529596" fg:w="68398694"/><text x="87.9732%" y="511.50"></text></g><g><title>[unknown] (50,718,563 samples, 0.03%)</title><rect x="87.7354%" y="485" width="0.0349%" height="15" fill="rgb(233,93,10)" fg:x="127413209727" fg:w="50718563"/><text x="87.9854%" y="495.50"></text></g><g><title>[unknown] (37,826,025 samples, 0.03%)</title><rect x="87.7442%" y="469" width="0.0260%" height="15" fill="rgb(225,113,19)" fg:x="127426102265" fg:w="37826025"/><text x="87.9942%" y="479.50"></text></g><g><title>[unknown] (27,393,989 samples, 0.02%)</title><rect x="87.7514%" y="453" width="0.0189%" height="15" fill="rgb(241,2,18)" fg:x="127436534301" fg:w="27393989"/><text x="88.0014%" y="463.50"></text></g><g><title>[unknown] (23,850,845 samples, 0.02%)</title><rect x="87.7539%" y="437" width="0.0164%" height="15" fill="rgb(228,207,21)" fg:x="127440077445" fg:w="23850845"/><text x="88.0039%" y="447.50"></text></g><g><title>matrixmultiply::gemm::pack (305,459,203 samples, 0.21%)</title><rect x="87.5672%" y="661" width="0.2103%" height="15" fill="rgb(213,211,35)" fg:x="127168979257" fg:w="305459203"/><text x="87.8172%" y="671.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (4,249,406,796 samples, 2.93%)</title><rect x="88.0502%" y="533" width="2.9261%" height="15" fill="rgb(209,83,10)" fg:x="127870462417" fg:w="4249406796"/><text x="88.3002%" y="543.50">&lt;m..</text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (4,249,406,796 samples, 2.93%)</title><rect x="88.0502%" y="517" width="2.9261%" height="15" fill="rgb(209,164,1)" fg:x="127870462417" fg:w="4249406796"/><text x="88.3002%" y="527.50">co..</text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (1,508,963,160 samples, 1.04%)</title><rect x="90.9812%" y="533" width="1.0391%" height="15" fill="rgb(213,184,43)" fg:x="132126930551" fg:w="1508963160"/><text x="91.2312%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_pd (141,840,508 samples, 0.10%)</title><rect x="92.0202%" y="533" width="0.0977%" height="15" fill="rgb(231,61,34)" fg:x="133635893711" fg:w="141840508"/><text x="92.2702%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (141,840,508 samples, 0.10%)</title><rect x="92.0202%" y="517" width="0.0977%" height="15" fill="rgb(235,75,3)" fg:x="133635893711" fg:w="141840508"/><text x="92.2702%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (2,983,921,201 samples, 2.05%)</title><rect x="92.1252%" y="533" width="2.0547%" height="15" fill="rgb(220,106,47)" fg:x="133788258297" fg:w="2983921201"/><text x="92.3752%" y="543.50">c..</text></g><g><title>[unknown] (21,853,457 samples, 0.02%)</title><rect x="94.1648%" y="517" width="0.0150%" height="15" fill="rgb(210,196,33)" fg:x="136750326041" fg:w="21853457"/><text x="94.4148%" y="527.50"></text></g><g><title>[unknown] (21,853,457 samples, 0.02%)</title><rect x="94.1648%" y="501" width="0.0150%" height="15" fill="rgb(229,154,42)" fg:x="136750326041" fg:w="21853457"/><text x="94.4148%" y="511.50"></text></g><g><title>[unknown] (21,853,457 samples, 0.02%)</title><rect x="94.1648%" y="485" width="0.0150%" height="15" fill="rgb(228,114,26)" fg:x="136750326041" fg:w="21853457"/><text x="94.4148%" y="495.50"></text></g><g><title>[unknown] (21,853,457 samples, 0.02%)</title><rect x="94.1648%" y="469" width="0.0150%" height="15" fill="rgb(208,144,1)" fg:x="136750326041" fg:w="21853457"/><text x="94.4148%" y="479.50"></text></g><g><title>[unknown] (21,853,457 samples, 0.02%)</title><rect x="94.1648%" y="453" width="0.0150%" height="15" fill="rgb(239,112,37)" fg:x="136750326041" fg:w="21853457"/><text x="94.4148%" y="463.50"></text></g><g><title>[unknown] (21,853,457 samples, 0.02%)</title><rect x="94.1648%" y="437" width="0.0150%" height="15" fill="rgb(210,96,50)" fg:x="136750326041" fg:w="21853457"/><text x="94.4148%" y="447.50"></text></g><g><title>[unknown] (21,853,457 samples, 0.02%)</title><rect x="94.1648%" y="421" width="0.0150%" height="15" fill="rgb(222,178,2)" fg:x="136750326041" fg:w="21853457"/><text x="94.4148%" y="431.50"></text></g><g><title>[unknown] (21,853,457 samples, 0.02%)</title><rect x="94.1648%" y="405" width="0.0150%" height="15" fill="rgb(226,74,18)" fg:x="136750326041" fg:w="21853457"/><text x="94.4148%" y="415.50"></text></g><g><title>[unknown] (21,853,457 samples, 0.02%)</title><rect x="94.1648%" y="389" width="0.0150%" height="15" fill="rgb(225,67,54)" fg:x="136750326041" fg:w="21853457"/><text x="94.4148%" y="399.50"></text></g><g><title>[unknown] (21,853,457 samples, 0.02%)</title><rect x="94.1648%" y="373" width="0.0150%" height="15" fill="rgb(251,92,32)" fg:x="136750326041" fg:w="21853457"/><text x="94.4148%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_pd (214,922,023 samples, 0.15%)</title><rect x="94.1798%" y="533" width="0.1480%" height="15" fill="rgb(228,149,22)" fg:x="136772179498" fg:w="214922023"/><text x="94.4298%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_pd (323,258,851 samples, 0.22%)</title><rect x="94.3278%" y="533" width="0.2226%" height="15" fill="rgb(243,54,13)" fg:x="136987101521" fg:w="323258851"/><text x="94.5778%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (323,258,851 samples, 0.22%)</title><rect x="94.3278%" y="517" width="0.2226%" height="15" fill="rgb(243,180,28)" fg:x="136987101521" fg:w="323258851"/><text x="94.5778%" y="527.50"></text></g><g><title>core::ptr::write_unaligned (323,258,851 samples, 0.22%)</title><rect x="94.3278%" y="501" width="0.2226%" height="15" fill="rgb(208,167,24)" fg:x="136987101521" fg:w="323258851"/><text x="94.5778%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (323,258,851 samples, 0.22%)</title><rect x="94.3278%" y="485" width="0.2226%" height="15" fill="rgb(245,73,45)" fg:x="136987101521" fg:w="323258851"/><text x="94.5778%" y="495.50"></text></g><g><title>[unknown] (284,499,368 samples, 0.20%)</title><rect x="94.3545%" y="469" width="0.1959%" height="15" fill="rgb(237,203,48)" fg:x="137025861004" fg:w="284499368"/><text x="94.6045%" y="479.50"></text></g><g><title>[unknown] (260,590,235 samples, 0.18%)</title><rect x="94.3710%" y="453" width="0.1794%" height="15" fill="rgb(211,197,16)" fg:x="137049770137" fg:w="260590235"/><text x="94.6210%" y="463.50"></text></g><g><title>[unknown] (246,666,698 samples, 0.17%)</title><rect x="94.3806%" y="437" width="0.1699%" height="15" fill="rgb(243,99,51)" fg:x="137063693674" fg:w="246666698"/><text x="94.6306%" y="447.50"></text></g><g><title>[unknown] (239,691,590 samples, 0.17%)</title><rect x="94.3854%" y="421" width="0.1650%" height="15" fill="rgb(215,123,29)" fg:x="137070668782" fg:w="239691590"/><text x="94.6354%" y="431.50"></text></g><g><title>[unknown] (219,033,478 samples, 0.15%)</title><rect x="94.3996%" y="405" width="0.1508%" height="15" fill="rgb(239,186,37)" fg:x="137091326894" fg:w="219033478"/><text x="94.6496%" y="415.50"></text></g><g><title>[unknown] (215,544,949 samples, 0.15%)</title><rect x="94.4020%" y="389" width="0.1484%" height="15" fill="rgb(252,136,39)" fg:x="137094815423" fg:w="215544949"/><text x="94.6520%" y="399.50"></text></g><g><title>[unknown] (208,459,697 samples, 0.14%)</title><rect x="94.4069%" y="373" width="0.1435%" height="15" fill="rgb(223,213,32)" fg:x="137101900675" fg:w="208459697"/><text x="94.6569%" y="383.50"></text></g><g><title>[unknown] (182,045,219 samples, 0.13%)</title><rect x="94.4251%" y="357" width="0.1254%" height="15" fill="rgb(233,115,5)" fg:x="137128315153" fg:w="182045219"/><text x="94.6751%" y="367.50"></text></g><g><title>[unknown] (151,541,879 samples, 0.10%)</title><rect x="94.4461%" y="341" width="0.1044%" height="15" fill="rgb(207,226,44)" fg:x="137158818493" fg:w="151541879"/><text x="94.6961%" y="351.50"></text></g><g><title>[unknown] (124,383,700 samples, 0.09%)</title><rect x="94.4648%" y="325" width="0.0856%" height="15" fill="rgb(208,126,0)" fg:x="137185976672" fg:w="124383700"/><text x="94.7148%" y="335.50"></text></g><g><title>[unknown] (110,548,533 samples, 0.08%)</title><rect x="94.4743%" y="309" width="0.0761%" height="15" fill="rgb(244,66,21)" fg:x="137199811839" fg:w="110548533"/><text x="94.7243%" y="319.50"></text></g><g><title>[unknown] (89,430,238 samples, 0.06%)</title><rect x="94.4889%" y="293" width="0.0616%" height="15" fill="rgb(222,97,12)" fg:x="137220930134" fg:w="89430238"/><text x="94.7389%" y="303.50"></text></g><g><title>[unknown] (75,912,847 samples, 0.05%)</title><rect x="94.4982%" y="277" width="0.0523%" height="15" fill="rgb(219,213,19)" fg:x="137234447525" fg:w="75912847"/><text x="94.7482%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (71,407,590 samples, 0.05%)</title><rect x="94.5504%" y="533" width="0.0492%" height="15" fill="rgb(252,169,30)" fg:x="137310360372" fg:w="71407590"/><text x="94.8004%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (71,407,590 samples, 0.05%)</title><rect x="94.5504%" y="517" width="0.0492%" height="15" fill="rgb(206,32,51)" fg:x="137310360372" fg:w="71407590"/><text x="94.8004%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (49,546,449 samples, 0.03%)</title><rect x="94.5655%" y="501" width="0.0341%" height="15" fill="rgb(250,172,42)" fg:x="137332221513" fg:w="49546449"/><text x="94.8155%" y="511.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (9,912,344,276 samples, 6.83%)</title><rect x="87.7922%" y="581" width="6.8255%" height="15" fill="rgb(209,34,43)" fg:x="127495681390" fg:w="9912344276"/><text x="88.0422%" y="591.50">&lt;matrixmu..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (9,908,784,177 samples, 6.82%)</title><rect x="87.7946%" y="565" width="6.8231%" height="15" fill="rgb(223,11,35)" fg:x="127499241489" fg:w="9908784177"/><text x="88.0446%" y="575.50">matrixmul..</text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (9,895,311,477 samples, 6.81%)</title><rect x="87.8039%" y="549" width="6.8138%" height="15" fill="rgb(251,219,26)" fg:x="127512714189" fg:w="9895311477"/><text x="88.0539%" y="559.50">matrixmul..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (26,257,704 samples, 0.02%)</title><rect x="94.5996%" y="533" width="0.0181%" height="15" fill="rgb(231,119,3)" fg:x="137381767962" fg:w="26257704"/><text x="94.8496%" y="543.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::DMultiplyAdd&gt;::multiply_add (83,367,119 samples, 0.06%)</title><rect x="94.6297%" y="517" width="0.0574%" height="15" fill="rgb(216,97,11)" fg:x="137425428315" fg:w="83367119"/><text x="94.8797%" y="527.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_pd (83,367,119 samples, 0.06%)</title><rect x="94.6297%" y="501" width="0.0574%" height="15" fill="rgb(223,59,9)" fg:x="137425428315" fg:w="83367119"/><text x="94.8797%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_pd (28,237,817 samples, 0.02%)</title><rect x="94.6871%" y="517" width="0.0194%" height="15" fill="rgb(233,93,31)" fg:x="137508795434" fg:w="28237817"/><text x="94.9371%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_pd (55,622,713 samples, 0.04%)</title><rect x="94.7065%" y="517" width="0.0383%" height="15" fill="rgb(239,81,33)" fg:x="137537033251" fg:w="55622713"/><text x="94.9565%" y="527.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (10,128,819,354 samples, 6.97%)</title><rect x="87.7775%" y="629" width="6.9746%" height="15" fill="rgb(213,120,34)" fg:x="127474438460" fg:w="10128819354"/><text x="88.0275%" y="639.50">matrixmul..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (10,128,819,354 samples, 6.97%)</title><rect x="87.7775%" y="613" width="6.9746%" height="15" fill="rgb(243,49,53)" fg:x="127474438460" fg:w="10128819354"/><text x="88.0275%" y="623.50">matrixmul..</text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (10,125,286,974 samples, 6.97%)</title><rect x="87.7800%" y="597" width="6.9722%" height="15" fill="rgb(247,216,33)" fg:x="127477970840" fg:w="10125286974"/><text x="88.0300%" y="607.50">matrixmul..</text></g><g><title>matrixmultiply::gemm::masked_kernel (188,385,865 samples, 0.13%)</title><rect x="94.6224%" y="581" width="0.1297%" height="15" fill="rgb(226,26,14)" fg:x="137414871949" fg:w="188385865"/><text x="94.8724%" y="591.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (188,385,865 samples, 0.13%)</title><rect x="94.6224%" y="565" width="0.1297%" height="15" fill="rgb(215,49,53)" fg:x="137414871949" fg:w="188385865"/><text x="94.8724%" y="575.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (188,385,865 samples, 0.13%)</title><rect x="94.6224%" y="549" width="0.1297%" height="15" fill="rgb(245,162,40)" fg:x="137414871949" fg:w="188385865"/><text x="94.8724%" y="559.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (188,385,865 samples, 0.13%)</title><rect x="94.6224%" y="533" width="0.1297%" height="15" fill="rgb(229,68,17)" fg:x="137414871949" fg:w="188385865"/><text x="94.8724%" y="543.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (10,590,552,790 samples, 7.29%)</title><rect x="87.5672%" y="677" width="7.2925%" height="15" fill="rgb(213,182,10)" fg:x="127168979257" fg:w="10590552790"/><text x="87.8172%" y="687.50">matrixmult..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (10,285,093,587 samples, 7.08%)</title><rect x="87.7775%" y="661" width="7.0822%" height="15" fill="rgb(245,125,30)" fg:x="127474438460" fg:w="10285093587"/><text x="88.0275%" y="671.50">matrixmult..</text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (10,285,093,587 samples, 7.08%)</title><rect x="87.7775%" y="645" width="7.0822%" height="15" fill="rgb(232,202,2)" fg:x="127474438460" fg:w="10285093587"/><text x="88.0275%" y="655.50">matrixmult..</text></g><g><title>matrixmultiply::gemm::pack (156,274,233 samples, 0.11%)</title><rect x="94.7521%" y="629" width="0.1076%" height="15" fill="rgb(237,140,51)" fg:x="137603257814" fg:w="156274233"/><text x="95.0021%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (156,274,233 samples, 0.11%)</title><rect x="94.7521%" y="613" width="0.1076%" height="15" fill="rgb(236,157,25)" fg:x="137603257814" fg:w="156274233"/><text x="95.0021%" y="623.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (27,910,975 samples, 0.02%)</title><rect x="94.8693%" y="629" width="0.0192%" height="15" fill="rgb(219,209,0)" fg:x="137773488353" fg:w="27910975"/><text x="95.1193%" y="639.50"></text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (10,704,888,679 samples, 7.37%)</title><rect x="87.5672%" y="693" width="7.3713%" height="15" fill="rgb(240,116,54)" fg:x="127168979257" fg:w="10704888679"/><text x="87.8172%" y="703.50">nalgebra::..</text></g><g><title>nalgebra::base::blas_uninit::gemv_uninit (114,335,889 samples, 0.08%)</title><rect x="94.8597%" y="677" width="0.0787%" height="15" fill="rgb(216,10,36)" fg:x="137759532047" fg:w="114335889"/><text x="95.1097%" y="687.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (114,335,889 samples, 0.08%)</title><rect x="94.8597%" y="661" width="0.0787%" height="15" fill="rgb(222,72,44)" fg:x="137759532047" fg:w="114335889"/><text x="95.1097%" y="671.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (114,335,889 samples, 0.08%)</title><rect x="94.8597%" y="645" width="0.0787%" height="15" fill="rgb(232,159,9)" fg:x="137759532047" fg:w="114335889"/><text x="95.1097%" y="655.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (72,468,608 samples, 0.05%)</title><rect x="94.8886%" y="629" width="0.0499%" height="15" fill="rgb(210,39,32)" fg:x="137801399328" fg:w="72468608"/><text x="95.1386%" y="639.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (10,714,738,869 samples, 7.38%)</title><rect x="87.5672%" y="709" width="7.3781%" height="15" fill="rgb(216,194,45)" fg:x="127168979257" fg:w="10714738869"/><text x="87.8172%" y="719.50">nalgebra::..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;nalgebra::base::matrix::Matrix&lt;f64,R,C,S&gt;&gt; for f64&gt;::mul (56,164,047 samples, 0.04%)</title><rect x="94.9452%" y="709" width="0.0387%" height="15" fill="rgb(218,18,35)" fg:x="137883718126" fg:w="56164047"/><text x="95.1952%" y="719.50"></text></g><g><title>nalgebra::base::min_max::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::icamax (21,226,829 samples, 0.01%)</title><rect x="94.9935%" y="677" width="0.0146%" height="15" fill="rgb(207,83,51)" fg:x="137953762105" fg:w="21226829"/><text x="95.2435%" y="687.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (218,640,734 samples, 0.15%)</title><rect x="95.0081%" y="661" width="0.1506%" height="15" fill="rgb(225,63,43)" fg:x="137974988934" fg:w="218640734"/><text x="95.2581%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17,688,245 samples, 0.01%)</title><rect x="95.1586%" y="661" width="0.0122%" height="15" fill="rgb(207,57,36)" fg:x="138193629668" fg:w="17688245"/><text x="95.4086%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17,688,245 samples, 0.01%)</title><rect x="95.1586%" y="645" width="0.0122%" height="15" fill="rgb(216,99,33)" fg:x="138193629668" fg:w="17688245"/><text x="95.4086%" y="655.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2,366,596,380 samples, 1.63%)</title><rect x="95.8338%" y="597" width="1.6296%" height="15" fill="rgb(225,42,16)" fg:x="139174074565" fg:w="2366596380"/><text x="96.0838%" y="607.50"></text></g><g><title>[unknown] (31,590,416 samples, 0.02%)</title><rect x="97.4416%" y="581" width="0.0218%" height="15" fill="rgb(220,201,45)" fg:x="141509080529" fg:w="31590416"/><text x="97.6916%" y="591.50"></text></g><g><title>[unknown] (28,042,462 samples, 0.02%)</title><rect x="97.4441%" y="565" width="0.0193%" height="15" fill="rgb(225,33,4)" fg:x="141512628483" fg:w="28042462"/><text x="97.6941%" y="575.50"></text></g><g><title>[unknown] (28,042,462 samples, 0.02%)</title><rect x="97.4441%" y="549" width="0.0193%" height="15" fill="rgb(224,33,50)" fg:x="141512628483" fg:w="28042462"/><text x="97.6941%" y="559.50"></text></g><g><title>[unknown] (28,042,462 samples, 0.02%)</title><rect x="97.4441%" y="533" width="0.0193%" height="15" fill="rgb(246,198,51)" fg:x="141512628483" fg:w="28042462"/><text x="97.6941%" y="543.50"></text></g><g><title>[unknown] (28,042,462 samples, 0.02%)</title><rect x="97.4441%" y="517" width="0.0193%" height="15" fill="rgb(205,22,4)" fg:x="141512628483" fg:w="28042462"/><text x="97.6941%" y="527.50"></text></g><g><title>[unknown] (24,570,580 samples, 0.02%)</title><rect x="97.4465%" y="501" width="0.0169%" height="15" fill="rgb(206,3,8)" fg:x="141516100365" fg:w="24570580"/><text x="97.6965%" y="511.50"></text></g><g><title>[unknown] (24,570,580 samples, 0.02%)</title><rect x="97.4465%" y="485" width="0.0169%" height="15" fill="rgb(251,23,15)" fg:x="141516100365" fg:w="24570580"/><text x="97.6965%" y="495.50"></text></g><g><title>[unknown] (20,983,849 samples, 0.01%)</title><rect x="97.4489%" y="469" width="0.0144%" height="15" fill="rgb(252,88,28)" fg:x="141519687096" fg:w="20983849"/><text x="97.6989%" y="479.50"></text></g><g><title>[unknown] (20,983,849 samples, 0.01%)</title><rect x="97.4489%" y="453" width="0.0144%" height="15" fill="rgb(212,127,14)" fg:x="141519687096" fg:w="20983849"/><text x="97.6989%" y="463.50"></text></g><g><title>[unknown] (20,983,849 samples, 0.01%)</title><rect x="97.4489%" y="437" width="0.0144%" height="15" fill="rgb(247,145,37)" fg:x="141519687096" fg:w="20983849"/><text x="97.6989%" y="447.50"></text></g><g><title>[unknown] (17,527,078 samples, 0.01%)</title><rect x="97.4513%" y="421" width="0.0121%" height="15" fill="rgb(209,117,53)" fg:x="141523143867" fg:w="17527078"/><text x="97.7013%" y="431.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (2,086,122,539 samples, 1.44%)</title><rect x="97.4634%" y="597" width="1.4365%" height="15" fill="rgb(212,90,42)" fg:x="141540670945" fg:w="2086122539"/><text x="97.7134%" y="607.50"></text></g><g><title>nalgebra::linalg::lu::gauss_step (6,278,240,368 samples, 4.32%)</title><rect x="95.0081%" y="677" width="4.3231%" height="15" fill="rgb(218,164,37)" fg:x="137974988934" fg:w="6278240368"/><text x="95.2581%" y="687.50">nalge..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (6,041,911,389 samples, 4.16%)</title><rect x="95.1708%" y="661" width="4.1604%" height="15" fill="rgb(246,65,34)" fg:x="138211317913" fg:w="6041911389"/><text x="95.4208%" y="671.50">nalge..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (6,041,911,389 samples, 4.16%)</title><rect x="95.1708%" y="645" width="4.1604%" height="15" fill="rgb(231,100,33)" fg:x="138211317913" fg:w="6041911389"/><text x="95.4208%" y="655.50">nalge..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (6,041,911,389 samples, 4.16%)</title><rect x="95.1708%" y="629" width="4.1604%" height="15" fill="rgb(228,126,14)" fg:x="138211317913" fg:w="6041911389"/><text x="95.4208%" y="639.50">nalge..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (6,041,911,389 samples, 4.16%)</title><rect x="95.1708%" y="613" width="4.1604%" height="15" fill="rgb(215,173,21)" fg:x="138211317913" fg:w="6041911389"/><text x="95.4208%" y="623.50">nalge..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (626,435,818 samples, 0.43%)</title><rect x="98.8999%" y="597" width="0.4314%" height="15" fill="rgb(210,6,40)" fg:x="143626793484" fg:w="626435818"/><text x="99.1499%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (626,435,818 samples, 0.43%)</title><rect x="98.8999%" y="581" width="0.4314%" height="15" fill="rgb(212,48,18)" fg:x="143626793484" fg:w="626435818"/><text x="99.1499%" y="591.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (598,569,352 samples, 0.41%)</title><rect x="98.9190%" y="565" width="0.4122%" height="15" fill="rgb(230,214,11)" fg:x="143654659950" fg:w="598569352"/><text x="99.1690%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (598,569,352 samples, 0.41%)</title><rect x="98.9190%" y="549" width="0.4122%" height="15" fill="rgb(254,105,39)" fg:x="143654659950" fg:w="598569352"/><text x="99.1690%" y="559.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (272,776,786 samples, 0.19%)</title><rect x="99.3965%" y="597" width="0.1878%" height="15" fill="rgb(245,158,5)" fg:x="144348012575" fg:w="272776786"/><text x="99.6465%" y="607.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (255,287,607 samples, 0.18%)</title><rect x="99.5867%" y="597" width="0.1758%" height="15" fill="rgb(249,208,11)" fg:x="144624245335" fg:w="255287607"/><text x="99.8367%" y="607.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (657,774,620 samples, 0.45%)</title><rect x="99.3385%" y="661" width="0.4529%" height="15" fill="rgb(210,39,28)" fg:x="144263770843" fg:w="657774620"/><text x="99.5885%" y="671.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (657,774,620 samples, 0.45%)</title><rect x="99.3385%" y="645" width="0.4529%" height="15" fill="rgb(211,56,53)" fg:x="144263770843" fg:w="657774620"/><text x="99.5885%" y="655.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (657,774,620 samples, 0.45%)</title><rect x="99.3385%" y="629" width="0.4529%" height="15" fill="rgb(226,201,30)" fg:x="144263770843" fg:w="657774620"/><text x="99.5885%" y="639.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (657,774,620 samples, 0.45%)</title><rect x="99.3385%" y="613" width="0.4529%" height="15" fill="rgb(239,101,34)" fg:x="144263770843" fg:w="657774620"/><text x="99.5885%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (42,012,521 samples, 0.03%)</title><rect x="99.7625%" y="597" width="0.0289%" height="15" fill="rgb(226,209,5)" fg:x="144879532942" fg:w="42012521"/><text x="100.0125%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (42,012,521 samples, 0.03%)</title><rect x="99.7625%" y="581" width="0.0289%" height="15" fill="rgb(250,105,47)" fg:x="144879532942" fg:w="42012521"/><text x="100.0125%" y="591.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (42,012,521 samples, 0.03%)</title><rect x="99.7625%" y="565" width="0.0289%" height="15" fill="rgb(230,72,3)" fg:x="144879532942" fg:w="42012521"/><text x="100.0125%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (42,012,521 samples, 0.03%)</title><rect x="99.7625%" y="549" width="0.0289%" height="15" fill="rgb(232,218,39)" fg:x="144879532942" fg:w="42012521"/><text x="100.0125%" y="559.50"></text></g><g><title>nalgebra::linalg::decomposition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::lu (6,985,109,029 samples, 4.81%)</title><rect x="94.9839%" y="709" width="4.8099%" height="15" fill="rgb(248,166,6)" fg:x="137939882173" fg:w="6985109029"/><text x="95.2339%" y="719.50">nalgeb..</text></g><g><title>nalgebra::linalg::lu::LU&lt;T,R,C&gt;::new (6,985,109,029 samples, 4.81%)</title><rect x="94.9839%" y="693" width="4.8099%" height="15" fill="rgb(247,89,20)" fg:x="137939882173" fg:w="6985109029"/><text x="95.2339%" y="703.50">nalgeb..</text></g><g><title>nalgebra::linalg::lu::gauss_step_swap (671,761,900 samples, 0.46%)</title><rect x="99.3312%" y="677" width="0.4626%" height="15" fill="rgb(248,130,54)" fg:x="144253229302" fg:w="671761900"/><text x="99.5812%" y="687.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::solve_lower_triangular_with_diag_mut (43,446,728 samples, 0.03%)</title><rect x="99.7938%" y="677" width="0.0299%" height="15" fill="rgb(234,196,4)" fg:x="144924991202" fg:w="43446728"/><text x="100.0438%" y="687.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (43,446,728 samples, 0.03%)</title><rect x="99.7938%" y="661" width="0.0299%" height="15" fill="rgb(250,143,31)" fg:x="144924991202" fg:w="43446728"/><text x="100.0438%" y="671.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (43,446,728 samples, 0.03%)</title><rect x="99.7938%" y="645" width="0.0299%" height="15" fill="rgb(211,110,34)" fg:x="144924991202" fg:w="43446728"/><text x="100.0438%" y="655.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (43,446,728 samples, 0.03%)</title><rect x="99.7938%" y="629" width="0.0299%" height="15" fill="rgb(215,124,48)" fg:x="144924991202" fg:w="43446728"/><text x="100.0438%" y="639.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (43,446,728 samples, 0.03%)</title><rect x="99.7938%" y="613" width="0.0299%" height="15" fill="rgb(216,46,13)" fg:x="144924991202" fg:w="43446728"/><text x="100.0438%" y="623.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (36,502,566 samples, 0.03%)</title><rect x="99.7986%" y="597" width="0.0251%" height="15" fill="rgb(205,184,25)" fg:x="144931935364" fg:w="36502566"/><text x="100.0486%" y="607.50"></text></g><g><title>nalgebra::linalg::lu::LU&lt;T,D,D&gt;::solve (78,597,846 samples, 0.05%)</title><rect x="99.7938%" y="709" width="0.0541%" height="15" fill="rgb(228,1,10)" fg:x="144924991202" fg:w="78597846"/><text x="100.0438%" y="719.50"></text></g><g><title>nalgebra::linalg::lu::LU&lt;T,D,D&gt;::solve_mut (78,597,846 samples, 0.05%)</title><rect x="99.7938%" y="693" width="0.0541%" height="15" fill="rgb(213,116,27)" fg:x="144924991202" fg:w="78597846"/><text x="100.0438%" y="703.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::solve_upper_triangular_mut (35,151,118 samples, 0.02%)</title><rect x="99.8237%" y="677" width="0.0242%" height="15" fill="rgb(241,95,50)" fg:x="144968437930" fg:w="35151118"/><text x="100.0737%" y="687.50"></text></g><g><title>nalgebra::linalg::solve::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;&gt;::solve_upper_triangular_vector_mut (35,151,118 samples, 0.02%)</title><rect x="99.8237%" y="661" width="0.0242%" height="15" fill="rgb(238,48,32)" fg:x="144968437930" fg:w="35151118"/><text x="100.0737%" y="671.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (31,627,282 samples, 0.02%)</title><rect x="99.8261%" y="645" width="0.0218%" height="15" fill="rgb(235,113,49)" fg:x="144971961766" fg:w="31627282"/><text x="100.0761%" y="655.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (31,627,282 samples, 0.02%)</title><rect x="99.8261%" y="629" width="0.0218%" height="15" fill="rgb(205,127,43)" fg:x="144971961766" fg:w="31627282"/><text x="100.0761%" y="639.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (31,627,282 samples, 0.02%)</title><rect x="99.8261%" y="613" width="0.0218%" height="15" fill="rgb(250,162,2)" fg:x="144971961766" fg:w="31627282"/><text x="100.0761%" y="623.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (31,627,282 samples, 0.02%)</title><rect x="99.8261%" y="597" width="0.0218%" height="15" fill="rgb(220,13,41)" fg:x="144971961766" fg:w="31627282"/><text x="100.0761%" y="607.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (17,626,570 samples, 0.01%)</title><rect x="99.8358%" y="581" width="0.0121%" height="15" fill="rgb(249,221,25)" fg:x="144985962478" fg:w="17626570"/><text x="100.0858%" y="591.50"></text></g><g><title>&lt;matrixmultiply::dgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (18,971,001 samples, 0.01%)</title><rect x="99.8575%" y="533" width="0.0131%" height="15" fill="rgb(215,208,19)" fg:x="145017587144" fg:w="18971001"/><text x="100.1075%" y="543.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_target_fma (18,971,001 samples, 0.01%)</title><rect x="99.8575%" y="517" width="0.0131%" height="15" fill="rgb(236,175,2)" fg:x="145017587144" fg:w="18971001"/><text x="100.1075%" y="527.50"></text></g><g><title>matrixmultiply::dgemm_kernel::kernel_x86_avx (15,412,033 samples, 0.01%)</title><rect x="99.8600%" y="501" width="0.0106%" height="15" fill="rgb(241,52,2)" fg:x="145021146112" fg:w="15412033"/><text x="100.1100%" y="511.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (26,041,295 samples, 0.02%)</title><rect x="99.8575%" y="581" width="0.0179%" height="15" fill="rgb(248,140,14)" fg:x="145017587144" fg:w="26041295"/><text x="100.1075%" y="591.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (26,041,295 samples, 0.02%)</title><rect x="99.8575%" y="565" width="0.0179%" height="15" fill="rgb(253,22,42)" fg:x="145017587144" fg:w="26041295"/><text x="100.1075%" y="575.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::_{{closure}} (26,041,295 samples, 0.02%)</title><rect x="99.8575%" y="549" width="0.0179%" height="15" fill="rgb(234,61,47)" fg:x="145017587144" fg:w="26041295"/><text x="100.1075%" y="559.50"></text></g><g><title>ndarray::linalg::impl_linalg::_&lt;impl ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::dot (29,567,053 samples, 0.02%)</title><rect x="99.8575%" y="677" width="0.0204%" height="15" fill="rgb(208,226,15)" fg:x="145017587144" fg:w="29567053"/><text x="100.1075%" y="687.50"></text></g><g><title>&lt;ndarray::ArrayBase&lt;S,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt; as ndarray::linalg::impl_linalg::Dot&lt;ndarray::ArrayBase&lt;S2,ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;&gt;::dot (29,567,053 samples, 0.02%)</title><rect x="99.8575%" y="661" width="0.0204%" height="15" fill="rgb(217,221,4)" fg:x="145017587144" fg:w="29567053"/><text x="100.1075%" y="671.50"></text></g><g><title>ndarray::linalg::impl_linalg::mat_mul_general (29,567,053 samples, 0.02%)</title><rect x="99.8575%" y="645" width="0.0204%" height="15" fill="rgb(212,174,34)" fg:x="145017587144" fg:w="29567053"/><text x="100.1075%" y="655.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (29,567,053 samples, 0.02%)</title><rect x="99.8575%" y="629" width="0.0204%" height="15" fill="rgb(253,83,4)" fg:x="145017587144" fg:w="29567053"/><text x="100.1075%" y="639.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (29,567,053 samples, 0.02%)</title><rect x="99.8575%" y="613" width="0.0204%" height="15" fill="rgb(250,195,49)" fg:x="145017587144" fg:w="29567053"/><text x="100.1075%" y="623.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop::_{{closure}} (29,567,053 samples, 0.02%)</title><rect x="99.8575%" y="597" width="0.0204%" height="15" fill="rgb(241,192,25)" fg:x="145017587144" fg:w="29567053"/><text x="100.1075%" y="607.50"></text></g><g><title>rkl::core::optimizers::MarquardtOptimizer::update_weights (19,678,089,280 samples, 13.55%)</title><rect x="86.4329%" y="725" width="13.5501%" height="15" fill="rgb(208,124,10)" fg:x="125521644209" fg:w="19678089280"/><text x="86.6829%" y="735.50">rkl::core::optimizer..</text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::predict (196,144,441 samples, 0.14%)</title><rect x="99.8479%" y="709" width="0.1351%" height="15" fill="rgb(222,33,0)" fg:x="145003589048" fg:w="196144441"/><text x="100.0979%" y="719.50"></text></g><g><title>rkl::core::layers::Dense::forward (192,623,704 samples, 0.13%)</title><rect x="99.8503%" y="693" width="0.1326%" height="15" fill="rgb(234,209,28)" fg:x="145007109785" fg:w="192623704"/><text x="100.1003%" y="703.50"></text></g><g><title>rkl::core::activations::Activation::forward (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="677" width="0.1051%" height="15" fill="rgb(224,11,23)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="687.50"></text></g><g><title>rkl::core::activations::tanh_forward (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="661" width="0.1051%" height="15" fill="rgb(232,99,1)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="671.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="645" width="0.1051%" height="15" fill="rgb(237,95,45)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="655.50"></text></g><g><title>ndarray::impl_methods::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::map (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="629" width="0.1051%" height="15" fill="rgb(208,109,11)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="639.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_trusted_iter_unchecked (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="613" width="0.1051%" height="15" fill="rgb(216,190,48)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="623.50"></text></g><g><title>ndarray::iterators::to_vec_mapped (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="597" width="0.1051%" height="15" fill="rgb(251,171,36)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="581" width="0.1051%" height="15" fill="rgb(230,62,22)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="591.50"></text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="565" width="0.1051%" height="15" fill="rgb(225,114,35)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="575.50"></text></g><g><title>ndarray::impl_methods::_&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::mapv::_{{closure}} (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="549" width="0.1051%" height="15" fill="rgb(215,118,42)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="559.50"></text></g><g><title>rkl::core::activations::tanh_forward::_{{closure}} (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="533" width="0.1051%" height="15" fill="rgb(243,119,21)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="543.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::tanh (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="517" width="0.1051%" height="15" fill="rgb(252,177,53)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="527.50"></text></g><g><title>__tanh (152,579,292 samples, 0.11%)</title><rect x="99.8779%" y="501" width="0.1051%" height="15" fill="rgb(237,209,29)" fg:x="145047154197" fg:w="152579292"/><text x="100.1279%" y="511.50"></text></g><g><title>__expm1_fma (104,975,961 samples, 0.07%)</title><rect x="99.9107%" y="485" width="0.0723%" height="15" fill="rgb(212,65,23)" fg:x="145094757528" fg:w="104975961"/><text x="100.1607%" y="495.50"></text></g><g><title>rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit (145,074,412,445 samples, 99.90%)</title><rect x="0.0887%" y="741" width="99.8967%" height="15" fill="rgb(230,222,46)" fg:x="128839906" fg:w="145074412445"/><text x="0.3387%" y="751.50">rkl::models::Sequential&lt;rkl::core::layers::Dense&gt;::fit</text></g><g><title>__libc_start_main_impl (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="997" width="99.9040%" height="15" fill="rgb(215,135,32)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="1007.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="981" width="99.9040%" height="15" fill="rgb(246,101,22)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="991.50">__libc_start_call_main</text></g><g><title>main (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="965" width="99.9040%" height="15" fill="rgb(206,107,13)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="975.50">main</text></g><g><title>std::rt::lang_start_internal (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="949" width="99.9040%" height="15" fill="rgb(250,100,44)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="959.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="933" width="99.9040%" height="15" fill="rgb(231,147,38)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="917" width="99.9040%" height="15" fill="rgb(229,8,40)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="901" width="99.9040%" height="15" fill="rgb(221,135,30)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="911.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="885" width="99.9040%" height="15" fill="rgb(249,193,18)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="895.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="869" width="99.9040%" height="15" fill="rgb(209,133,39)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="853" width="99.9040%" height="15" fill="rgb(232,100,14)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="837" width="99.9040%" height="15" fill="rgb(224,185,1)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="847.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="821" width="99.9040%" height="15" fill="rgb(223,139,8)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="831.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="805" width="99.9040%" height="15" fill="rgb(232,213,38)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="815.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="789" width="99.9040%" height="15" fill="rgb(207,94,22)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="799.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="773" width="99.9040%" height="15" fill="rgb(219,183,54)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="783.50">core::ops::function::FnOnce::call_once</text></g><g><title>main_benchmark::main (145,084,986,617 samples, 99.90%)</title><rect x="0.0863%" y="757" width="99.9040%" height="15" fill="rgb(216,185,54)" fg:x="125320350" fg:w="145084986617"/><text x="0.3363%" y="767.50">main_benchmark::main</text></g><g><title>_start (145,097,409,224 samples, 99.91%)</title><rect x="0.0863%" y="1013" width="99.9125%" height="15" fill="rgb(254,217,39)" fg:x="125320350" fg:w="145097409224"/><text x="0.3363%" y="1023.50">_start</text></g><g><title>main_benchmark (145,224,328,004 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="99.9999%" height="15" fill="rgb(240,178,23)" fg:x="0" fg:w="145224328004"/><text x="0.2500%" y="1039.50">main_benchmark</text></g><g><title>all (145,224,465,221 samples, 100%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(218,11,47)" fg:x="0" fg:w="145224465221"/><text x="0.2500%" y="1055.50"></text></g></svg></svg>